var cf=Object.defineProperty;var ff=(n,a,r)=>a in n?cf(n,a,{enumerable:!0,configurable:!0,writable:!0,value:r}):n[a]=r;var C1=(n,a,r)=>ff(n,typeof a!="symbol"?a+"":a,r);(function(){const a=document.createElement("link").relList;if(a&&a.supports&&a.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))l(s);new MutationObserver(s=>{for(const c of s)if(c.type==="childList")for(const d of c.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&l(d)}).observe(document,{childList:!0,subtree:!0});function r(s){const c={};return s.integrity&&(c.integrity=s.integrity),s.referrerPolicy&&(c.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?c.credentials="include":s.crossOrigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function l(s){if(s.ep)return;s.ep=!0;const c=r(s);fetch(s.href,c)}})();function cl(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}var To={exports:{}},Fn={};/**
 * @license React
 * react-jsx-runtime.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var H9;function df(){if(H9)return Fn;H9=1;var n=Symbol.for("react.transitional.element"),a=Symbol.for("react.fragment");function r(l,s,c){var d=null;if(c!==void 0&&(d=""+c),s.key!==void 0&&(d=""+s.key),"key"in s){c={};for(var h in s)h!=="key"&&(c[h]=s[h])}else c=s;return s=c.ref,{$$typeof:n,type:l,key:d,ref:s!==void 0?s:null,props:c}}return Fn.Fragment=a,Fn.jsx=r,Fn.jsxs=r,Fn}var V9;function pf(){return V9||(V9=1,To.exports=df()),To.exports}var T1=pf(),Co={exports:{}},$n={},Mo={exports:{}},Oo={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var F9;function hf(){return F9||(F9=1,function(n){function a(M,q){var P=M.length;M.push(q);e:for(;0<P;){var x1=P-1>>>1,b=M[x1];if(0<s(b,q))M[x1]=q,M[P]=b,P=x1;else break e}}function r(M){return M.length===0?null:M[0]}function l(M){if(M.length===0)return null;var q=M[0],P=M.pop();if(P!==q){M[0]=P;e:for(var x1=0,b=M.length,Z=b>>>1;x1<Z;){var h1=2*(x1+1)-1,T=M[h1],a1=h1+1,E1=M[a1];if(0>s(T,P))a1<b&&0>s(E1,T)?(M[x1]=E1,M[a1]=P,x1=a1):(M[x1]=T,M[h1]=P,x1=h1);else if(a1<b&&0>s(E1,P))M[x1]=E1,M[a1]=P,x1=a1;else break e}}return q}function s(M,q){var P=M.sortIndex-q.sortIndex;return P!==0?P:M.id-q.id}if(n.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var c=performance;n.unstable_now=function(){return c.now()}}else{var d=Date,h=d.now();n.unstable_now=function(){return d.now()-h}}var v=[],p=[],_=1,w=null,k=3,S=!1,B=!1,V=!1,e1=typeof setTimeout=="function"?setTimeout:null,$=typeof clearTimeout=="function"?clearTimeout:null,n1=typeof setImmediate<"u"?setImmediate:null;function o1(M){for(var q=r(p);q!==null;){if(q.callback===null)l(p);else if(q.startTime<=M)l(p),q.sortIndex=q.expirationTime,a(v,q);else break;q=r(p)}}function A1(M){if(V=!1,o1(M),!B)if(r(v)!==null)B=!0,l1();else{var q=r(p);q!==null&&s1(A1,q.startTime-M)}}var i1=!1,I=-1,v1=5,_1=-1;function t1(){return!(n.unstable_now()-_1<v1)}function f1(){if(i1){var M=n.unstable_now();_1=M;var q=!0;try{e:{B=!1,V&&(V=!1,$(I),I=-1),S=!0;var P=k;try{t:{for(o1(M),w=r(v);w!==null&&!(w.expirationTime>M&&t1());){var x1=w.callback;if(typeof x1=="function"){w.callback=null,k=w.priorityLevel;var b=x1(w.expirationTime<=M);if(M=n.unstable_now(),typeof b=="function"){w.callback=b,o1(M),q=!0;break t}w===r(v)&&l(v),o1(M)}else l(v);w=r(v)}if(w!==null)q=!0;else{var Z=r(p);Z!==null&&s1(A1,Z.startTime-M),q=!1}}break e}finally{w=null,k=P,S=!1}q=void 0}}finally{q?u1():i1=!1}}}var u1;if(typeof n1=="function")u1=function(){n1(f1)};else if(typeof MessageChannel<"u"){var c1=new MessageChannel,Q=c1.port2;c1.port1.onmessage=f1,u1=function(){Q.postMessage(null)}}else u1=function(){e1(f1,0)};function l1(){i1||(i1=!0,u1())}function s1(M,q){I=e1(function(){M(n.unstable_now())},q)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(M){M.callback=null},n.unstable_continueExecution=function(){B||S||(B=!0,l1())},n.unstable_forceFrameRate=function(M){0>M||125<M?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):v1=0<M?Math.floor(1e3/M):5},n.unstable_getCurrentPriorityLevel=function(){return k},n.unstable_getFirstCallbackNode=function(){return r(v)},n.unstable_next=function(M){switch(k){case 1:case 2:case 3:var q=3;break;default:q=k}var P=k;k=q;try{return M()}finally{k=P}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(M,q){switch(M){case 1:case 2:case 3:case 4:case 5:break;default:M=3}var P=k;k=M;try{return q()}finally{k=P}},n.unstable_scheduleCallback=function(M,q,P){var x1=n.unstable_now();switch(typeof P=="object"&&P!==null?(P=P.delay,P=typeof P=="number"&&0<P?x1+P:x1):P=x1,M){case 1:var b=-1;break;case 2:b=250;break;case 5:b=1073741823;break;case 4:b=1e4;break;default:b=5e3}return b=P+b,M={id:_++,callback:q,priorityLevel:M,startTime:P,expirationTime:b,sortIndex:-1},P>x1?(M.sortIndex=P,a(p,M),r(v)===null&&M===r(p)&&(V?($(I),I=-1):V=!0,s1(A1,P-x1))):(M.sortIndex=b,a(v,M),B||S||(B=!0,l1())),M},n.unstable_shouldYield=t1,n.unstable_wrapCallback=function(M){var q=k;return function(){var P=k;k=q;try{return M.apply(this,arguments)}finally{k=P}}}}(Oo)),Oo}var $9;function mf(){return $9||($9=1,Mo.exports=hf()),Mo.exports}var Do={exports:{}},I1={};/**
 * @license React
 * react.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var P9;function gf(){if(P9)return I1;P9=1;var n=Symbol.for("react.transitional.element"),a=Symbol.for("react.portal"),r=Symbol.for("react.fragment"),l=Symbol.for("react.strict_mode"),s=Symbol.for("react.profiler"),c=Symbol.for("react.consumer"),d=Symbol.for("react.context"),h=Symbol.for("react.forward_ref"),v=Symbol.for("react.suspense"),p=Symbol.for("react.memo"),_=Symbol.for("react.lazy"),w=Symbol.iterator;function k(b){return b===null||typeof b!="object"?null:(b=w&&b[w]||b["@@iterator"],typeof b=="function"?b:null)}var S={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},B=Object.assign,V={};function e1(b,Z,h1){this.props=b,this.context=Z,this.refs=V,this.updater=h1||S}e1.prototype.isReactComponent={},e1.prototype.setState=function(b,Z){if(typeof b!="object"&&typeof b!="function"&&b!=null)throw Error("takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,b,Z,"setState")},e1.prototype.forceUpdate=function(b){this.updater.enqueueForceUpdate(this,b,"forceUpdate")};function $(){}$.prototype=e1.prototype;function n1(b,Z,h1){this.props=b,this.context=Z,this.refs=V,this.updater=h1||S}var o1=n1.prototype=new $;o1.constructor=n1,B(o1,e1.prototype),o1.isPureReactComponent=!0;var A1=Array.isArray,i1={H:null,A:null,T:null,S:null},I=Object.prototype.hasOwnProperty;function v1(b,Z,h1,T,a1,E1){return h1=E1.ref,{$$typeof:n,type:b,key:Z,ref:h1!==void 0?h1:null,props:E1}}function _1(b,Z){return v1(b.type,Z,void 0,void 0,void 0,b.props)}function t1(b){return typeof b=="object"&&b!==null&&b.$$typeof===n}function f1(b){var Z={"=":"=0",":":"=2"};return"$"+b.replace(/[=:]/g,function(h1){return Z[h1]})}var u1=/\/+/g;function c1(b,Z){return typeof b=="object"&&b!==null&&b.key!=null?f1(""+b.key):Z.toString(36)}function Q(){}function l1(b){switch(b.status){case"fulfilled":return b.value;case"rejected":throw b.reason;default:switch(typeof b.status=="string"?b.then(Q,Q):(b.status="pending",b.then(function(Z){b.status==="pending"&&(b.status="fulfilled",b.value=Z)},function(Z){b.status==="pending"&&(b.status="rejected",b.reason=Z)})),b.status){case"fulfilled":return b.value;case"rejected":throw b.reason}}throw b}function s1(b,Z,h1,T,a1){var E1=typeof b;(E1==="undefined"||E1==="boolean")&&(b=null);var g1=!1;if(b===null)g1=!0;else switch(E1){case"bigint":case"string":case"number":g1=!0;break;case"object":switch(b.$$typeof){case n:case a:g1=!0;break;case _:return g1=b._init,s1(g1(b._payload),Z,h1,T,a1)}}if(g1)return a1=a1(b),g1=T===""?"."+c1(b,0):T,A1(a1)?(h1="",g1!=null&&(h1=g1.replace(u1,"$&/")+"/"),s1(a1,Z,h1,"",function(e2){return e2})):a1!=null&&(t1(a1)&&(a1=_1(a1,h1+(a1.key==null||b&&b.key===a1.key?"":(""+a1.key).replace(u1,"$&/")+"/")+g1)),Z.push(a1)),1;g1=0;var o2=T===""?".":T+":";if(A1(b))for(var N1=0;N1<b.length;N1++)T=b[N1],E1=o2+c1(T,N1),g1+=s1(T,Z,h1,E1,a1);else if(N1=k(b),typeof N1=="function")for(b=N1.call(b),N1=0;!(T=b.next()).done;)T=T.value,E1=o2+c1(T,N1++),g1+=s1(T,Z,h1,E1,a1);else if(E1==="object"){if(typeof b.then=="function")return s1(l1(b),Z,h1,T,a1);throw Z=String(b),Error("Objects are not valid as a React child (found: "+(Z==="[object Object]"?"object with keys {"+Object.keys(b).join(", ")+"}":Z)+"). If you meant to render a collection of children, use an array instead.")}return g1}function M(b,Z,h1){if(b==null)return b;var T=[],a1=0;return s1(b,T,"","",function(E1){return Z.call(h1,E1,a1++)}),T}function q(b){if(b._status===-1){var Z=b._result;Z=Z(),Z.then(function(h1){(b._status===0||b._status===-1)&&(b._status=1,b._result=h1)},function(h1){(b._status===0||b._status===-1)&&(b._status=2,b._result=h1)}),b._status===-1&&(b._status=0,b._result=Z)}if(b._status===1)return b._result.default;throw b._result}var P=typeof reportError=="function"?reportError:function(b){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var Z=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof b=="object"&&b!==null&&typeof b.message=="string"?String(b.message):String(b),error:b});if(!window.dispatchEvent(Z))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",b);return}console.error(b)};function x1(){}return I1.Children={map:M,forEach:function(b,Z,h1){M(b,function(){Z.apply(this,arguments)},h1)},count:function(b){var Z=0;return M(b,function(){Z++}),Z},toArray:function(b){return M(b,function(Z){return Z})||[]},only:function(b){if(!t1(b))throw Error("React.Children.only expected to receive a single React element child.");return b}},I1.Component=e1,I1.Fragment=r,I1.Profiler=s,I1.PureComponent=n1,I1.StrictMode=l,I1.Suspense=v,I1.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=i1,I1.act=function(){throw Error("act(...) is not supported in production builds of React.")},I1.cache=function(b){return function(){return b.apply(null,arguments)}},I1.cloneElement=function(b,Z,h1){if(b==null)throw Error("The argument must be a React element, but you passed "+b+".");var T=B({},b.props),a1=b.key,E1=void 0;if(Z!=null)for(g1 in Z.ref!==void 0&&(E1=void 0),Z.key!==void 0&&(a1=""+Z.key),Z)!I.call(Z,g1)||g1==="key"||g1==="__self"||g1==="__source"||g1==="ref"&&Z.ref===void 0||(T[g1]=Z[g1]);var g1=arguments.length-2;if(g1===1)T.children=h1;else if(1<g1){for(var o2=Array(g1),N1=0;N1<g1;N1++)o2[N1]=arguments[N1+2];T.children=o2}return v1(b.type,a1,void 0,void 0,E1,T)},I1.createContext=function(b){return b={$$typeof:d,_currentValue:b,_currentValue2:b,_threadCount:0,Provider:null,Consumer:null},b.Provider=b,b.Consumer={$$typeof:c,_context:b},b},I1.createElement=function(b,Z,h1){var T,a1={},E1=null;if(Z!=null)for(T in Z.key!==void 0&&(E1=""+Z.key),Z)I.call(Z,T)&&T!=="key"&&T!=="__self"&&T!=="__source"&&(a1[T]=Z[T]);var g1=arguments.length-2;if(g1===1)a1.children=h1;else if(1<g1){for(var o2=Array(g1),N1=0;N1<g1;N1++)o2[N1]=arguments[N1+2];a1.children=o2}if(b&&b.defaultProps)for(T in g1=b.defaultProps,g1)a1[T]===void 0&&(a1[T]=g1[T]);return v1(b,E1,void 0,void 0,null,a1)},I1.createRef=function(){return{current:null}},I1.forwardRef=function(b){return{$$typeof:h,render:b}},I1.isValidElement=t1,I1.lazy=function(b){return{$$typeof:_,_payload:{_status:-1,_result:b},_init:q}},I1.memo=function(b,Z){return{$$typeof:p,type:b,compare:Z===void 0?null:Z}},I1.startTransition=function(b){var Z=i1.T,h1={};i1.T=h1;try{var T=b(),a1=i1.S;a1!==null&&a1(h1,T),typeof T=="object"&&T!==null&&typeof T.then=="function"&&T.then(x1,P)}catch(E1){P(E1)}finally{i1.T=Z}},I1.unstable_useCacheRefresh=function(){return i1.H.useCacheRefresh()},I1.use=function(b){return i1.H.use(b)},I1.useActionState=function(b,Z,h1){return i1.H.useActionState(b,Z,h1)},I1.useCallback=function(b,Z){return i1.H.useCallback(b,Z)},I1.useContext=function(b){return i1.H.useContext(b)},I1.useDebugValue=function(){},I1.useDeferredValue=function(b,Z){return i1.H.useDeferredValue(b,Z)},I1.useEffect=function(b,Z){return i1.H.useEffect(b,Z)},I1.useId=function(){return i1.H.useId()},I1.useImperativeHandle=function(b,Z,h1){return i1.H.useImperativeHandle(b,Z,h1)},I1.useInsertionEffect=function(b,Z){return i1.H.useInsertionEffect(b,Z)},I1.useLayoutEffect=function(b,Z){return i1.H.useLayoutEffect(b,Z)},I1.useMemo=function(b,Z){return i1.H.useMemo(b,Z)},I1.useOptimistic=function(b,Z){return i1.H.useOptimistic(b,Z)},I1.useReducer=function(b,Z,h1){return i1.H.useReducer(b,Z,h1)},I1.useRef=function(b){return i1.H.useRef(b)},I1.useState=function(b){return i1.H.useState(b)},I1.useSyncExternalStore=function(b,Z,h1){return i1.H.useSyncExternalStore(b,Z,h1)},I1.useTransition=function(){return i1.H.useTransition()},I1.version="19.0.0",I1}var Y9;function fl(){return Y9||(Y9=1,Do.exports=gf()),Do.exports}var Lo={exports:{}},a3={};/**
 * @license React
 * react-dom.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Q9;function yf(){if(Q9)return a3;Q9=1;var n=fl();function a(v){var p="https://react.dev/errors/"+v;if(1<arguments.length){p+="?args[]="+encodeURIComponent(arguments[1]);for(var _=2;_<arguments.length;_++)p+="&args[]="+encodeURIComponent(arguments[_])}return"Minified React error #"+v+"; visit "+p+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function r(){}var l={d:{f:r,r:function(){throw Error(a(522))},D:r,C:r,L:r,m:r,X:r,S:r,M:r},p:0,findDOMNode:null},s=Symbol.for("react.portal");function c(v,p,_){var w=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:s,key:w==null?null:""+w,children:v,containerInfo:p,implementation:_}}var d=n.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;function h(v,p){if(v==="font")return"";if(typeof p=="string")return p==="use-credentials"?p:""}return a3.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=l,a3.createPortal=function(v,p){var _=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!p||p.nodeType!==1&&p.nodeType!==9&&p.nodeType!==11)throw Error(a(299));return c(v,p,null,_)},a3.flushSync=function(v){var p=d.T,_=l.p;try{if(d.T=null,l.p=2,v)return v()}finally{d.T=p,l.p=_,l.d.f()}},a3.preconnect=function(v,p){typeof v=="string"&&(p?(p=p.crossOrigin,p=typeof p=="string"?p==="use-credentials"?p:"":void 0):p=null,l.d.C(v,p))},a3.prefetchDNS=function(v){typeof v=="string"&&l.d.D(v)},a3.preinit=function(v,p){if(typeof v=="string"&&p&&typeof p.as=="string"){var _=p.as,w=h(_,p.crossOrigin),k=typeof p.integrity=="string"?p.integrity:void 0,S=typeof p.fetchPriority=="string"?p.fetchPriority:void 0;_==="style"?l.d.S(v,typeof p.precedence=="string"?p.precedence:void 0,{crossOrigin:w,integrity:k,fetchPriority:S}):_==="script"&&l.d.X(v,{crossOrigin:w,integrity:k,fetchPriority:S,nonce:typeof p.nonce=="string"?p.nonce:void 0})}},a3.preinitModule=function(v,p){if(typeof v=="string")if(typeof p=="object"&&p!==null){if(p.as==null||p.as==="script"){var _=h(p.as,p.crossOrigin);l.d.M(v,{crossOrigin:_,integrity:typeof p.integrity=="string"?p.integrity:void 0,nonce:typeof p.nonce=="string"?p.nonce:void 0})}}else p==null&&l.d.M(v)},a3.preload=function(v,p){if(typeof v=="string"&&typeof p=="object"&&p!==null&&typeof p.as=="string"){var _=p.as,w=h(_,p.crossOrigin);l.d.L(v,_,{crossOrigin:w,integrity:typeof p.integrity=="string"?p.integrity:void 0,nonce:typeof p.nonce=="string"?p.nonce:void 0,type:typeof p.type=="string"?p.type:void 0,fetchPriority:typeof p.fetchPriority=="string"?p.fetchPriority:void 0,referrerPolicy:typeof p.referrerPolicy=="string"?p.referrerPolicy:void 0,imageSrcSet:typeof p.imageSrcSet=="string"?p.imageSrcSet:void 0,imageSizes:typeof p.imageSizes=="string"?p.imageSizes:void 0,media:typeof p.media=="string"?p.media:void 0})}},a3.preloadModule=function(v,p){if(typeof v=="string")if(p){var _=h(p.as,p.crossOrigin);l.d.m(v,{as:typeof p.as=="string"&&p.as!=="script"?p.as:void 0,crossOrigin:_,integrity:typeof p.integrity=="string"?p.integrity:void 0})}else l.d.m(v)},a3.requestFormReset=function(v){l.d.r(v)},a3.unstable_batchedUpdates=function(v,p){return v(p)},a3.useFormState=function(v,p,_){return d.H.useFormState(v,p,_)},a3.useFormStatus=function(){return d.H.useHostTransitionStatus()},a3.version="19.0.0",a3}var X9;function vf(){if(X9)return Lo.exports;X9=1;function n(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(n)}catch(a){console.error(a)}}return n(),Lo.exports=yf(),Lo.exports}/**
 * @license React
 * react-dom-client.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var G9;function bf(){if(G9)return $n;G9=1;var n=mf(),a=fl(),r=vf();function l(e){var t="https://react.dev/errors/"+e;if(1<arguments.length){t+="?args[]="+encodeURIComponent(arguments[1]);for(var i=2;i<arguments.length;i++)t+="&args[]="+encodeURIComponent(arguments[i])}return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function s(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11)}var c=Symbol.for("react.element"),d=Symbol.for("react.transitional.element"),h=Symbol.for("react.portal"),v=Symbol.for("react.fragment"),p=Symbol.for("react.strict_mode"),_=Symbol.for("react.profiler"),w=Symbol.for("react.provider"),k=Symbol.for("react.consumer"),S=Symbol.for("react.context"),B=Symbol.for("react.forward_ref"),V=Symbol.for("react.suspense"),e1=Symbol.for("react.suspense_list"),$=Symbol.for("react.memo"),n1=Symbol.for("react.lazy"),o1=Symbol.for("react.offscreen"),A1=Symbol.for("react.memo_cache_sentinel"),i1=Symbol.iterator;function I(e){return e===null||typeof e!="object"?null:(e=i1&&e[i1]||e["@@iterator"],typeof e=="function"?e:null)}var v1=Symbol.for("react.client.reference");function _1(e){if(e==null)return null;if(typeof e=="function")return e.$$typeof===v1?null:e.displayName||e.name||null;if(typeof e=="string")return e;switch(e){case v:return"Fragment";case h:return"Portal";case _:return"Profiler";case p:return"StrictMode";case V:return"Suspense";case e1:return"SuspenseList"}if(typeof e=="object")switch(e.$$typeof){case S:return(e.displayName||"Context")+".Provider";case k:return(e._context.displayName||"Context")+".Consumer";case B:var t=e.render;return e=e.displayName,e||(e=t.displayName||t.name||"",e=e!==""?"ForwardRef("+e+")":"ForwardRef"),e;case $:return t=e.displayName||null,t!==null?t:_1(e.type)||"Memo";case n1:t=e._payload,e=e._init;try{return _1(e(t))}catch{}}return null}var t1=a.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,f1=Object.assign,u1,c1;function Q(e){if(u1===void 0)try{throw Error()}catch(i){var t=i.stack.trim().match(/\n( *(at )?)/);u1=t&&t[1]||"",c1=-1<i.stack.indexOf(`
    at`)?" (<anonymous>)":-1<i.stack.indexOf("@")?"@unknown:0:0":""}return`
`+u1+e+c1}var l1=!1;function s1(e,t){if(!e||l1)return"";l1=!0;var i=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var o={DetermineComponentFrameRoot:function(){try{if(t){var K=function(){throw Error()};if(Object.defineProperty(K.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(K,[])}catch(H){var N=H}Reflect.construct(e,[],K)}else{try{K.call()}catch(H){N=H}e.call(K.prototype)}}else{try{throw Error()}catch(H){N=H}(K=e())&&typeof K.catch=="function"&&K.catch(function(){})}}catch(H){if(H&&N&&typeof H.stack=="string")return[H.stack,N.stack]}return[null,null]}};o.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var u=Object.getOwnPropertyDescriptor(o.DetermineComponentFrameRoot,"name");u&&u.configurable&&Object.defineProperty(o.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var f=o.DetermineComponentFrameRoot(),g=f[0],x=f[1];if(g&&x){var C=g.split(`
`),L=x.split(`
`);for(u=o=0;o<C.length&&!C[o].includes("DetermineComponentFrameRoot");)o++;for(;u<L.length&&!L[u].includes("DetermineComponentFrameRoot");)u++;if(o===C.length||u===L.length)for(o=C.length-1,u=L.length-1;1<=o&&0<=u&&C[o]!==L[u];)u--;for(;1<=o&&0<=u;o--,u--)if(C[o]!==L[u]){if(o!==1||u!==1)do if(o--,u--,0>u||C[o]!==L[u]){var Y=`
`+C[o].replace(" at new "," at ");return e.displayName&&Y.includes("<anonymous>")&&(Y=Y.replace("<anonymous>",e.displayName)),Y}while(1<=o&&0<=u);break}}}finally{l1=!1,Error.prepareStackTrace=i}return(i=e?e.displayName||e.name:"")?Q(i):""}function M(e){switch(e.tag){case 26:case 27:case 5:return Q(e.type);case 16:return Q("Lazy");case 13:return Q("Suspense");case 19:return Q("SuspenseList");case 0:case 15:return e=s1(e.type,!1),e;case 11:return e=s1(e.type.render,!1),e;case 1:return e=s1(e.type,!0),e;default:return""}}function q(e){try{var t="";do t+=M(e),e=e.return;while(e);return t}catch(i){return`
Error generating stack: `+i.message+`
`+i.stack}}function P(e){var t=e,i=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do t=e,(t.flags&4098)!==0&&(i=t.return),e=t.return;while(e)}return t.tag===3?i:null}function x1(e){if(e.tag===13){var t=e.memoizedState;if(t===null&&(e=e.alternate,e!==null&&(t=e.memoizedState)),t!==null)return t.dehydrated}return null}function b(e){if(P(e)!==e)throw Error(l(188))}function Z(e){var t=e.alternate;if(!t){if(t=P(e),t===null)throw Error(l(188));return t!==e?null:e}for(var i=e,o=t;;){var u=i.return;if(u===null)break;var f=u.alternate;if(f===null){if(o=u.return,o!==null){i=o;continue}break}if(u.child===f.child){for(f=u.child;f;){if(f===i)return b(u),e;if(f===o)return b(u),t;f=f.sibling}throw Error(l(188))}if(i.return!==o.return)i=u,o=f;else{for(var g=!1,x=u.child;x;){if(x===i){g=!0,i=u,o=f;break}if(x===o){g=!0,o=u,i=f;break}x=x.sibling}if(!g){for(x=f.child;x;){if(x===i){g=!0,i=f,o=u;break}if(x===o){g=!0,o=f,i=u;break}x=x.sibling}if(!g)throw Error(l(189))}}if(i.alternate!==o)throw Error(l(190))}if(i.tag!==3)throw Error(l(188));return i.stateNode.current===i?e:t}function h1(e){var t=e.tag;if(t===5||t===26||t===27||t===6)return e;for(e=e.child;e!==null;){if(t=h1(e),t!==null)return t;e=e.sibling}return null}var T=Array.isArray,a1=r.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,E1={pending:!1,data:null,method:null,action:null},g1=[],o2=-1;function N1(e){return{current:e}}function e2(e){0>o2||(e.current=g1[o2],g1[o2]=null,o2--)}function V1(e,t){o2++,g1[o2]=e.current,e.current=t}var M2=N1(null),Z3=N1(null),W2=N1(null),_3=N1(null);function l3(e,t){switch(V1(W2,t),V1(Z3,e),V1(M2,null),e=t.nodeType,e){case 9:case 11:t=(t=t.documentElement)&&(t=t.namespaceURI)?g9(t):0;break;default:if(e=e===8?t.parentNode:t,t=e.tagName,e=e.namespaceURI)e=g9(e),t=y9(e,t);else switch(t){case"svg":t=1;break;case"math":t=2;break;default:t=0}}e2(M2),V1(M2,t)}function p3(){e2(M2),e2(Z3),e2(W2)}function z3(e){e.memoizedState!==null&&V1(_3,e);var t=M2.current,i=y9(t,e.type);t!==i&&(V1(Z3,e),V1(M2,i))}function s3(e){Z3.current===e&&(e2(M2),e2(Z3)),_3.current===e&&(e2(_3),jn._currentValue=E1)}var be=Object.prototype.hasOwnProperty,g2=n.unstable_scheduleCallback,R1=n.unstable_cancelCallback,q0=n.unstable_shouldYield,u3=n.unstable_requestPaint,e3=n.unstable_now,ht=n.unstable_getCurrentPriorityLevel,F=n.unstable_ImmediatePriority,r1=n.unstable_UserBlockingPriority,S1=n.unstable_NormalPriority,B1=n.unstable_LowPriority,G1=n.unstable_IdlePriority,B2=n.log,c3=n.unstable_setDisableYieldValue,O2=null,m2=null;function le(e){if(m2&&typeof m2.onCommitFiberRoot=="function")try{m2.onCommitFiberRoot(O2,e,void 0,(e.current.flags&128)===128)}catch{}}function l2(e){if(typeof B2=="function"&&c3(e),m2&&typeof m2.setStrictMode=="function")try{m2.setStrictMode(O2,e)}catch{}}var x2=Math.clz32?Math.clz32:Ca,w3=Math.log,H0=Math.LN2;function Ca(e){return e>>>=0,e===0?32:31-(w3(e)/H0|0)|0}var Yt=128,Qt=4194304;function x3(e){var t=e&42;if(t!==0)return t;switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e&4194176;case 4194304:case 8388608:case 16777216:case 33554432:return e&62914560;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return e}}function mt(e,t){var i=e.pendingLanes;if(i===0)return 0;var o=0,u=e.suspendedLanes,f=e.pingedLanes,g=e.warmLanes;e=e.finishedLanes!==0;var x=i&134217727;return x!==0?(i=x&~u,i!==0?o=x3(i):(f&=x,f!==0?o=x3(f):e||(g=x&~g,g!==0&&(o=x3(g))))):(x=i&~u,x!==0?o=x3(x):f!==0?o=x3(f):e||(g=i&~g,g!==0&&(o=x3(g)))),o===0?0:t!==0&&t!==o&&(t&u)===0&&(u=o&-o,g=t&-t,u>=g||u===32&&(g&4194176)!==0)?t:o}function q2(e,t){return(e.pendingLanes&~(e.suspendedLanes&~e.pingedLanes)&t)===0}function Ma(e,t){switch(e){case 1:case 2:case 4:case 8:return t+250;case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;case 4194304:case 8388608:case 16777216:case 33554432:return-1;case 67108864:case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function ai(){var e=Yt;return Yt<<=1,(Yt&4194176)===0&&(Yt=128),e}function H2(){var e=Qt;return Qt<<=1,(Qt&62914560)===0&&(Qt=4194304),e}function Xt(e){for(var t=[],i=0;31>i;i++)t.push(e);return t}function He(e,t){e.pendingLanes|=t,t!==268435456&&(e.suspendedLanes=0,e.pingedLanes=0,e.warmLanes=0)}function Gt(e,t,i,o,u,f){var g=e.pendingLanes;e.pendingLanes=i,e.suspendedLanes=0,e.pingedLanes=0,e.warmLanes=0,e.expiredLanes&=i,e.entangledLanes&=i,e.errorRecoveryDisabledLanes&=i,e.shellSuspendCounter=0;var x=e.entanglements,C=e.expirationTimes,L=e.hiddenUpdates;for(i=g&~i;0<i;){var Y=31-x2(i),K=1<<Y;x[Y]=0,C[Y]=-1;var N=L[Y];if(N!==null)for(L[Y]=null,Y=0;Y<N.length;Y++){var H=N[Y];H!==null&&(H.lane&=-536870913)}i&=~K}o!==0&&Zt(e,o,0),f!==0&&u===0&&e.tag!==0&&(e.suspendedLanes|=f&~(g&~t))}function Zt(e,t,i){e.pendingLanes|=t,e.suspendedLanes&=~t;var o=31-x2(t);e.entangledLanes|=t,e.entanglements[o]=e.entanglements[o]|1073741824|i&4194218}function ri(e,t){var i=e.entangledLanes|=t;for(e=e.entanglements;i;){var o=31-x2(i),u=1<<o;u&t|e[o]&t&&(e[o]|=t),i&=~u}}function Kt(e){return e&=-e,2<e?8<e?(e&134217727)!==0?32:268435456:8:2}function V0(){var e=a1.p;return e!==0?e:(e=window.event,e===void 0?32:z9(e.type))}function F0(e,t){var i=a1.p;try{return a1.p=e,t()}finally{a1.p=i}}var V2=Math.random().toString(36).slice(2),D2="__reactFiber$"+V2,F2="__reactProps$"+V2,K3="__reactContainer$"+V2,Jt="__reactEvents$"+V2,Oa="__reactListeners$"+V2,$0="__reactHandles$"+V2,Wt="__reactResources$"+V2,gt="__reactMarker$"+V2;function P0(e){delete e[D2],delete e[F2],delete e[Jt],delete e[Oa],delete e[$0]}function _e(e){var t=e[D2];if(t)return t;for(var i=e.parentNode;i;){if(t=i[K3]||i[D2]){if(i=t.alternate,t.child!==null||i!==null&&i.child!==null)for(e=_9(e);e!==null;){if(i=e[D2])return i;e=_9(e)}return t}e=i,i=e.parentNode}return null}function we(e){if(e=e[D2]||e[K3]){var t=e.tag;if(t===5||t===6||t===13||t===26||t===27||t===3)return e}return null}function yt(e){var t=e.tag;if(t===5||t===26||t===27||t===6)return e.stateNode;throw Error(l(33))}function Ve(e){var t=e[Wt];return t||(t=e[Wt]={hoistableStyles:new Map,hoistableScripts:new Map}),t}function L2(e){e[gt]=!0}var oi=new Set,li={};function xe(e,t){se(e,t),se(e+"Capture",t)}function se(e,t){for(li[e]=t,e=0;e<t.length;e++)oi.add(t[e])}var S3=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),Da=RegExp("^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"),si={},ui={};function vt(e){return be.call(ui,e)?!0:be.call(si,e)?!1:Da.test(e)?ui[e]=!0:(si[e]=!0,!1)}function bt(e,t,i){if(vt(t))if(i===null)e.removeAttribute(t);else{switch(typeof i){case"undefined":case"function":case"symbol":e.removeAttribute(t);return;case"boolean":var o=t.toLowerCase().slice(0,5);if(o!=="data-"&&o!=="aria-"){e.removeAttribute(t);return}}e.setAttribute(t,""+i)}}function _t(e,t,i){if(i===null)e.removeAttribute(t);else{switch(typeof i){case"undefined":case"function":case"symbol":case"boolean":e.removeAttribute(t);return}e.setAttribute(t,""+i)}}function J3(e,t,i,o){if(o===null)e.removeAttribute(i);else{switch(typeof o){case"undefined":case"function":case"symbol":case"boolean":e.removeAttribute(i);return}e.setAttributeNS(t,i,""+o)}}function t3(e){switch(typeof e){case"bigint":case"boolean":case"number":case"string":case"undefined":return e;case"object":return e;default:return""}}function Y0(e){var t=e.type;return(e=e.nodeName)&&e.toLowerCase()==="input"&&(t==="checkbox"||t==="radio")}function Q0(e){var t=Y0(e)?"checked":"value",i=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),o=""+e[t];if(!e.hasOwnProperty(t)&&typeof i<"u"&&typeof i.get=="function"&&typeof i.set=="function"){var u=i.get,f=i.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return u.call(this)},set:function(g){o=""+g,f.call(this,g)}}),Object.defineProperty(e,t,{enumerable:i.enumerable}),{getValue:function(){return o},setValue:function(g){o=""+g},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}function e0(e){e._valueTracker||(e._valueTracker=Q0(e))}function X0(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var i=t.getValue(),o="";return e&&(o=Y0(e)?e.checked?"true":"false":e.value),e=o,e!==i?(t.setValue(e),!0):!1}function wt(e){if(e=e||(typeof document<"u"?document:void 0),typeof e>"u")return null;try{return e.activeElement||e.body}catch{return e.body}}var t0=/[\n"\\]/g;function h3(e){return e.replace(t0,function(t){return"\\"+t.charCodeAt(0).toString(16)+" "})}function y2(e,t,i,o,u,f,g,x){e.name="",g!=null&&typeof g!="function"&&typeof g!="symbol"&&typeof g!="boolean"?e.type=g:e.removeAttribute("type"),t!=null?g==="number"?(t===0&&e.value===""||e.value!=t)&&(e.value=""+t3(t)):e.value!==""+t3(t)&&(e.value=""+t3(t)):g!=="submit"&&g!=="reset"||e.removeAttribute("value"),t!=null?i0(e,g,t3(t)):i!=null?i0(e,g,t3(i)):o!=null&&e.removeAttribute("value"),u==null&&f!=null&&(e.defaultChecked=!!f),u!=null&&(e.checked=u&&typeof u!="function"&&typeof u!="symbol"),x!=null&&typeof x!="function"&&typeof x!="symbol"&&typeof x!="boolean"?e.name=""+t3(x):e.removeAttribute("name")}function n0(e,t,i,o,u,f,g,x){if(f!=null&&typeof f!="function"&&typeof f!="symbol"&&typeof f!="boolean"&&(e.type=f),t!=null||i!=null){if(!(f!=="submit"&&f!=="reset"||t!=null))return;i=i!=null?""+t3(i):"",t=t!=null?""+t3(t):i,x||t===e.value||(e.value=t),e.defaultValue=t}o=o??u,o=typeof o!="function"&&typeof o!="symbol"&&!!o,e.checked=x?e.checked:!!o,e.defaultChecked=!!o,g!=null&&typeof g!="function"&&typeof g!="symbol"&&typeof g!="boolean"&&(e.name=g)}function i0(e,t,i){t==="number"&&wt(e.ownerDocument)===e||e.defaultValue===""+i||(e.defaultValue=""+i)}function n3(e,t,i,o){if(e=e.options,t){t={};for(var u=0;u<i.length;u++)t["$"+i[u]]=!0;for(i=0;i<e.length;i++)u=t.hasOwnProperty("$"+e[i].value),e[i].selected!==u&&(e[i].selected=u),u&&o&&(e[i].defaultSelected=!0)}else{for(i=""+t3(i),t=null,u=0;u<e.length;u++){if(e[u].value===i){e[u].selected=!0,o&&(e[u].defaultSelected=!0);return}t!==null||e[u].disabled||(t=e[u])}t!==null&&(t.selected=!0)}}function G0(e,t,i){if(t!=null&&(t=""+t3(t),t!==e.value&&(e.value=t),i==null)){e.defaultValue!==t&&(e.defaultValue=t);return}e.defaultValue=i!=null?""+t3(i):""}function A3(e,t,i,o){if(t==null){if(o!=null){if(i!=null)throw Error(l(92));if(T(o)){if(1<o.length)throw Error(l(93));o=o[0]}i=o}i==null&&(i=""),t=i}i=t3(t),e.defaultValue=i,o=e.textContent,o===i&&o!==""&&o!==null&&(e.value=o)}function Q2(e,t){if(t){var i=e.firstChild;if(i&&i===e.lastChild&&i.nodeType===3){i.nodeValue=t;return}}e.textContent=t}var N3=new Set("animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(" "));function ci(e,t,i){var o=t.indexOf("--")===0;i==null||typeof i=="boolean"||i===""?o?e.setProperty(t,""):t==="float"?e.cssFloat="":e[t]="":o?e.setProperty(t,i):typeof i!="number"||i===0||N3.has(t)?t==="float"?e.cssFloat=i:e[t]=(""+i).trim():e[t]=i+"px"}function fi(e,t,i){if(t!=null&&typeof t!="object")throw Error(l(62));if(e=e.style,i!=null){for(var o in i)!i.hasOwnProperty(o)||t!=null&&t.hasOwnProperty(o)||(o.indexOf("--")===0?e.setProperty(o,""):o==="float"?e.cssFloat="":e[o]="");for(var u in t)o=t[u],t.hasOwnProperty(u)&&i[u]!==o&&ci(e,u,o)}else for(var f in t)t.hasOwnProperty(f)&&ci(e,f,t[f])}function Z0(e){if(e.indexOf("-")===-1)return!1;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var La=new Map([["acceptCharset","accept-charset"],["htmlFor","for"],["httpEquiv","http-equiv"],["crossOrigin","crossorigin"],["accentHeight","accent-height"],["alignmentBaseline","alignment-baseline"],["arabicForm","arabic-form"],["baselineShift","baseline-shift"],["capHeight","cap-height"],["clipPath","clip-path"],["clipRule","clip-rule"],["colorInterpolation","color-interpolation"],["colorInterpolationFilters","color-interpolation-filters"],["colorProfile","color-profile"],["colorRendering","color-rendering"],["dominantBaseline","dominant-baseline"],["enableBackground","enable-background"],["fillOpacity","fill-opacity"],["fillRule","fill-rule"],["floodColor","flood-color"],["floodOpacity","flood-opacity"],["fontFamily","font-family"],["fontSize","font-size"],["fontSizeAdjust","font-size-adjust"],["fontStretch","font-stretch"],["fontStyle","font-style"],["fontVariant","font-variant"],["fontWeight","font-weight"],["glyphName","glyph-name"],["glyphOrientationHorizontal","glyph-orientation-horizontal"],["glyphOrientationVertical","glyph-orientation-vertical"],["horizAdvX","horiz-adv-x"],["horizOriginX","horiz-origin-x"],["imageRendering","image-rendering"],["letterSpacing","letter-spacing"],["lightingColor","lighting-color"],["markerEnd","marker-end"],["markerMid","marker-mid"],["markerStart","marker-start"],["overlinePosition","overline-position"],["overlineThickness","overline-thickness"],["paintOrder","paint-order"],["panose-1","panose-1"],["pointerEvents","pointer-events"],["renderingIntent","rendering-intent"],["shapeRendering","shape-rendering"],["stopColor","stop-color"],["stopOpacity","stop-opacity"],["strikethroughPosition","strikethrough-position"],["strikethroughThickness","strikethrough-thickness"],["strokeDasharray","stroke-dasharray"],["strokeDashoffset","stroke-dashoffset"],["strokeLinecap","stroke-linecap"],["strokeLinejoin","stroke-linejoin"],["strokeMiterlimit","stroke-miterlimit"],["strokeOpacity","stroke-opacity"],["strokeWidth","stroke-width"],["textAnchor","text-anchor"],["textDecoration","text-decoration"],["textRendering","text-rendering"],["transformOrigin","transform-origin"],["underlinePosition","underline-position"],["underlineThickness","underline-thickness"],["unicodeBidi","unicode-bidi"],["unicodeRange","unicode-range"],["unitsPerEm","units-per-em"],["vAlphabetic","v-alphabetic"],["vHanging","v-hanging"],["vIdeographic","v-ideographic"],["vMathematical","v-mathematical"],["vectorEffect","vector-effect"],["vertAdvY","vert-adv-y"],["vertOriginX","vert-origin-x"],["vertOriginY","vert-origin-y"],["wordSpacing","word-spacing"],["writingMode","writing-mode"],["xmlnsXlink","xmlns:xlink"],["xHeight","x-height"]]),Ra=/^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i;function a0(e){return Ra.test(""+e)?"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')":e}var K0=null;function J0(e){return e=e.target||e.srcElement||window,e.correspondingUseElement&&(e=e.correspondingUseElement),e.nodeType===3?e.parentNode:e}var Fe=null,W3=null;function W0(e){var t=we(e);if(t&&(e=t.stateNode)){var i=e[F2]||null;e:switch(e=t.stateNode,t.type){case"input":if(y2(e,i.value,i.defaultValue,i.defaultValue,i.checked,i.defaultChecked,i.type,i.name),t=i.name,i.type==="radio"&&t!=null){for(i=e;i.parentNode;)i=i.parentNode;for(i=i.querySelectorAll('input[name="'+h3(""+t)+'"][type="radio"]'),t=0;t<i.length;t++){var o=i[t];if(o!==e&&o.form===e.form){var u=o[F2]||null;if(!u)throw Error(l(90));y2(o,u.value,u.defaultValue,u.defaultValue,u.checked,u.defaultChecked,u.type,u.name)}}for(t=0;t<i.length;t++)o=i[t],o.form===e.form&&X0(o)}break e;case"textarea":G0(e,i.value,i.defaultValue);break e;case"select":t=i.value,t!=null&&n3(e,!!i.multiple,t,!1)}}}var m=!1;function y(e,t,i){if(m)return e(t,i);m=!0;try{var o=e(t);return o}finally{if(m=!1,(Fe!==null||W3!==null)&&(Fi(),Fe&&(t=Fe,e=W3,W3=Fe=null,W0(t),e)))for(t=0;t<e.length;t++)W0(e[t])}}function A(e,t){var i=e.stateNode;if(i===null)return null;var o=i[F2]||null;if(o===null)return null;i=o[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(o=!o.disabled)||(e=e.type,o=!(e==="button"||e==="input"||e==="select"||e==="textarea")),e=!o;break e;default:e=!1}if(e)return null;if(i&&typeof i!="function")throw Error(l(231,t,typeof i));return i}var E=!1;if(S3)try{var O={};Object.defineProperty(O,"passive",{get:function(){E=!0}}),window.addEventListener("test",O,O),window.removeEventListener("test",O,O)}catch{E=!1}var j=null,J=null,X=null;function d1(){if(X)return X;var e,t=J,i=t.length,o,u="value"in j?j.value:j.textContent,f=u.length;for(e=0;e<i&&t[e]===u[e];e++);var g=i-e;for(o=1;o<=g&&t[i-o]===u[f-o];o++);return X=u.slice(e,1<o?1-o:void 0)}function p1(e){var t=e.keyCode;return"charCode"in e?(e=e.charCode,e===0&&t===13&&(e=13)):e=t,e===10&&(e=13),32<=e||e===13?e:0}function b1(){return!0}function P1(){return!1}function U1(e){function t(i,o,u,f,g){this._reactName=i,this._targetInst=u,this.type=o,this.nativeEvent=f,this.target=g,this.currentTarget=null;for(var x in e)e.hasOwnProperty(x)&&(i=e[x],this[x]=i?i(f):f[x]);return this.isDefaultPrevented=(f.defaultPrevented!=null?f.defaultPrevented:f.returnValue===!1)?b1:P1,this.isPropagationStopped=P1,this}return f1(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var i=this.nativeEvent;i&&(i.preventDefault?i.preventDefault():typeof i.returnValue!="unknown"&&(i.returnValue=!1),this.isDefaultPrevented=b1)},stopPropagation:function(){var i=this.nativeEvent;i&&(i.stopPropagation?i.stopPropagation():typeof i.cancelBubble!="unknown"&&(i.cancelBubble=!0),this.isPropagationStopped=b1)},persist:function(){},isPersistent:b1}),t}var T2={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},s2=U1(T2),u2=f1({},T2,{view:0,detail:0}),k3=U1(u2),Se,X2,ee,$e=f1({},u2,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:za,button:0,buttons:0,relatedTarget:function(e){return e.relatedTarget===void 0?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==ee&&(ee&&e.type==="mousemove"?(Se=e.screenX-ee.screenX,X2=e.screenY-ee.screenY):X2=Se=0,ee=e),Se)},movementY:function(e){return"movementY"in e?e.movementY:X2}}),en=U1($e),c6=f1({},$e,{dataTransfer:0}),f6=U1(c6),d6=f1({},u2,{relatedTarget:0}),Ua=U1(d6),p6=f1({},T2,{animationName:0,elapsedTime:0,pseudoElement:0}),h6=U1(p6),m6=f1({},T2,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),g6=U1(m6),y6=f1({},T2,{data:0}),Dl=U1(y6),v6={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},b6={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},_6={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function w6(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):(e=_6[e])?!!t[e]:!1}function za(){return w6}var x6=f1({},u2,{key:function(e){if(e.key){var t=v6[e.key]||e.key;if(t!=="Unidentified")return t}return e.type==="keypress"?(e=p1(e),e===13?"Enter":String.fromCharCode(e)):e.type==="keydown"||e.type==="keyup"?b6[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:za,charCode:function(e){return e.type==="keypress"?p1(e):0},keyCode:function(e){return e.type==="keydown"||e.type==="keyup"?e.keyCode:0},which:function(e){return e.type==="keypress"?p1(e):e.type==="keydown"||e.type==="keyup"?e.keyCode:0}}),S6=U1(x6),A6=f1({},$e,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Ll=U1(A6),k6=f1({},u2,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:za}),E6=U1(k6),T6=f1({},T2,{propertyName:0,elapsedTime:0,pseudoElement:0}),C6=U1(T6),M6=f1({},$e,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),O6=U1(M6),D6=f1({},T2,{newState:0,oldState:0}),L6=U1(D6),R6=[9,13,27,32],Na=S3&&"CompositionEvent"in window,tn=null;S3&&"documentMode"in document&&(tn=document.documentMode);var U6=S3&&"TextEvent"in window&&!tn,Rl=S3&&(!Na||tn&&8<tn&&11>=tn),Ul=" ",zl=!1;function Nl(e,t){switch(e){case"keyup":return R6.indexOf(t.keyCode)!==-1;case"keydown":return t.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Il(e){return e=e.detail,typeof e=="object"&&"data"in e?e.data:null}var r0=!1;function z6(e,t){switch(e){case"compositionend":return Il(t);case"keypress":return t.which!==32?null:(zl=!0,Ul);case"textInput":return e=t.data,e===Ul&&zl?null:e;default:return null}}function N6(e,t){if(r0)return e==="compositionend"||!Na&&Nl(e,t)?(e=d1(),X=J=j=null,r0=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Rl&&t.locale!=="ko"?null:t.data;default:return null}}var I6={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function jl(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t==="input"?!!I6[e.type]:t==="textarea"}function Bl(e,t,i,o){Fe?W3?W3.push(o):W3=[o]:Fe=o,t=Xi(t,"onChange"),0<t.length&&(i=new s2("onChange","change",null,i,o),e.push({event:i,listeners:t}))}var nn=null,an=null;function j6(e){f9(e,0)}function di(e){var t=yt(e);if(X0(t))return e}function ql(e,t){if(e==="change")return t}var Hl=!1;if(S3){var Ia;if(S3){var ja="oninput"in document;if(!ja){var Vl=document.createElement("div");Vl.setAttribute("oninput","return;"),ja=typeof Vl.oninput=="function"}Ia=ja}else Ia=!1;Hl=Ia&&(!document.documentMode||9<document.documentMode)}function Fl(){nn&&(nn.detachEvent("onpropertychange",$l),an=nn=null)}function $l(e){if(e.propertyName==="value"&&di(an)){var t=[];Bl(t,an,e,J0(e)),y(j6,t)}}function B6(e,t,i){e==="focusin"?(Fl(),nn=t,an=i,nn.attachEvent("onpropertychange",$l)):e==="focusout"&&Fl()}function q6(e){if(e==="selectionchange"||e==="keyup"||e==="keydown")return di(an)}function H6(e,t){if(e==="click")return di(t)}function V6(e,t){if(e==="input"||e==="change")return di(t)}function F6(e,t){return e===t&&(e!==0||1/e===1/t)||e!==e&&t!==t}var E3=typeof Object.is=="function"?Object.is:F6;function rn(e,t){if(E3(e,t))return!0;if(typeof e!="object"||e===null||typeof t!="object"||t===null)return!1;var i=Object.keys(e),o=Object.keys(t);if(i.length!==o.length)return!1;for(o=0;o<i.length;o++){var u=i[o];if(!be.call(t,u)||!E3(e[u],t[u]))return!1}return!0}function Pl(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Yl(e,t){var i=Pl(e);e=0;for(var o;i;){if(i.nodeType===3){if(o=e+i.textContent.length,e<=t&&o>=t)return{node:i,offset:t-e};e=o}e:{for(;i;){if(i.nextSibling){i=i.nextSibling;break e}i=i.parentNode}i=void 0}i=Pl(i)}}function Ql(e,t){return e&&t?e===t?!0:e&&e.nodeType===3?!1:t&&t.nodeType===3?Ql(e,t.parentNode):"contains"in e?e.contains(t):e.compareDocumentPosition?!!(e.compareDocumentPosition(t)&16):!1:!1}function Xl(e){e=e!=null&&e.ownerDocument!=null&&e.ownerDocument.defaultView!=null?e.ownerDocument.defaultView:window;for(var t=wt(e.document);t instanceof e.HTMLIFrameElement;){try{var i=typeof t.contentWindow.location.href=="string"}catch{i=!1}if(i)e=t.contentWindow;else break;t=wt(e.document)}return t}function Ba(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&(t==="input"&&(e.type==="text"||e.type==="search"||e.type==="tel"||e.type==="url"||e.type==="password")||t==="textarea"||e.contentEditable==="true")}function $6(e,t){var i=Xl(t);t=e.focusedElem;var o=e.selectionRange;if(i!==t&&t&&t.ownerDocument&&Ql(t.ownerDocument.documentElement,t)){if(o!==null&&Ba(t)){if(e=o.start,i=o.end,i===void 0&&(i=e),"selectionStart"in t)t.selectionStart=e,t.selectionEnd=Math.min(i,t.value.length);else if(i=(e=t.ownerDocument||document)&&e.defaultView||window,i.getSelection){i=i.getSelection();var u=t.textContent.length,f=Math.min(o.start,u);o=o.end===void 0?f:Math.min(o.end,u),!i.extend&&f>o&&(u=o,o=f,f=u),u=Yl(t,f);var g=Yl(t,o);u&&g&&(i.rangeCount!==1||i.anchorNode!==u.node||i.anchorOffset!==u.offset||i.focusNode!==g.node||i.focusOffset!==g.offset)&&(e=e.createRange(),e.setStart(u.node,u.offset),i.removeAllRanges(),f>o?(i.addRange(e),i.extend(g.node,g.offset)):(e.setEnd(g.node,g.offset),i.addRange(e)))}}for(e=[],i=t;i=i.parentNode;)i.nodeType===1&&e.push({element:i,left:i.scrollLeft,top:i.scrollTop});for(typeof t.focus=="function"&&t.focus(),t=0;t<e.length;t++)i=e[t],i.element.scrollLeft=i.left,i.element.scrollTop=i.top}}var P6=S3&&"documentMode"in document&&11>=document.documentMode,o0=null,qa=null,on=null,Ha=!1;function Gl(e,t,i){var o=i.window===i?i.document:i.nodeType===9?i:i.ownerDocument;Ha||o0==null||o0!==wt(o)||(o=o0,"selectionStart"in o&&Ba(o)?o={start:o.selectionStart,end:o.selectionEnd}:(o=(o.ownerDocument&&o.ownerDocument.defaultView||window).getSelection(),o={anchorNode:o.anchorNode,anchorOffset:o.anchorOffset,focusNode:o.focusNode,focusOffset:o.focusOffset}),on&&rn(on,o)||(on=o,o=Xi(qa,"onSelect"),0<o.length&&(t=new s2("onSelect","select",null,t,i),e.push({event:t,listeners:o}),t.target=o0)))}function xt(e,t){var i={};return i[e.toLowerCase()]=t.toLowerCase(),i["Webkit"+e]="webkit"+t,i["Moz"+e]="moz"+t,i}var l0={animationend:xt("Animation","AnimationEnd"),animationiteration:xt("Animation","AnimationIteration"),animationstart:xt("Animation","AnimationStart"),transitionrun:xt("Transition","TransitionRun"),transitionstart:xt("Transition","TransitionStart"),transitioncancel:xt("Transition","TransitionCancel"),transitionend:xt("Transition","TransitionEnd")},Va={},Zl={};S3&&(Zl=document.createElement("div").style,"AnimationEvent"in window||(delete l0.animationend.animation,delete l0.animationiteration.animation,delete l0.animationstart.animation),"TransitionEvent"in window||delete l0.transitionend.transition);function St(e){if(Va[e])return Va[e];if(!l0[e])return e;var t=l0[e],i;for(i in t)if(t.hasOwnProperty(i)&&i in Zl)return Va[e]=t[i];return e}var Kl=St("animationend"),Jl=St("animationiteration"),Wl=St("animationstart"),Y6=St("transitionrun"),Q6=St("transitionstart"),X6=St("transitioncancel"),es=St("transitionend"),ts=new Map,ns="abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll scrollEnd toggle touchMove waiting wheel".split(" ");function te(e,t){ts.set(e,t),xe(t,[e])}var I3=[],s0=0,Fa=0;function pi(){for(var e=s0,t=Fa=s0=0;t<e;){var i=I3[t];I3[t++]=null;var o=I3[t];I3[t++]=null;var u=I3[t];I3[t++]=null;var f=I3[t];if(I3[t++]=null,o!==null&&u!==null){var g=o.pending;g===null?u.next=u:(u.next=g.next,g.next=u),o.pending=u}f!==0&&is(i,u,f)}}function hi(e,t,i,o){I3[s0++]=e,I3[s0++]=t,I3[s0++]=i,I3[s0++]=o,Fa|=o,e.lanes|=o,e=e.alternate,e!==null&&(e.lanes|=o)}function $a(e,t,i,o){return hi(e,t,i,o),mi(e)}function Pe(e,t){return hi(e,null,null,t),mi(e)}function is(e,t,i){e.lanes|=i;var o=e.alternate;o!==null&&(o.lanes|=i);for(var u=!1,f=e.return;f!==null;)f.childLanes|=i,o=f.alternate,o!==null&&(o.childLanes|=i),f.tag===22&&(e=f.stateNode,e===null||e._visibility&1||(u=!0)),e=f,f=f.return;u&&t!==null&&e.tag===3&&(f=e.stateNode,u=31-x2(i),f=f.hiddenUpdates,e=f[u],e===null?f[u]=[t]:e.push(t),t.lane=i|536870912)}function mi(e){if(50<Dn)throw Dn=0,Zr=null,Error(l(185));for(var t=e.return;t!==null;)e=t,t=e.return;return e.tag===3?e.stateNode:null}var u0={},as=new WeakMap;function j3(e,t){if(typeof e=="object"&&e!==null){var i=as.get(e);return i!==void 0?i:(t={value:e,source:t,stack:q(t)},as.set(e,t),t)}return{value:e,source:t,stack:q(t)}}var c0=[],f0=0,gi=null,yi=0,B3=[],q3=0,At=null,Ae=1,ke="";function kt(e,t){c0[f0++]=yi,c0[f0++]=gi,gi=e,yi=t}function rs(e,t,i){B3[q3++]=Ae,B3[q3++]=ke,B3[q3++]=At,At=e;var o=Ae;e=ke;var u=32-x2(o)-1;o&=~(1<<u),i+=1;var f=32-x2(t)+u;if(30<f){var g=u-u%5;f=(o&(1<<g)-1).toString(32),o>>=g,u-=g,Ae=1<<32-x2(t)+u|i<<u|o,ke=f+e}else Ae=1<<f|i<<u|o,ke=e}function Pa(e){e.return!==null&&(kt(e,1),rs(e,1,0))}function Ya(e){for(;e===gi;)gi=c0[--f0],c0[f0]=null,yi=c0[--f0],c0[f0]=null;for(;e===At;)At=B3[--q3],B3[q3]=null,ke=B3[--q3],B3[q3]=null,Ae=B3[--q3],B3[q3]=null}var f3=null,G2=null,Z1=!1,ne=null,ue=!1,Qa=Error(l(519));function Et(e){var t=Error(l(418,""));throw un(j3(t,e)),Qa}function os(e){var t=e.stateNode,i=e.type,o=e.memoizedProps;switch(t[D2]=e,t[F2]=o,i){case"dialog":Y1("cancel",t),Y1("close",t);break;case"iframe":case"object":case"embed":Y1("load",t);break;case"video":case"audio":for(i=0;i<Rn.length;i++)Y1(Rn[i],t);break;case"source":Y1("error",t);break;case"img":case"image":case"link":Y1("error",t),Y1("load",t);break;case"details":Y1("toggle",t);break;case"input":Y1("invalid",t),n0(t,o.value,o.defaultValue,o.checked,o.defaultChecked,o.type,o.name,!0),e0(t);break;case"select":Y1("invalid",t);break;case"textarea":Y1("invalid",t),A3(t,o.value,o.defaultValue,o.children),e0(t)}i=o.children,typeof i!="string"&&typeof i!="number"&&typeof i!="bigint"||t.textContent===""+i||o.suppressHydrationWarning===!0||m9(t.textContent,i)?(o.popover!=null&&(Y1("beforetoggle",t),Y1("toggle",t)),o.onScroll!=null&&Y1("scroll",t),o.onScrollEnd!=null&&Y1("scrollend",t),o.onClick!=null&&(t.onclick=Gi),t=!0):t=!1,t||Et(e)}function ls(e){for(f3=e.return;f3;)switch(f3.tag){case 3:case 27:ue=!0;return;case 5:case 13:ue=!1;return;default:f3=f3.return}}function ln(e){if(e!==f3)return!1;if(!Z1)return ls(e),Z1=!0,!1;var t=!1,i;if((i=e.tag!==3&&e.tag!==27)&&((i=e.tag===5)&&(i=e.type,i=!(i!=="form"&&i!=="button")||ho(e.type,e.memoizedProps)),i=!i),i&&(t=!0),t&&G2&&Et(e),ls(e),e.tag===13){if(e=e.memoizedState,e=e!==null?e.dehydrated:null,!e)throw Error(l(317));e:{for(e=e.nextSibling,t=0;e;){if(e.nodeType===8)if(i=e.data,i==="/$"){if(t===0){G2=ae(e.nextSibling);break e}t--}else i!=="$"&&i!=="$!"&&i!=="$?"||t++;e=e.nextSibling}G2=null}}else G2=f3?ae(e.stateNode.nextSibling):null;return!0}function sn(){G2=f3=null,Z1=!1}function un(e){ne===null?ne=[e]:ne.push(e)}var cn=Error(l(460)),ss=Error(l(474)),Xa={then:function(){}};function us(e){return e=e.status,e==="fulfilled"||e==="rejected"}function vi(){}function cs(e,t,i){switch(i=e[i],i===void 0?e.push(t):i!==t&&(t.then(vi,vi),t=i),t.status){case"fulfilled":return t.value;case"rejected":throw e=t.reason,e===cn?Error(l(483)):e;default:if(typeof t.status=="string")t.then(vi,vi);else{if(e=c2,e!==null&&100<e.shellSuspendCounter)throw Error(l(482));e=t,e.status="pending",e.then(function(o){if(t.status==="pending"){var u=t;u.status="fulfilled",u.value=o}},function(o){if(t.status==="pending"){var u=t;u.status="rejected",u.reason=o}})}switch(t.status){case"fulfilled":return t.value;case"rejected":throw e=t.reason,e===cn?Error(l(483)):e}throw fn=t,cn}}var fn=null;function fs(){if(fn===null)throw Error(l(459));var e=fn;return fn=null,e}var d0=null,dn=0;function bi(e){var t=dn;return dn+=1,d0===null&&(d0=[]),cs(d0,e,t)}function pn(e,t){t=t.props.ref,e.ref=t!==void 0?t:null}function _i(e,t){throw t.$$typeof===c?Error(l(525)):(e=Object.prototype.toString.call(t),Error(l(31,e==="[object Object]"?"object with keys {"+Object.keys(t).join(", ")+"}":e)))}function ds(e){var t=e._init;return t(e._payload)}function ps(e){function t(R,D){if(e){var U=R.deletions;U===null?(R.deletions=[D],R.flags|=16):U.push(D)}}function i(R,D){if(!e)return null;for(;D!==null;)t(R,D),D=D.sibling;return null}function o(R){for(var D=new Map;R!==null;)R.key!==null?D.set(R.key,R):D.set(R.index,R),R=R.sibling;return D}function u(R,D){return R=it(R,D),R.index=0,R.sibling=null,R}function f(R,D,U){return R.index=U,e?(U=R.alternate,U!==null?(U=U.index,U<D?(R.flags|=33554434,D):U):(R.flags|=33554434,D)):(R.flags|=1048576,D)}function g(R){return e&&R.alternate===null&&(R.flags|=33554434),R}function x(R,D,U,G){return D===null||D.tag!==6?(D=Vr(U,R.mode,G),D.return=R,D):(D=u(D,U),D.return=R,D)}function C(R,D,U,G){var m1=U.type;return m1===v?Y(R,D,U.props.children,G,U.key):D!==null&&(D.elementType===m1||typeof m1=="object"&&m1!==null&&m1.$$typeof===n1&&ds(m1)===D.type)?(D=u(D,U.props),pn(D,U),D.return=R,D):(D=ji(U.type,U.key,U.props,null,R.mode,G),pn(D,U),D.return=R,D)}function L(R,D,U,G){return D===null||D.tag!==4||D.stateNode.containerInfo!==U.containerInfo||D.stateNode.implementation!==U.implementation?(D=Fr(U,R.mode,G),D.return=R,D):(D=u(D,U.children||[]),D.return=R,D)}function Y(R,D,U,G,m1){return D===null||D.tag!==7?(D=Nt(U,R.mode,G,m1),D.return=R,D):(D=u(D,U),D.return=R,D)}function K(R,D,U){if(typeof D=="string"&&D!==""||typeof D=="number"||typeof D=="bigint")return D=Vr(""+D,R.mode,U),D.return=R,D;if(typeof D=="object"&&D!==null){switch(D.$$typeof){case d:return U=ji(D.type,D.key,D.props,null,R.mode,U),pn(U,D),U.return=R,U;case h:return D=Fr(D,R.mode,U),D.return=R,D;case n1:var G=D._init;return D=G(D._payload),K(R,D,U)}if(T(D)||I(D))return D=Nt(D,R.mode,U,null),D.return=R,D;if(typeof D.then=="function")return K(R,bi(D),U);if(D.$$typeof===S)return K(R,zi(R,D),U);_i(R,D)}return null}function N(R,D,U,G){var m1=D!==null?D.key:null;if(typeof U=="string"&&U!==""||typeof U=="number"||typeof U=="bigint")return m1!==null?null:x(R,D,""+U,G);if(typeof U=="object"&&U!==null){switch(U.$$typeof){case d:return U.key===m1?C(R,D,U,G):null;case h:return U.key===m1?L(R,D,U,G):null;case n1:return m1=U._init,U=m1(U._payload),N(R,D,U,G)}if(T(U)||I(U))return m1!==null?null:Y(R,D,U,G,null);if(typeof U.then=="function")return N(R,D,bi(U),G);if(U.$$typeof===S)return N(R,D,zi(R,U),G);_i(R,U)}return null}function H(R,D,U,G,m1){if(typeof G=="string"&&G!==""||typeof G=="number"||typeof G=="bigint")return R=R.get(U)||null,x(D,R,""+G,m1);if(typeof G=="object"&&G!==null){switch(G.$$typeof){case d:return R=R.get(G.key===null?U:G.key)||null,C(D,R,G,m1);case h:return R=R.get(G.key===null?U:G.key)||null,L(D,R,G,m1);case n1:var H1=G._init;return G=H1(G._payload),H(R,D,U,G,m1)}if(T(G)||I(G))return R=R.get(U)||null,Y(D,R,G,m1,null);if(typeof G.then=="function")return H(R,D,U,bi(G),m1);if(G.$$typeof===S)return H(R,D,U,zi(D,G),m1);_i(D,G)}return null}function y1(R,D,U,G){for(var m1=null,H1=null,w1=D,k1=D=0,Y2=null;w1!==null&&k1<U.length;k1++){w1.index>k1?(Y2=w1,w1=null):Y2=w1.sibling;var K1=N(R,w1,U[k1],G);if(K1===null){w1===null&&(w1=Y2);break}e&&w1&&K1.alternate===null&&t(R,w1),D=f(K1,D,k1),H1===null?m1=K1:H1.sibling=K1,H1=K1,w1=Y2}if(k1===U.length)return i(R,w1),Z1&&kt(R,k1),m1;if(w1===null){for(;k1<U.length;k1++)w1=K(R,U[k1],G),w1!==null&&(D=f(w1,D,k1),H1===null?m1=w1:H1.sibling=w1,H1=w1);return Z1&&kt(R,k1),m1}for(w1=o(w1);k1<U.length;k1++)Y2=H(w1,R,k1,U[k1],G),Y2!==null&&(e&&Y2.alternate!==null&&w1.delete(Y2.key===null?k1:Y2.key),D=f(Y2,D,k1),H1===null?m1=Y2:H1.sibling=Y2,H1=Y2);return e&&w1.forEach(function(ct){return t(R,ct)}),Z1&&kt(R,k1),m1}function D1(R,D,U,G){if(U==null)throw Error(l(151));for(var m1=null,H1=null,w1=D,k1=D=0,Y2=null,K1=U.next();w1!==null&&!K1.done;k1++,K1=U.next()){w1.index>k1?(Y2=w1,w1=null):Y2=w1.sibling;var ct=N(R,w1,K1.value,G);if(ct===null){w1===null&&(w1=Y2);break}e&&w1&&ct.alternate===null&&t(R,w1),D=f(ct,D,k1),H1===null?m1=ct:H1.sibling=ct,H1=ct,w1=Y2}if(K1.done)return i(R,w1),Z1&&kt(R,k1),m1;if(w1===null){for(;!K1.done;k1++,K1=U.next())K1=K(R,K1.value,G),K1!==null&&(D=f(K1,D,k1),H1===null?m1=K1:H1.sibling=K1,H1=K1);return Z1&&kt(R,k1),m1}for(w1=o(w1);!K1.done;k1++,K1=U.next())K1=H(w1,R,k1,K1.value,G),K1!==null&&(e&&K1.alternate!==null&&w1.delete(K1.key===null?k1:K1.key),D=f(K1,D,k1),H1===null?m1=K1:H1.sibling=K1,H1=K1);return e&&w1.forEach(function(uf){return t(R,uf)}),Z1&&kt(R,k1),m1}function k2(R,D,U,G){if(typeof U=="object"&&U!==null&&U.type===v&&U.key===null&&(U=U.props.children),typeof U=="object"&&U!==null){switch(U.$$typeof){case d:e:{for(var m1=U.key;D!==null;){if(D.key===m1){if(m1=U.type,m1===v){if(D.tag===7){i(R,D.sibling),G=u(D,U.props.children),G.return=R,R=G;break e}}else if(D.elementType===m1||typeof m1=="object"&&m1!==null&&m1.$$typeof===n1&&ds(m1)===D.type){i(R,D.sibling),G=u(D,U.props),pn(G,U),G.return=R,R=G;break e}i(R,D);break}else t(R,D);D=D.sibling}U.type===v?(G=Nt(U.props.children,R.mode,G,U.key),G.return=R,R=G):(G=ji(U.type,U.key,U.props,null,R.mode,G),pn(G,U),G.return=R,R=G)}return g(R);case h:e:{for(m1=U.key;D!==null;){if(D.key===m1)if(D.tag===4&&D.stateNode.containerInfo===U.containerInfo&&D.stateNode.implementation===U.implementation){i(R,D.sibling),G=u(D,U.children||[]),G.return=R,R=G;break e}else{i(R,D);break}else t(R,D);D=D.sibling}G=Fr(U,R.mode,G),G.return=R,R=G}return g(R);case n1:return m1=U._init,U=m1(U._payload),k2(R,D,U,G)}if(T(U))return y1(R,D,U,G);if(I(U)){if(m1=I(U),typeof m1!="function")throw Error(l(150));return U=m1.call(U),D1(R,D,U,G)}if(typeof U.then=="function")return k2(R,D,bi(U),G);if(U.$$typeof===S)return k2(R,D,zi(R,U),G);_i(R,U)}return typeof U=="string"&&U!==""||typeof U=="number"||typeof U=="bigint"?(U=""+U,D!==null&&D.tag===6?(i(R,D.sibling),G=u(D,U),G.return=R,R=G):(i(R,D),G=Vr(U,R.mode,G),G.return=R,R=G),g(R)):i(R,D)}return function(R,D,U,G){try{dn=0;var m1=k2(R,D,U,G);return d0=null,m1}catch(w1){if(w1===cn)throw w1;var H1=$3(29,w1,null,R.mode);return H1.lanes=G,H1.return=R,H1}finally{}}}var Tt=ps(!0),hs=ps(!1),p0=N1(null),wi=N1(0);function ms(e,t){e=Ne,V1(wi,e),V1(p0,t),Ne=e|t.baseLanes}function Ga(){V1(wi,Ne),V1(p0,p0.current)}function Za(){Ne=wi.current,e2(p0),e2(wi)}var H3=N1(null),ce=null;function Ye(e){var t=e.alternate;V1(I2,I2.current&1),V1(H3,e),ce===null&&(t===null||p0.current!==null||t.memoizedState!==null)&&(ce=e)}function gs(e){if(e.tag===22){if(V1(I2,I2.current),V1(H3,e),ce===null){var t=e.alternate;t!==null&&t.memoizedState!==null&&(ce=e)}}else Qe()}function Qe(){V1(I2,I2.current),V1(H3,H3.current)}function Ee(e){e2(H3),ce===e&&(ce=null),e2(I2)}var I2=N1(0);function xi(e){for(var t=e;t!==null;){if(t.tag===13){var i=t.memoizedState;if(i!==null&&(i=i.dehydrated,i===null||i.data==="$?"||i.data==="$!"))return t}else if(t.tag===19&&t.memoizedProps.revealOrder!==void 0){if((t.flags&128)!==0)return t}else if(t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var G6=typeof AbortController<"u"?AbortController:function(){var e=[],t=this.signal={aborted:!1,addEventListener:function(i,o){e.push(o)}};this.abort=function(){t.aborted=!0,e.forEach(function(i){return i()})}},Z6=n.unstable_scheduleCallback,K6=n.unstable_NormalPriority,j2={$$typeof:S,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0};function Ka(){return{controller:new G6,data:new Map,refCount:0}}function hn(e){e.refCount--,e.refCount===0&&Z6(K6,function(){e.controller.abort()})}var mn=null,Ja=0,h0=0,m0=null;function J6(e,t){if(mn===null){var i=mn=[];Ja=0,h0=ao(),m0={status:"pending",value:void 0,then:function(o){i.push(o)}}}return Ja++,t.then(ys,ys),t}function ys(){if(--Ja===0&&mn!==null){m0!==null&&(m0.status="fulfilled");var e=mn;mn=null,h0=0,m0=null;for(var t=0;t<e.length;t++)(0,e[t])()}}function W6(e,t){var i=[],o={status:"pending",value:null,reason:null,then:function(u){i.push(u)}};return e.then(function(){o.status="fulfilled",o.value=t;for(var u=0;u<i.length;u++)(0,i[u])(t)},function(u){for(o.status="rejected",o.reason=u,u=0;u<i.length;u++)(0,i[u])(void 0)}),o}var vs=t1.S;t1.S=function(e,t){typeof t=="object"&&t!==null&&typeof t.then=="function"&&J6(e,t),vs!==null&&vs(e,t)};var Ct=N1(null);function Wa(){var e=Ct.current;return e!==null?e:c2.pooledCache}function Si(e,t){t===null?V1(Ct,Ct.current):V1(Ct,t.pool)}function bs(){var e=Wa();return e===null?null:{parent:j2._currentValue,pool:e}}var Xe=0,q1=null,i2=null,R2=null,Ai=!1,g0=!1,Mt=!1,ki=0,gn=0,y0=null,e5=0;function C2(){throw Error(l(321))}function er(e,t){if(t===null)return!1;for(var i=0;i<t.length&&i<e.length;i++)if(!E3(e[i],t[i]))return!1;return!0}function tr(e,t,i,o,u,f){return Xe=f,q1=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,t1.H=e===null||e.memoizedState===null?Ot:Ge,Mt=!1,f=i(o,u),Mt=!1,g0&&(f=ws(t,i,o,u)),_s(e),f}function _s(e){t1.H=fe;var t=i2!==null&&i2.next!==null;if(Xe=0,R2=i2=q1=null,Ai=!1,gn=0,y0=null,t)throw Error(l(300));e===null||$2||(e=e.dependencies,e!==null&&Ui(e)&&($2=!0))}function ws(e,t,i,o){q1=e;var u=0;do{if(g0&&(y0=null),gn=0,g0=!1,25<=u)throw Error(l(301));if(u+=1,R2=i2=null,e.updateQueue!=null){var f=e.updateQueue;f.lastEffect=null,f.events=null,f.stores=null,f.memoCache!=null&&(f.memoCache.index=0)}t1.H=Dt,f=t(i,o)}while(g0);return f}function t5(){var e=t1.H,t=e.useState()[0];return t=typeof t.then=="function"?yn(t):t,e=e.useState()[0],(i2!==null?i2.memoizedState:null)!==e&&(q1.flags|=1024),t}function nr(){var e=ki!==0;return ki=0,e}function ir(e,t,i){t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~i}function ar(e){if(Ai){for(e=e.memoizedState;e!==null;){var t=e.queue;t!==null&&(t.pending=null),e=e.next}Ai=!1}Xe=0,R2=i2=q1=null,g0=!1,gn=ki=0,y0=null}function m3(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return R2===null?q1.memoizedState=R2=e:R2=R2.next=e,R2}function U2(){if(i2===null){var e=q1.alternate;e=e!==null?e.memoizedState:null}else e=i2.next;var t=R2===null?q1.memoizedState:R2.next;if(t!==null)R2=t,i2=e;else{if(e===null)throw q1.alternate===null?Error(l(467)):Error(l(310));i2=e,e={memoizedState:i2.memoizedState,baseState:i2.baseState,baseQueue:i2.baseQueue,queue:i2.queue,next:null},R2===null?q1.memoizedState=R2=e:R2=R2.next=e}return R2}var Ei;Ei=function(){return{lastEffect:null,events:null,stores:null,memoCache:null}};function yn(e){var t=gn;return gn+=1,y0===null&&(y0=[]),e=cs(y0,e,t),t=q1,(R2===null?t.memoizedState:R2.next)===null&&(t=t.alternate,t1.H=t===null||t.memoizedState===null?Ot:Ge),e}function Ti(e){if(e!==null&&typeof e=="object"){if(typeof e.then=="function")return yn(e);if(e.$$typeof===S)return i3(e)}throw Error(l(438,String(e)))}function rr(e){var t=null,i=q1.updateQueue;if(i!==null&&(t=i.memoCache),t==null){var o=q1.alternate;o!==null&&(o=o.updateQueue,o!==null&&(o=o.memoCache,o!=null&&(t={data:o.data.map(function(u){return u.slice()}),index:0})))}if(t==null&&(t={data:[],index:0}),i===null&&(i=Ei(),q1.updateQueue=i),i.memoCache=t,i=t.data[t.index],i===void 0)for(i=t.data[t.index]=Array(e),o=0;o<e;o++)i[o]=A1;return t.index++,i}function Te(e,t){return typeof t=="function"?t(e):t}function Ci(e){var t=U2();return or(t,i2,e)}function or(e,t,i){var o=e.queue;if(o===null)throw Error(l(311));o.lastRenderedReducer=i;var u=e.baseQueue,f=o.pending;if(f!==null){if(u!==null){var g=u.next;u.next=f.next,f.next=g}t.baseQueue=u=f,o.pending=null}if(f=e.baseState,u===null)e.memoizedState=f;else{t=u.next;var x=g=null,C=null,L=t,Y=!1;do{var K=L.lane&-536870913;if(K!==L.lane?(X1&K)===K:(Xe&K)===K){var N=L.revertLane;if(N===0)C!==null&&(C=C.next={lane:0,revertLane:0,action:L.action,hasEagerState:L.hasEagerState,eagerState:L.eagerState,next:null}),K===h0&&(Y=!0);else if((Xe&N)===N){L=L.next,N===h0&&(Y=!0);continue}else K={lane:0,revertLane:L.revertLane,action:L.action,hasEagerState:L.hasEagerState,eagerState:L.eagerState,next:null},C===null?(x=C=K,g=f):C=C.next=K,q1.lanes|=N,at|=N;K=L.action,Mt&&i(f,K),f=L.hasEagerState?L.eagerState:i(f,K)}else N={lane:K,revertLane:L.revertLane,action:L.action,hasEagerState:L.hasEagerState,eagerState:L.eagerState,next:null},C===null?(x=C=N,g=f):C=C.next=N,q1.lanes|=K,at|=K;L=L.next}while(L!==null&&L!==t);if(C===null?g=f:C.next=x,!E3(f,e.memoizedState)&&($2=!0,Y&&(i=m0,i!==null)))throw i;e.memoizedState=f,e.baseState=g,e.baseQueue=C,o.lastRenderedState=f}return u===null&&(o.lanes=0),[e.memoizedState,o.dispatch]}function lr(e){var t=U2(),i=t.queue;if(i===null)throw Error(l(311));i.lastRenderedReducer=e;var o=i.dispatch,u=i.pending,f=t.memoizedState;if(u!==null){i.pending=null;var g=u=u.next;do f=e(f,g.action),g=g.next;while(g!==u);E3(f,t.memoizedState)||($2=!0),t.memoizedState=f,t.baseQueue===null&&(t.baseState=f),i.lastRenderedState=f}return[f,o]}function xs(e,t,i){var o=q1,u=U2(),f=Z1;if(f){if(i===void 0)throw Error(l(407));i=i()}else i=t();var g=!E3((i2||u).memoizedState,i);if(g&&(u.memoizedState=i,$2=!0),u=u.queue,cr(ks.bind(null,o,u,e),[e]),u.getSnapshot!==t||g||R2!==null&&R2.memoizedState.tag&1){if(o.flags|=2048,v0(9,As.bind(null,o,u,i,t),{destroy:void 0},null),c2===null)throw Error(l(349));f||(Xe&60)!==0||Ss(o,t,i)}return i}function Ss(e,t,i){e.flags|=16384,e={getSnapshot:t,value:i},t=q1.updateQueue,t===null?(t=Ei(),q1.updateQueue=t,t.stores=[e]):(i=t.stores,i===null?t.stores=[e]:i.push(e))}function As(e,t,i,o){t.value=i,t.getSnapshot=o,Es(t)&&Ts(e)}function ks(e,t,i){return i(function(){Es(t)&&Ts(e)})}function Es(e){var t=e.getSnapshot;e=e.value;try{var i=t();return!E3(e,i)}catch{return!0}}function Ts(e){var t=Pe(e,2);t!==null&&d3(t,e,2)}function sr(e){var t=m3();if(typeof e=="function"){var i=e;if(e=i(),Mt){l2(!0);try{i()}finally{l2(!1)}}}return t.memoizedState=t.baseState=e,t.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:Te,lastRenderedState:e},t}function Cs(e,t,i,o){return e.baseState=i,or(e,i2,typeof o=="function"?o:Te)}function n5(e,t,i,o,u){if(Di(e))throw Error(l(485));if(e=t.action,e!==null){var f={payload:u,action:e,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(g){f.listeners.push(g)}};t1.T!==null?i(!0):f.isTransition=!1,o(f),i=t.pending,i===null?(f.next=t.pending=f,Ms(t,f)):(f.next=i.next,t.pending=i.next=f)}}function Ms(e,t){var i=t.action,o=t.payload,u=e.state;if(t.isTransition){var f=t1.T,g={};t1.T=g;try{var x=i(u,o),C=t1.S;C!==null&&C(g,x),Os(e,t,x)}catch(L){ur(e,t,L)}finally{t1.T=f}}else try{f=i(u,o),Os(e,t,f)}catch(L){ur(e,t,L)}}function Os(e,t,i){i!==null&&typeof i=="object"&&typeof i.then=="function"?i.then(function(o){Ds(e,t,o)},function(o){return ur(e,t,o)}):Ds(e,t,i)}function Ds(e,t,i){t.status="fulfilled",t.value=i,Ls(t),e.state=i,t=e.pending,t!==null&&(i=t.next,i===t?e.pending=null:(i=i.next,t.next=i,Ms(e,i)))}function ur(e,t,i){var o=e.pending;if(e.pending=null,o!==null){o=o.next;do t.status="rejected",t.reason=i,Ls(t),t=t.next;while(t!==o)}e.action=null}function Ls(e){e=e.listeners;for(var t=0;t<e.length;t++)(0,e[t])()}function Rs(e,t){return t}function Us(e,t){if(Z1){var i=c2.formState;if(i!==null){e:{var o=q1;if(Z1){if(G2){t:{for(var u=G2,f=ue;u.nodeType!==8;){if(!f){u=null;break t}if(u=ae(u.nextSibling),u===null){u=null;break t}}f=u.data,u=f==="F!"||f==="F"?u:null}if(u){G2=ae(u.nextSibling),o=u.data==="F!";break e}}Et(o)}o=!1}o&&(t=i[0])}}return i=m3(),i.memoizedState=i.baseState=t,o={pending:null,lanes:0,dispatch:null,lastRenderedReducer:Rs,lastRenderedState:t},i.queue=o,i=Js.bind(null,q1,o),o.dispatch=i,o=sr(!1),f=mr.bind(null,q1,!1,o.queue),o=m3(),u={state:t,dispatch:null,action:e,pending:null},o.queue=u,i=n5.bind(null,q1,u,f,i),u.dispatch=i,o.memoizedState=e,[t,i,!1]}function zs(e){var t=U2();return Ns(t,i2,e)}function Ns(e,t,i){t=or(e,t,Rs)[0],e=Ci(Te)[0],t=typeof t=="object"&&t!==null&&typeof t.then=="function"?yn(t):t;var o=U2(),u=o.queue,f=u.dispatch;return i!==o.memoizedState&&(q1.flags|=2048,v0(9,i5.bind(null,u,i),{destroy:void 0},null)),[t,f,e]}function i5(e,t){e.action=t}function Is(e){var t=U2(),i=i2;if(i!==null)return Ns(t,i,e);U2(),t=t.memoizedState,i=U2();var o=i.queue.dispatch;return i.memoizedState=e,[t,o,!1]}function v0(e,t,i,o){return e={tag:e,create:t,inst:i,deps:o,next:null},t=q1.updateQueue,t===null&&(t=Ei(),q1.updateQueue=t),i=t.lastEffect,i===null?t.lastEffect=e.next=e:(o=i.next,i.next=e,e.next=o,t.lastEffect=e),e}function js(){return U2().memoizedState}function Mi(e,t,i,o){var u=m3();q1.flags|=e,u.memoizedState=v0(1|t,i,{destroy:void 0},o===void 0?null:o)}function Oi(e,t,i,o){var u=U2();o=o===void 0?null:o;var f=u.memoizedState.inst;i2!==null&&o!==null&&er(o,i2.memoizedState.deps)?u.memoizedState=v0(t,i,f,o):(q1.flags|=e,u.memoizedState=v0(1|t,i,f,o))}function Bs(e,t){Mi(8390656,8,e,t)}function cr(e,t){Oi(2048,8,e,t)}function qs(e,t){return Oi(4,2,e,t)}function Hs(e,t){return Oi(4,4,e,t)}function Vs(e,t){if(typeof t=="function"){e=e();var i=t(e);return function(){typeof i=="function"?i():t(null)}}if(t!=null)return e=e(),t.current=e,function(){t.current=null}}function Fs(e,t,i){i=i!=null?i.concat([e]):null,Oi(4,4,Vs.bind(null,t,e),i)}function fr(){}function $s(e,t){var i=U2();t=t===void 0?null:t;var o=i.memoizedState;return t!==null&&er(t,o[1])?o[0]:(i.memoizedState=[e,t],e)}function Ps(e,t){var i=U2();t=t===void 0?null:t;var o=i.memoizedState;if(t!==null&&er(t,o[1]))return o[0];if(o=e(),Mt){l2(!0);try{e()}finally{l2(!1)}}return i.memoizedState=[o,t],o}function dr(e,t,i){return i===void 0||(Xe&1073741824)!==0?e.memoizedState=t:(e.memoizedState=i,e=Q4(),q1.lanes|=e,at|=e,i)}function Ys(e,t,i,o){return E3(i,t)?i:p0.current!==null?(e=dr(e,i,o),E3(e,t)||($2=!0),e):(Xe&42)===0?($2=!0,e.memoizedState=i):(e=Q4(),q1.lanes|=e,at|=e,t)}function Qs(e,t,i,o,u){var f=a1.p;a1.p=f!==0&&8>f?f:8;var g=t1.T,x={};t1.T=x,mr(e,!1,t,i);try{var C=u(),L=t1.S;if(L!==null&&L(x,C),C!==null&&typeof C=="object"&&typeof C.then=="function"){var Y=W6(C,o);vn(e,t,Y,O3(e))}else vn(e,t,o,O3(e))}catch(K){vn(e,t,{then:function(){},status:"rejected",reason:K},O3())}finally{a1.p=f,t1.T=g}}function a5(){}function pr(e,t,i,o){if(e.tag!==5)throw Error(l(476));var u=Xs(e).queue;Qs(e,u,t,E1,i===null?a5:function(){return Gs(e),i(o)})}function Xs(e){var t=e.memoizedState;if(t!==null)return t;t={memoizedState:E1,baseState:E1,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Te,lastRenderedState:E1},next:null};var i={};return t.next={memoizedState:i,baseState:i,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Te,lastRenderedState:i},next:null},e.memoizedState=t,e=e.alternate,e!==null&&(e.memoizedState=t),t}function Gs(e){var t=Xs(e).next.queue;vn(e,t,{},O3())}function hr(){return i3(jn)}function Zs(){return U2().memoizedState}function Ks(){return U2().memoizedState}function r5(e){for(var t=e.return;t!==null;){switch(t.tag){case 24:case 3:var i=O3();e=Je(i);var o=We(t,e,i);o!==null&&(d3(o,t,i),wn(o,t,i)),t={cache:Ka()},e.payload=t;return}t=t.return}}function o5(e,t,i){var o=O3();i={lane:o,revertLane:0,action:i,hasEagerState:!1,eagerState:null,next:null},Di(e)?Ws(t,i):(i=$a(e,t,i,o),i!==null&&(d3(i,e,o),e4(i,t,o)))}function Js(e,t,i){var o=O3();vn(e,t,i,o)}function vn(e,t,i,o){var u={lane:o,revertLane:0,action:i,hasEagerState:!1,eagerState:null,next:null};if(Di(e))Ws(t,u);else{var f=e.alternate;if(e.lanes===0&&(f===null||f.lanes===0)&&(f=t.lastRenderedReducer,f!==null))try{var g=t.lastRenderedState,x=f(g,i);if(u.hasEagerState=!0,u.eagerState=x,E3(x,g))return hi(e,t,u,0),c2===null&&pi(),!1}catch{}finally{}if(i=$a(e,t,u,o),i!==null)return d3(i,e,o),e4(i,t,o),!0}return!1}function mr(e,t,i,o){if(o={lane:2,revertLane:ao(),action:o,hasEagerState:!1,eagerState:null,next:null},Di(e)){if(t)throw Error(l(479))}else t=$a(e,i,o,2),t!==null&&d3(t,e,2)}function Di(e){var t=e.alternate;return e===q1||t!==null&&t===q1}function Ws(e,t){g0=Ai=!0;var i=e.pending;i===null?t.next=t:(t.next=i.next,i.next=t),e.pending=t}function e4(e,t,i){if((i&4194176)!==0){var o=t.lanes;o&=e.pendingLanes,i|=o,t.lanes=i,ri(e,i)}}var fe={readContext:i3,use:Ti,useCallback:C2,useContext:C2,useEffect:C2,useImperativeHandle:C2,useLayoutEffect:C2,useInsertionEffect:C2,useMemo:C2,useReducer:C2,useRef:C2,useState:C2,useDebugValue:C2,useDeferredValue:C2,useTransition:C2,useSyncExternalStore:C2,useId:C2};fe.useCacheRefresh=C2,fe.useMemoCache=C2,fe.useHostTransitionStatus=C2,fe.useFormState=C2,fe.useActionState=C2,fe.useOptimistic=C2;var Ot={readContext:i3,use:Ti,useCallback:function(e,t){return m3().memoizedState=[e,t===void 0?null:t],e},useContext:i3,useEffect:Bs,useImperativeHandle:function(e,t,i){i=i!=null?i.concat([e]):null,Mi(4194308,4,Vs.bind(null,t,e),i)},useLayoutEffect:function(e,t){return Mi(4194308,4,e,t)},useInsertionEffect:function(e,t){Mi(4,2,e,t)},useMemo:function(e,t){var i=m3();t=t===void 0?null:t;var o=e();if(Mt){l2(!0);try{e()}finally{l2(!1)}}return i.memoizedState=[o,t],o},useReducer:function(e,t,i){var o=m3();if(i!==void 0){var u=i(t);if(Mt){l2(!0);try{i(t)}finally{l2(!1)}}}else u=t;return o.memoizedState=o.baseState=u,e={pending:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:u},o.queue=e,e=e.dispatch=o5.bind(null,q1,e),[o.memoizedState,e]},useRef:function(e){var t=m3();return e={current:e},t.memoizedState=e},useState:function(e){e=sr(e);var t=e.queue,i=Js.bind(null,q1,t);return t.dispatch=i,[e.memoizedState,i]},useDebugValue:fr,useDeferredValue:function(e,t){var i=m3();return dr(i,e,t)},useTransition:function(){var e=sr(!1);return e=Qs.bind(null,q1,e.queue,!0,!1),m3().memoizedState=e,[!1,e]},useSyncExternalStore:function(e,t,i){var o=q1,u=m3();if(Z1){if(i===void 0)throw Error(l(407));i=i()}else{if(i=t(),c2===null)throw Error(l(349));(X1&60)!==0||Ss(o,t,i)}u.memoizedState=i;var f={value:i,getSnapshot:t};return u.queue=f,Bs(ks.bind(null,o,f,e),[e]),o.flags|=2048,v0(9,As.bind(null,o,f,i,t),{destroy:void 0},null),i},useId:function(){var e=m3(),t=c2.identifierPrefix;if(Z1){var i=ke,o=Ae;i=(o&~(1<<32-x2(o)-1)).toString(32)+i,t=":"+t+"R"+i,i=ki++,0<i&&(t+="H"+i.toString(32)),t+=":"}else i=e5++,t=":"+t+"r"+i.toString(32)+":";return e.memoizedState=t},useCacheRefresh:function(){return m3().memoizedState=r5.bind(null,q1)}};Ot.useMemoCache=rr,Ot.useHostTransitionStatus=hr,Ot.useFormState=Us,Ot.useActionState=Us,Ot.useOptimistic=function(e){var t=m3();t.memoizedState=t.baseState=e;var i={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return t.queue=i,t=mr.bind(null,q1,!0,i),i.dispatch=t,[e,t]};var Ge={readContext:i3,use:Ti,useCallback:$s,useContext:i3,useEffect:cr,useImperativeHandle:Fs,useInsertionEffect:qs,useLayoutEffect:Hs,useMemo:Ps,useReducer:Ci,useRef:js,useState:function(){return Ci(Te)},useDebugValue:fr,useDeferredValue:function(e,t){var i=U2();return Ys(i,i2.memoizedState,e,t)},useTransition:function(){var e=Ci(Te)[0],t=U2().memoizedState;return[typeof e=="boolean"?e:yn(e),t]},useSyncExternalStore:xs,useId:Zs};Ge.useCacheRefresh=Ks,Ge.useMemoCache=rr,Ge.useHostTransitionStatus=hr,Ge.useFormState=zs,Ge.useActionState=zs,Ge.useOptimistic=function(e,t){var i=U2();return Cs(i,i2,e,t)};var Dt={readContext:i3,use:Ti,useCallback:$s,useContext:i3,useEffect:cr,useImperativeHandle:Fs,useInsertionEffect:qs,useLayoutEffect:Hs,useMemo:Ps,useReducer:lr,useRef:js,useState:function(){return lr(Te)},useDebugValue:fr,useDeferredValue:function(e,t){var i=U2();return i2===null?dr(i,e,t):Ys(i,i2.memoizedState,e,t)},useTransition:function(){var e=lr(Te)[0],t=U2().memoizedState;return[typeof e=="boolean"?e:yn(e),t]},useSyncExternalStore:xs,useId:Zs};Dt.useCacheRefresh=Ks,Dt.useMemoCache=rr,Dt.useHostTransitionStatus=hr,Dt.useFormState=Is,Dt.useActionState=Is,Dt.useOptimistic=function(e,t){var i=U2();return i2!==null?Cs(i,i2,e,t):(i.baseState=e,[e,i.queue.dispatch])};function gr(e,t,i,o){t=e.memoizedState,i=i(o,t),i=i==null?t:f1({},t,i),e.memoizedState=i,e.lanes===0&&(e.updateQueue.baseState=i)}var yr={isMounted:function(e){return(e=e._reactInternals)?P(e)===e:!1},enqueueSetState:function(e,t,i){e=e._reactInternals;var o=O3(),u=Je(o);u.payload=t,i!=null&&(u.callback=i),t=We(e,u,o),t!==null&&(d3(t,e,o),wn(t,e,o))},enqueueReplaceState:function(e,t,i){e=e._reactInternals;var o=O3(),u=Je(o);u.tag=1,u.payload=t,i!=null&&(u.callback=i),t=We(e,u,o),t!==null&&(d3(t,e,o),wn(t,e,o))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var i=O3(),o=Je(i);o.tag=2,t!=null&&(o.callback=t),t=We(e,o,i),t!==null&&(d3(t,e,i),wn(t,e,i))}};function t4(e,t,i,o,u,f,g){return e=e.stateNode,typeof e.shouldComponentUpdate=="function"?e.shouldComponentUpdate(o,f,g):t.prototype&&t.prototype.isPureReactComponent?!rn(i,o)||!rn(u,f):!0}function n4(e,t,i,o){e=t.state,typeof t.componentWillReceiveProps=="function"&&t.componentWillReceiveProps(i,o),typeof t.UNSAFE_componentWillReceiveProps=="function"&&t.UNSAFE_componentWillReceiveProps(i,o),t.state!==e&&yr.enqueueReplaceState(t,t.state,null)}function Lt(e,t){var i=t;if("ref"in t){i={};for(var o in t)o!=="ref"&&(i[o]=t[o])}if(e=e.defaultProps){i===t&&(i=f1({},i));for(var u in e)i[u]===void 0&&(i[u]=e[u])}return i}var Li=typeof reportError=="function"?reportError:function(e){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var t=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof e=="object"&&e!==null&&typeof e.message=="string"?String(e.message):String(e),error:e});if(!window.dispatchEvent(t))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",e);return}console.error(e)};function i4(e){Li(e)}function a4(e){console.error(e)}function r4(e){Li(e)}function Ri(e,t){try{var i=e.onUncaughtError;i(t.value,{componentStack:t.stack})}catch(o){setTimeout(function(){throw o})}}function o4(e,t,i){try{var o=e.onCaughtError;o(i.value,{componentStack:i.stack,errorBoundary:t.tag===1?t.stateNode:null})}catch(u){setTimeout(function(){throw u})}}function vr(e,t,i){return i=Je(i),i.tag=3,i.payload={element:null},i.callback=function(){Ri(e,t)},i}function l4(e){return e=Je(e),e.tag=3,e}function s4(e,t,i,o){var u=i.type.getDerivedStateFromError;if(typeof u=="function"){var f=o.value;e.payload=function(){return u(f)},e.callback=function(){o4(t,i,o)}}var g=i.stateNode;g!==null&&typeof g.componentDidCatch=="function"&&(e.callback=function(){o4(t,i,o),typeof u!="function"&&(rt===null?rt=new Set([this]):rt.add(this));var x=o.stack;this.componentDidCatch(o.value,{componentStack:x!==null?x:""})})}function l5(e,t,i,o,u){if(i.flags|=32768,o!==null&&typeof o=="object"&&typeof o.then=="function"){if(t=i.alternate,t!==null&&_n(t,i,u,!0),i=H3.current,i!==null){switch(i.tag){case 13:return ce===null?Wr():i.alternate===null&&A2===0&&(A2=3),i.flags&=-257,i.flags|=65536,i.lanes=u,o===Xa?i.flags|=16384:(t=i.updateQueue,t===null?i.updateQueue=new Set([o]):t.add(o),to(e,o,u)),!1;case 22:return i.flags|=65536,o===Xa?i.flags|=16384:(t=i.updateQueue,t===null?(t={transitions:null,markerInstances:null,retryQueue:new Set([o])},i.updateQueue=t):(i=t.retryQueue,i===null?t.retryQueue=new Set([o]):i.add(o)),to(e,o,u)),!1}throw Error(l(435,i.tag))}return to(e,o,u),Wr(),!1}if(Z1)return t=H3.current,t!==null?((t.flags&65536)===0&&(t.flags|=256),t.flags|=65536,t.lanes=u,o!==Qa&&(e=Error(l(422),{cause:o}),un(j3(e,i)))):(o!==Qa&&(t=Error(l(423),{cause:o}),un(j3(t,i))),e=e.current.alternate,e.flags|=65536,u&=-u,e.lanes|=u,o=j3(o,i),u=vr(e.stateNode,o,u),Rr(e,u),A2!==4&&(A2=2)),!1;var f=Error(l(520),{cause:o});if(f=j3(f,i),Mn===null?Mn=[f]:Mn.push(f),A2!==4&&(A2=2),t===null)return!0;o=j3(o,i),i=t;do{switch(i.tag){case 3:return i.flags|=65536,e=u&-u,i.lanes|=e,e=vr(i.stateNode,o,e),Rr(i,e),!1;case 1:if(t=i.type,f=i.stateNode,(i.flags&128)===0&&(typeof t.getDerivedStateFromError=="function"||f!==null&&typeof f.componentDidCatch=="function"&&(rt===null||!rt.has(f))))return i.flags|=65536,u&=-u,i.lanes|=u,u=l4(u),s4(u,e,i,o),Rr(i,u),!1}i=i.return}while(i!==null);return!1}var u4=Error(l(461)),$2=!1;function Z2(e,t,i,o){t.child=e===null?hs(t,null,i,o):Tt(t,e.child,i,o)}function c4(e,t,i,o,u){i=i.render;var f=t.ref;if("ref"in o){var g={};for(var x in o)x!=="ref"&&(g[x]=o[x])}else g=o;return Ut(t),o=tr(e,t,i,g,f,u),x=nr(),e!==null&&!$2?(ir(e,t,u),Ce(e,t,u)):(Z1&&x&&Pa(t),t.flags|=1,Z2(e,t,o,u),t.child)}function f4(e,t,i,o,u){if(e===null){var f=i.type;return typeof f=="function"&&!Hr(f)&&f.defaultProps===void 0&&i.compare===null?(t.tag=15,t.type=f,d4(e,t,f,o,u)):(e=ji(i.type,null,o,t,t.mode,u),e.ref=t.ref,e.return=t,t.child=e)}if(f=e.child,!Tr(e,u)){var g=f.memoizedProps;if(i=i.compare,i=i!==null?i:rn,i(g,o)&&e.ref===t.ref)return Ce(e,t,u)}return t.flags|=1,e=it(f,o),e.ref=t.ref,e.return=t,t.child=e}function d4(e,t,i,o,u){if(e!==null){var f=e.memoizedProps;if(rn(f,o)&&e.ref===t.ref)if($2=!1,t.pendingProps=o=f,Tr(e,u))(e.flags&131072)!==0&&($2=!0);else return t.lanes=e.lanes,Ce(e,t,u)}return br(e,t,i,o,u)}function p4(e,t,i){var o=t.pendingProps,u=o.children,f=(t.stateNode._pendingVisibility&2)!==0,g=e!==null?e.memoizedState:null;if(bn(e,t),o.mode==="hidden"||f){if((t.flags&128)!==0){if(o=g!==null?g.baseLanes|i:i,e!==null){for(u=t.child=e.child,f=0;u!==null;)f=f|u.lanes|u.childLanes,u=u.sibling;t.childLanes=f&~o}else t.childLanes=0,t.child=null;return h4(e,t,o,i)}if((i&536870912)!==0)t.memoizedState={baseLanes:0,cachePool:null},e!==null&&Si(t,g!==null?g.cachePool:null),g!==null?ms(t,g):Ga(),gs(t);else return t.lanes=t.childLanes=536870912,h4(e,t,g!==null?g.baseLanes|i:i,i)}else g!==null?(Si(t,g.cachePool),ms(t,g),Qe(),t.memoizedState=null):(e!==null&&Si(t,null),Ga(),Qe());return Z2(e,t,u,i),t.child}function h4(e,t,i,o){var u=Wa();return u=u===null?null:{parent:j2._currentValue,pool:u},t.memoizedState={baseLanes:i,cachePool:u},e!==null&&Si(t,null),Ga(),gs(t),e!==null&&_n(e,t,o,!0),null}function bn(e,t){var i=t.ref;if(i===null)e!==null&&e.ref!==null&&(t.flags|=2097664);else{if(typeof i!="function"&&typeof i!="object")throw Error(l(284));(e===null||e.ref!==i)&&(t.flags|=2097664)}}function br(e,t,i,o,u){return Ut(t),i=tr(e,t,i,o,void 0,u),o=nr(),e!==null&&!$2?(ir(e,t,u),Ce(e,t,u)):(Z1&&o&&Pa(t),t.flags|=1,Z2(e,t,i,u),t.child)}function m4(e,t,i,o,u,f){return Ut(t),t.updateQueue=null,i=ws(t,o,i,u),_s(e),o=nr(),e!==null&&!$2?(ir(e,t,f),Ce(e,t,f)):(Z1&&o&&Pa(t),t.flags|=1,Z2(e,t,i,f),t.child)}function g4(e,t,i,o,u){if(Ut(t),t.stateNode===null){var f=u0,g=i.contextType;typeof g=="object"&&g!==null&&(f=i3(g)),f=new i(o,f),t.memoizedState=f.state!==null&&f.state!==void 0?f.state:null,f.updater=yr,t.stateNode=f,f._reactInternals=t,f=t.stateNode,f.props=o,f.state=t.memoizedState,f.refs={},Dr(t),g=i.contextType,f.context=typeof g=="object"&&g!==null?i3(g):u0,f.state=t.memoizedState,g=i.getDerivedStateFromProps,typeof g=="function"&&(gr(t,i,g,o),f.state=t.memoizedState),typeof i.getDerivedStateFromProps=="function"||typeof f.getSnapshotBeforeUpdate=="function"||typeof f.UNSAFE_componentWillMount!="function"&&typeof f.componentWillMount!="function"||(g=f.state,typeof f.componentWillMount=="function"&&f.componentWillMount(),typeof f.UNSAFE_componentWillMount=="function"&&f.UNSAFE_componentWillMount(),g!==f.state&&yr.enqueueReplaceState(f,f.state,null),Sn(t,o,f,u),xn(),f.state=t.memoizedState),typeof f.componentDidMount=="function"&&(t.flags|=4194308),o=!0}else if(e===null){f=t.stateNode;var x=t.memoizedProps,C=Lt(i,x);f.props=C;var L=f.context,Y=i.contextType;g=u0,typeof Y=="object"&&Y!==null&&(g=i3(Y));var K=i.getDerivedStateFromProps;Y=typeof K=="function"||typeof f.getSnapshotBeforeUpdate=="function",x=t.pendingProps!==x,Y||typeof f.UNSAFE_componentWillReceiveProps!="function"&&typeof f.componentWillReceiveProps!="function"||(x||L!==g)&&n4(t,f,o,g),Ke=!1;var N=t.memoizedState;f.state=N,Sn(t,o,f,u),xn(),L=t.memoizedState,x||N!==L||Ke?(typeof K=="function"&&(gr(t,i,K,o),L=t.memoizedState),(C=Ke||t4(t,i,C,o,N,L,g))?(Y||typeof f.UNSAFE_componentWillMount!="function"&&typeof f.componentWillMount!="function"||(typeof f.componentWillMount=="function"&&f.componentWillMount(),typeof f.UNSAFE_componentWillMount=="function"&&f.UNSAFE_componentWillMount()),typeof f.componentDidMount=="function"&&(t.flags|=4194308)):(typeof f.componentDidMount=="function"&&(t.flags|=4194308),t.memoizedProps=o,t.memoizedState=L),f.props=o,f.state=L,f.context=g,o=C):(typeof f.componentDidMount=="function"&&(t.flags|=4194308),o=!1)}else{f=t.stateNode,Lr(e,t),g=t.memoizedProps,Y=Lt(i,g),f.props=Y,K=t.pendingProps,N=f.context,L=i.contextType,C=u0,typeof L=="object"&&L!==null&&(C=i3(L)),x=i.getDerivedStateFromProps,(L=typeof x=="function"||typeof f.getSnapshotBeforeUpdate=="function")||typeof f.UNSAFE_componentWillReceiveProps!="function"&&typeof f.componentWillReceiveProps!="function"||(g!==K||N!==C)&&n4(t,f,o,C),Ke=!1,N=t.memoizedState,f.state=N,Sn(t,o,f,u),xn();var H=t.memoizedState;g!==K||N!==H||Ke||e!==null&&e.dependencies!==null&&Ui(e.dependencies)?(typeof x=="function"&&(gr(t,i,x,o),H=t.memoizedState),(Y=Ke||t4(t,i,Y,o,N,H,C)||e!==null&&e.dependencies!==null&&Ui(e.dependencies))?(L||typeof f.UNSAFE_componentWillUpdate!="function"&&typeof f.componentWillUpdate!="function"||(typeof f.componentWillUpdate=="function"&&f.componentWillUpdate(o,H,C),typeof f.UNSAFE_componentWillUpdate=="function"&&f.UNSAFE_componentWillUpdate(o,H,C)),typeof f.componentDidUpdate=="function"&&(t.flags|=4),typeof f.getSnapshotBeforeUpdate=="function"&&(t.flags|=1024)):(typeof f.componentDidUpdate!="function"||g===e.memoizedProps&&N===e.memoizedState||(t.flags|=4),typeof f.getSnapshotBeforeUpdate!="function"||g===e.memoizedProps&&N===e.memoizedState||(t.flags|=1024),t.memoizedProps=o,t.memoizedState=H),f.props=o,f.state=H,f.context=C,o=Y):(typeof f.componentDidUpdate!="function"||g===e.memoizedProps&&N===e.memoizedState||(t.flags|=4),typeof f.getSnapshotBeforeUpdate!="function"||g===e.memoizedProps&&N===e.memoizedState||(t.flags|=1024),o=!1)}return f=o,bn(e,t),o=(t.flags&128)!==0,f||o?(f=t.stateNode,i=o&&typeof i.getDerivedStateFromError!="function"?null:f.render(),t.flags|=1,e!==null&&o?(t.child=Tt(t,e.child,null,u),t.child=Tt(t,null,i,u)):Z2(e,t,i,u),t.memoizedState=f.state,e=t.child):e=Ce(e,t,u),e}function y4(e,t,i,o){return sn(),t.flags|=256,Z2(e,t,i,o),t.child}var _r={dehydrated:null,treeContext:null,retryLane:0};function wr(e){return{baseLanes:e,cachePool:bs()}}function xr(e,t,i){return e=e!==null?e.childLanes&~i:0,t&&(e|=P3),e}function v4(e,t,i){var o=t.pendingProps,u=!1,f=(t.flags&128)!==0,g;if((g=f)||(g=e!==null&&e.memoizedState===null?!1:(I2.current&2)!==0),g&&(u=!0,t.flags&=-129),g=(t.flags&32)!==0,t.flags&=-33,e===null){if(Z1){if(u?Ye(t):Qe(),Z1){var x=G2,C;if(C=x){e:{for(C=x,x=ue;C.nodeType!==8;){if(!x){x=null;break e}if(C=ae(C.nextSibling),C===null){x=null;break e}}x=C}x!==null?(t.memoizedState={dehydrated:x,treeContext:At!==null?{id:Ae,overflow:ke}:null,retryLane:536870912},C=$3(18,null,null,0),C.stateNode=x,C.return=t,t.child=C,f3=t,G2=null,C=!0):C=!1}C||Et(t)}if(x=t.memoizedState,x!==null&&(x=x.dehydrated,x!==null))return x.data==="$!"?t.lanes=16:t.lanes=536870912,null;Ee(t)}return x=o.children,o=o.fallback,u?(Qe(),u=t.mode,x=Ar({mode:"hidden",children:x},u),o=Nt(o,u,i,null),x.return=t,o.return=t,x.sibling=o,t.child=x,u=t.child,u.memoizedState=wr(i),u.childLanes=xr(e,g,i),t.memoizedState=_r,o):(Ye(t),Sr(t,x))}if(C=e.memoizedState,C!==null&&(x=C.dehydrated,x!==null)){if(f)t.flags&256?(Ye(t),t.flags&=-257,t=kr(e,t,i)):t.memoizedState!==null?(Qe(),t.child=e.child,t.flags|=128,t=null):(Qe(),u=o.fallback,x=t.mode,o=Ar({mode:"visible",children:o.children},x),u=Nt(u,x,i,null),u.flags|=2,o.return=t,u.return=t,o.sibling=u,t.child=o,Tt(t,e.child,null,i),o=t.child,o.memoizedState=wr(i),o.childLanes=xr(e,g,i),t.memoizedState=_r,t=u);else if(Ye(t),x.data==="$!"){if(g=x.nextSibling&&x.nextSibling.dataset,g)var L=g.dgst;g=L,o=Error(l(419)),o.stack="",o.digest=g,un({value:o,source:null,stack:null}),t=kr(e,t,i)}else if($2||_n(e,t,i,!1),g=(i&e.childLanes)!==0,$2||g){if(g=c2,g!==null){if(o=i&-i,(o&42)!==0)o=1;else switch(o){case 2:o=1;break;case 8:o=4;break;case 32:o=16;break;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:o=64;break;case 268435456:o=134217728;break;default:o=0}if(o=(o&(g.suspendedLanes|i))!==0?0:o,o!==0&&o!==C.retryLane)throw C.retryLane=o,Pe(e,o),d3(g,e,o),u4}x.data==="$?"||Wr(),t=kr(e,t,i)}else x.data==="$?"?(t.flags|=128,t.child=e.child,t=x5.bind(null,e),x._reactRetry=t,t=null):(e=C.treeContext,G2=ae(x.nextSibling),f3=t,Z1=!0,ne=null,ue=!1,e!==null&&(B3[q3++]=Ae,B3[q3++]=ke,B3[q3++]=At,Ae=e.id,ke=e.overflow,At=t),t=Sr(t,o.children),t.flags|=4096);return t}return u?(Qe(),u=o.fallback,x=t.mode,C=e.child,L=C.sibling,o=it(C,{mode:"hidden",children:o.children}),o.subtreeFlags=C.subtreeFlags&31457280,L!==null?u=it(L,u):(u=Nt(u,x,i,null),u.flags|=2),u.return=t,o.return=t,o.sibling=u,t.child=o,o=u,u=t.child,x=e.child.memoizedState,x===null?x=wr(i):(C=x.cachePool,C!==null?(L=j2._currentValue,C=C.parent!==L?{parent:L,pool:L}:C):C=bs(),x={baseLanes:x.baseLanes|i,cachePool:C}),u.memoizedState=x,u.childLanes=xr(e,g,i),t.memoizedState=_r,o):(Ye(t),i=e.child,e=i.sibling,i=it(i,{mode:"visible",children:o.children}),i.return=t,i.sibling=null,e!==null&&(g=t.deletions,g===null?(t.deletions=[e],t.flags|=16):g.push(e)),t.child=i,t.memoizedState=null,i)}function Sr(e,t){return t=Ar({mode:"visible",children:t},e.mode),t.return=e,e.child=t}function Ar(e,t){return $4(e,t,0,null)}function kr(e,t,i){return Tt(t,e.child,null,i),e=Sr(t,t.pendingProps.children),e.flags|=2,t.memoizedState=null,e}function b4(e,t,i){e.lanes|=t;var o=e.alternate;o!==null&&(o.lanes|=t),Mr(e.return,t,i)}function Er(e,t,i,o,u){var f=e.memoizedState;f===null?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:o,tail:i,tailMode:u}:(f.isBackwards=t,f.rendering=null,f.renderingStartTime=0,f.last=o,f.tail=i,f.tailMode=u)}function _4(e,t,i){var o=t.pendingProps,u=o.revealOrder,f=o.tail;if(Z2(e,t,o.children,i),o=I2.current,(o&2)!==0)o=o&1|2,t.flags|=128;else{if(e!==null&&(e.flags&128)!==0)e:for(e=t.child;e!==null;){if(e.tag===13)e.memoizedState!==null&&b4(e,i,t);else if(e.tag===19)b4(e,i,t);else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;e.sibling===null;){if(e.return===null||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}o&=1}switch(V1(I2,o),u){case"forwards":for(i=t.child,u=null;i!==null;)e=i.alternate,e!==null&&xi(e)===null&&(u=i),i=i.sibling;i=u,i===null?(u=t.child,t.child=null):(u=i.sibling,i.sibling=null),Er(t,!1,u,i,f);break;case"backwards":for(i=null,u=t.child,t.child=null;u!==null;){if(e=u.alternate,e!==null&&xi(e)===null){t.child=u;break}e=u.sibling,u.sibling=i,i=u,u=e}Er(t,!0,i,null,f);break;case"together":Er(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Ce(e,t,i){if(e!==null&&(t.dependencies=e.dependencies),at|=t.lanes,(i&t.childLanes)===0)if(e!==null){if(_n(e,t,i,!1),(i&t.childLanes)===0)return null}else return null;if(e!==null&&t.child!==e.child)throw Error(l(153));if(t.child!==null){for(e=t.child,i=it(e,e.pendingProps),t.child=i,i.return=t;e.sibling!==null;)e=e.sibling,i=i.sibling=it(e,e.pendingProps),i.return=t;i.sibling=null}return t.child}function Tr(e,t){return(e.lanes&t)!==0?!0:(e=e.dependencies,!!(e!==null&&Ui(e)))}function s5(e,t,i){switch(t.tag){case 3:l3(t,t.stateNode.containerInfo),Ze(t,j2,e.memoizedState.cache),sn();break;case 27:case 5:z3(t);break;case 4:l3(t,t.stateNode.containerInfo);break;case 10:Ze(t,t.type,t.memoizedProps.value);break;case 13:var o=t.memoizedState;if(o!==null)return o.dehydrated!==null?(Ye(t),t.flags|=128,null):(i&t.child.childLanes)!==0?v4(e,t,i):(Ye(t),e=Ce(e,t,i),e!==null?e.sibling:null);Ye(t);break;case 19:var u=(e.flags&128)!==0;if(o=(i&t.childLanes)!==0,o||(_n(e,t,i,!1),o=(i&t.childLanes)!==0),u){if(o)return _4(e,t,i);t.flags|=128}if(u=t.memoizedState,u!==null&&(u.rendering=null,u.tail=null,u.lastEffect=null),V1(I2,I2.current),o)break;return null;case 22:case 23:return t.lanes=0,p4(e,t,i);case 24:Ze(t,j2,e.memoizedState.cache)}return Ce(e,t,i)}function w4(e,t,i){if(e!==null)if(e.memoizedProps!==t.pendingProps)$2=!0;else{if(!Tr(e,i)&&(t.flags&128)===0)return $2=!1,s5(e,t,i);$2=(e.flags&131072)!==0}else $2=!1,Z1&&(t.flags&1048576)!==0&&rs(t,yi,t.index);switch(t.lanes=0,t.tag){case 16:e:{e=t.pendingProps;var o=t.elementType,u=o._init;if(o=u(o._payload),t.type=o,typeof o=="function")Hr(o)?(e=Lt(o,e),t.tag=1,t=g4(null,t,o,e,i)):(t.tag=0,t=br(null,t,o,e,i));else{if(o!=null){if(u=o.$$typeof,u===B){t.tag=11,t=c4(null,t,o,e,i);break e}else if(u===$){t.tag=14,t=f4(null,t,o,e,i);break e}}throw t=_1(o)||o,Error(l(306,t,""))}}return t;case 0:return br(e,t,t.type,t.pendingProps,i);case 1:return o=t.type,u=Lt(o,t.pendingProps),g4(e,t,o,u,i);case 3:e:{if(l3(t,t.stateNode.containerInfo),e===null)throw Error(l(387));var f=t.pendingProps;u=t.memoizedState,o=u.element,Lr(e,t),Sn(t,f,null,i);var g=t.memoizedState;if(f=g.cache,Ze(t,j2,f),f!==u.cache&&Or(t,[j2],i,!0),xn(),f=g.element,u.isDehydrated)if(u={element:f,isDehydrated:!1,cache:g.cache},t.updateQueue.baseState=u,t.memoizedState=u,t.flags&256){t=y4(e,t,f,i);break e}else if(f!==o){o=j3(Error(l(424)),t),un(o),t=y4(e,t,f,i);break e}else for(G2=ae(t.stateNode.containerInfo.firstChild),f3=t,Z1=!0,ne=null,ue=!0,i=hs(t,null,f,i),t.child=i;i;)i.flags=i.flags&-3|4096,i=i.sibling;else{if(sn(),f===o){t=Ce(e,t,i);break e}Z2(e,t,f,i)}t=t.child}return t;case 26:return bn(e,t),e===null?(i=A9(t.type,null,t.pendingProps,null))?t.memoizedState=i:Z1||(i=t.type,e=t.pendingProps,o=Zi(W2.current).createElement(i),o[D2]=t,o[F2]=e,K2(o,i,e),L2(o),t.stateNode=o):t.memoizedState=A9(t.type,e.memoizedProps,t.pendingProps,e.memoizedState),null;case 27:return z3(t),e===null&&Z1&&(o=t.stateNode=w9(t.type,t.pendingProps,W2.current),f3=t,ue=!0,G2=ae(o.firstChild)),o=t.pendingProps.children,e!==null||Z1?Z2(e,t,o,i):t.child=Tt(t,null,o,i),bn(e,t),t.child;case 5:return e===null&&Z1&&((u=o=G2)&&(o=j5(o,t.type,t.pendingProps,ue),o!==null?(t.stateNode=o,f3=t,G2=ae(o.firstChild),ue=!1,u=!0):u=!1),u||Et(t)),z3(t),u=t.type,f=t.pendingProps,g=e!==null?e.memoizedProps:null,o=f.children,ho(u,f)?o=null:g!==null&&ho(u,g)&&(t.flags|=32),t.memoizedState!==null&&(u=tr(e,t,t5,null,null,i),jn._currentValue=u),bn(e,t),Z2(e,t,o,i),t.child;case 6:return e===null&&Z1&&((e=i=G2)&&(i=B5(i,t.pendingProps,ue),i!==null?(t.stateNode=i,f3=t,G2=null,e=!0):e=!1),e||Et(t)),null;case 13:return v4(e,t,i);case 4:return l3(t,t.stateNode.containerInfo),o=t.pendingProps,e===null?t.child=Tt(t,null,o,i):Z2(e,t,o,i),t.child;case 11:return c4(e,t,t.type,t.pendingProps,i);case 7:return Z2(e,t,t.pendingProps,i),t.child;case 8:return Z2(e,t,t.pendingProps.children,i),t.child;case 12:return Z2(e,t,t.pendingProps.children,i),t.child;case 10:return o=t.pendingProps,Ze(t,t.type,o.value),Z2(e,t,o.children,i),t.child;case 9:return u=t.type._context,o=t.pendingProps.children,Ut(t),u=i3(u),o=o(u),t.flags|=1,Z2(e,t,o,i),t.child;case 14:return f4(e,t,t.type,t.pendingProps,i);case 15:return d4(e,t,t.type,t.pendingProps,i);case 19:return _4(e,t,i);case 22:return p4(e,t,i);case 24:return Ut(t),o=i3(j2),e===null?(u=Wa(),u===null&&(u=c2,f=Ka(),u.pooledCache=f,f.refCount++,f!==null&&(u.pooledCacheLanes|=i),u=f),t.memoizedState={parent:o,cache:u},Dr(t),Ze(t,j2,u)):((e.lanes&i)!==0&&(Lr(e,t),Sn(t,null,null,i),xn()),u=e.memoizedState,f=t.memoizedState,u.parent!==o?(u={parent:o,cache:o},t.memoizedState=u,t.lanes===0&&(t.memoizedState=t.updateQueue.baseState=u),Ze(t,j2,o)):(o=f.cache,Ze(t,j2,o),o!==u.cache&&Or(t,[j2],i,!0))),Z2(e,t,t.pendingProps.children,i),t.child;case 29:throw t.pendingProps}throw Error(l(156,t.tag))}var Cr=N1(null),Rt=null,Me=null;function Ze(e,t,i){V1(Cr,t._currentValue),t._currentValue=i}function Oe(e){e._currentValue=Cr.current,e2(Cr)}function Mr(e,t,i){for(;e!==null;){var o=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,o!==null&&(o.childLanes|=t)):o!==null&&(o.childLanes&t)!==t&&(o.childLanes|=t),e===i)break;e=e.return}}function Or(e,t,i,o){var u=e.child;for(u!==null&&(u.return=e);u!==null;){var f=u.dependencies;if(f!==null){var g=u.child;f=f.firstContext;e:for(;f!==null;){var x=f;f=u;for(var C=0;C<t.length;C++)if(x.context===t[C]){f.lanes|=i,x=f.alternate,x!==null&&(x.lanes|=i),Mr(f.return,i,e),o||(g=null);break e}f=x.next}}else if(u.tag===18){if(g=u.return,g===null)throw Error(l(341));g.lanes|=i,f=g.alternate,f!==null&&(f.lanes|=i),Mr(g,i,e),g=null}else g=u.child;if(g!==null)g.return=u;else for(g=u;g!==null;){if(g===e){g=null;break}if(u=g.sibling,u!==null){u.return=g.return,g=u;break}g=g.return}u=g}}function _n(e,t,i,o){e=null;for(var u=t,f=!1;u!==null;){if(!f){if((u.flags&524288)!==0)f=!0;else if((u.flags&262144)!==0)break}if(u.tag===10){var g=u.alternate;if(g===null)throw Error(l(387));if(g=g.memoizedProps,g!==null){var x=u.type;E3(u.pendingProps.value,g.value)||(e!==null?e.push(x):e=[x])}}else if(u===_3.current){if(g=u.alternate,g===null)throw Error(l(387));g.memoizedState.memoizedState!==u.memoizedState.memoizedState&&(e!==null?e.push(jn):e=[jn])}u=u.return}e!==null&&Or(t,e,i,o),t.flags|=262144}function Ui(e){for(e=e.firstContext;e!==null;){if(!E3(e.context._currentValue,e.memoizedValue))return!0;e=e.next}return!1}function Ut(e){Rt=e,Me=null,e=e.dependencies,e!==null&&(e.firstContext=null)}function i3(e){return x4(Rt,e)}function zi(e,t){return Rt===null&&Ut(e),x4(e,t)}function x4(e,t){var i=t._currentValue;if(t={context:t,memoizedValue:i,next:null},Me===null){if(e===null)throw Error(l(308));Me=t,e.dependencies={lanes:0,firstContext:t},e.flags|=524288}else Me=Me.next=t;return i}var Ke=!1;function Dr(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function Lr(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,callbacks:null})}function Je(e){return{lane:e,tag:0,payload:null,callback:null,next:null}}function We(e,t,i){var o=e.updateQueue;if(o===null)return null;if(o=o.shared,(_2&2)!==0){var u=o.pending;return u===null?t.next=t:(t.next=u.next,u.next=t),o.pending=t,t=mi(e),is(e,null,i),t}return hi(e,o,t,i),mi(e)}function wn(e,t,i){if(t=t.updateQueue,t!==null&&(t=t.shared,(i&4194176)!==0)){var o=t.lanes;o&=e.pendingLanes,i|=o,t.lanes=i,ri(e,i)}}function Rr(e,t){var i=e.updateQueue,o=e.alternate;if(o!==null&&(o=o.updateQueue,i===o)){var u=null,f=null;if(i=i.firstBaseUpdate,i!==null){do{var g={lane:i.lane,tag:i.tag,payload:i.payload,callback:null,next:null};f===null?u=f=g:f=f.next=g,i=i.next}while(i!==null);f===null?u=f=t:f=f.next=t}else u=f=t;i={baseState:o.baseState,firstBaseUpdate:u,lastBaseUpdate:f,shared:o.shared,callbacks:o.callbacks},e.updateQueue=i;return}e=i.lastBaseUpdate,e===null?i.firstBaseUpdate=t:e.next=t,i.lastBaseUpdate=t}var Ur=!1;function xn(){if(Ur){var e=m0;if(e!==null)throw e}}function Sn(e,t,i,o){Ur=!1;var u=e.updateQueue;Ke=!1;var f=u.firstBaseUpdate,g=u.lastBaseUpdate,x=u.shared.pending;if(x!==null){u.shared.pending=null;var C=x,L=C.next;C.next=null,g===null?f=L:g.next=L,g=C;var Y=e.alternate;Y!==null&&(Y=Y.updateQueue,x=Y.lastBaseUpdate,x!==g&&(x===null?Y.firstBaseUpdate=L:x.next=L,Y.lastBaseUpdate=C))}if(f!==null){var K=u.baseState;g=0,Y=L=C=null,x=f;do{var N=x.lane&-536870913,H=N!==x.lane;if(H?(X1&N)===N:(o&N)===N){N!==0&&N===h0&&(Ur=!0),Y!==null&&(Y=Y.next={lane:0,tag:x.tag,payload:x.payload,callback:null,next:null});e:{var y1=e,D1=x;N=t;var k2=i;switch(D1.tag){case 1:if(y1=D1.payload,typeof y1=="function"){K=y1.call(k2,K,N);break e}K=y1;break e;case 3:y1.flags=y1.flags&-65537|128;case 0:if(y1=D1.payload,N=typeof y1=="function"?y1.call(k2,K,N):y1,N==null)break e;K=f1({},K,N);break e;case 2:Ke=!0}}N=x.callback,N!==null&&(e.flags|=64,H&&(e.flags|=8192),H=u.callbacks,H===null?u.callbacks=[N]:H.push(N))}else H={lane:N,tag:x.tag,payload:x.payload,callback:x.callback,next:null},Y===null?(L=Y=H,C=K):Y=Y.next=H,g|=N;if(x=x.next,x===null){if(x=u.shared.pending,x===null)break;H=x,x=H.next,H.next=null,u.lastBaseUpdate=H,u.shared.pending=null}}while(!0);Y===null&&(C=K),u.baseState=C,u.firstBaseUpdate=L,u.lastBaseUpdate=Y,f===null&&(u.shared.lanes=0),at|=g,e.lanes=g,e.memoizedState=K}}function S4(e,t){if(typeof e!="function")throw Error(l(191,e));e.call(t)}function A4(e,t){var i=e.callbacks;if(i!==null)for(e.callbacks=null,e=0;e<i.length;e++)S4(i[e],t)}function An(e,t){try{var i=t.updateQueue,o=i!==null?i.lastEffect:null;if(o!==null){var u=o.next;i=u;do{if((i.tag&e)===e){o=void 0;var f=i.create,g=i.inst;o=f(),g.destroy=o}i=i.next}while(i!==u)}}catch(x){r2(t,t.return,x)}}function et(e,t,i){try{var o=t.updateQueue,u=o!==null?o.lastEffect:null;if(u!==null){var f=u.next;o=f;do{if((o.tag&e)===e){var g=o.inst,x=g.destroy;if(x!==void 0){g.destroy=void 0,u=t;var C=i;try{x()}catch(L){r2(u,C,L)}}}o=o.next}while(o!==f)}}catch(L){r2(t,t.return,L)}}function k4(e){var t=e.updateQueue;if(t!==null){var i=e.stateNode;try{A4(t,i)}catch(o){r2(e,e.return,o)}}}function E4(e,t,i){i.props=Lt(e.type,e.memoizedProps),i.state=e.memoizedState;try{i.componentWillUnmount()}catch(o){r2(e,t,o)}}function zt(e,t){try{var i=e.ref;if(i!==null){var o=e.stateNode;switch(e.tag){case 26:case 27:case 5:var u=o;break;default:u=o}typeof i=="function"?e.refCleanup=i(u):i.current=u}}catch(f){r2(e,t,f)}}function T3(e,t){var i=e.ref,o=e.refCleanup;if(i!==null)if(typeof o=="function")try{o()}catch(u){r2(e,t,u)}finally{e.refCleanup=null,e=e.alternate,e!=null&&(e.refCleanup=null)}else if(typeof i=="function")try{i(null)}catch(u){r2(e,t,u)}else i.current=null}function T4(e){var t=e.type,i=e.memoizedProps,o=e.stateNode;try{e:switch(t){case"button":case"input":case"select":case"textarea":i.autoFocus&&o.focus();break e;case"img":i.src?o.src=i.src:i.srcSet&&(o.srcset=i.srcSet)}}catch(u){r2(e,e.return,u)}}function C4(e,t,i){try{var o=e.stateNode;R5(o,e.type,i,t),o[F2]=t}catch(u){r2(e,e.return,u)}}function M4(e){return e.tag===5||e.tag===3||e.tag===26||e.tag===27||e.tag===4}function zr(e){e:for(;;){for(;e.sibling===null;){if(e.return===null||M4(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;e.tag!==5&&e.tag!==6&&e.tag!==27&&e.tag!==18;){if(e.flags&2||e.child===null||e.tag===4)continue e;e.child.return=e,e=e.child}if(!(e.flags&2))return e.stateNode}}function Nr(e,t,i){var o=e.tag;if(o===5||o===6)e=e.stateNode,t?i.nodeType===8?i.parentNode.insertBefore(e,t):i.insertBefore(e,t):(i.nodeType===8?(t=i.parentNode,t.insertBefore(e,i)):(t=i,t.appendChild(e)),i=i._reactRootContainer,i!=null||t.onclick!==null||(t.onclick=Gi));else if(o!==4&&o!==27&&(e=e.child,e!==null))for(Nr(e,t,i),e=e.sibling;e!==null;)Nr(e,t,i),e=e.sibling}function Ni(e,t,i){var o=e.tag;if(o===5||o===6)e=e.stateNode,t?i.insertBefore(e,t):i.appendChild(e);else if(o!==4&&o!==27&&(e=e.child,e!==null))for(Ni(e,t,i),e=e.sibling;e!==null;)Ni(e,t,i),e=e.sibling}var De=!1,S2=!1,Ir=!1,O4=typeof WeakSet=="function"?WeakSet:Set,P2=null,D4=!1;function u5(e,t){if(e=e.containerInfo,fo=na,e=Xl(e),Ba(e)){if("selectionStart"in e)var i={start:e.selectionStart,end:e.selectionEnd};else e:{i=(i=e.ownerDocument)&&i.defaultView||window;var o=i.getSelection&&i.getSelection();if(o&&o.rangeCount!==0){i=o.anchorNode;var u=o.anchorOffset,f=o.focusNode;o=o.focusOffset;try{i.nodeType,f.nodeType}catch{i=null;break e}var g=0,x=-1,C=-1,L=0,Y=0,K=e,N=null;t:for(;;){for(var H;K!==i||u!==0&&K.nodeType!==3||(x=g+u),K!==f||o!==0&&K.nodeType!==3||(C=g+o),K.nodeType===3&&(g+=K.nodeValue.length),(H=K.firstChild)!==null;)N=K,K=H;for(;;){if(K===e)break t;if(N===i&&++L===u&&(x=g),N===f&&++Y===o&&(C=g),(H=K.nextSibling)!==null)break;K=N,N=K.parentNode}K=H}i=x===-1||C===-1?null:{start:x,end:C}}else i=null}i=i||{start:0,end:0}}else i=null;for(po={focusedElem:e,selectionRange:i},na=!1,P2=t;P2!==null;)if(t=P2,e=t.child,(t.subtreeFlags&1028)!==0&&e!==null)e.return=t,P2=e;else for(;P2!==null;){switch(t=P2,f=t.alternate,e=t.flags,t.tag){case 0:break;case 11:case 15:break;case 1:if((e&1024)!==0&&f!==null){e=void 0,i=t,u=f.memoizedProps,f=f.memoizedState,o=i.stateNode;try{var y1=Lt(i.type,u,i.elementType===i.type);e=o.getSnapshotBeforeUpdate(y1,f),o.__reactInternalSnapshotBeforeUpdate=e}catch(D1){r2(i,i.return,D1)}}break;case 3:if((e&1024)!==0){if(e=t.stateNode.containerInfo,i=e.nodeType,i===9)yo(e);else if(i===1)switch(e.nodeName){case"HEAD":case"HTML":case"BODY":yo(e);break;default:e.textContent=""}}break;case 5:case 26:case 27:case 6:case 4:case 17:break;default:if((e&1024)!==0)throw Error(l(163))}if(e=t.sibling,e!==null){e.return=t.return,P2=e;break}P2=t.return}return y1=D4,D4=!1,y1}function L4(e,t,i){var o=i.flags;switch(i.tag){case 0:case 11:case 15:Re(e,i),o&4&&An(5,i);break;case 1:if(Re(e,i),o&4)if(e=i.stateNode,t===null)try{e.componentDidMount()}catch(x){r2(i,i.return,x)}else{var u=Lt(i.type,t.memoizedProps);t=t.memoizedState;try{e.componentDidUpdate(u,t,e.__reactInternalSnapshotBeforeUpdate)}catch(x){r2(i,i.return,x)}}o&64&&k4(i),o&512&&zt(i,i.return);break;case 3:if(Re(e,i),o&64&&(o=i.updateQueue,o!==null)){if(e=null,i.child!==null)switch(i.child.tag){case 27:case 5:e=i.child.stateNode;break;case 1:e=i.child.stateNode}try{A4(o,e)}catch(x){r2(i,i.return,x)}}break;case 26:Re(e,i),o&512&&zt(i,i.return);break;case 27:case 5:Re(e,i),t===null&&o&4&&T4(i),o&512&&zt(i,i.return);break;case 12:Re(e,i);break;case 13:Re(e,i),o&4&&z4(e,i);break;case 22:if(u=i.memoizedState!==null||De,!u){t=t!==null&&t.memoizedState!==null||S2;var f=De,g=S2;De=u,(S2=t)&&!g?tt(e,i,(i.subtreeFlags&8772)!==0):Re(e,i),De=f,S2=g}o&512&&(i.memoizedProps.mode==="manual"?zt(i,i.return):T3(i,i.return));break;default:Re(e,i)}}function R4(e){var t=e.alternate;t!==null&&(e.alternate=null,R4(t)),e.child=null,e.deletions=null,e.sibling=null,e.tag===5&&(t=e.stateNode,t!==null&&P0(t)),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}var z2=null,C3=!1;function Le(e,t,i){for(i=i.child;i!==null;)U4(e,t,i),i=i.sibling}function U4(e,t,i){if(m2&&typeof m2.onCommitFiberUnmount=="function")try{m2.onCommitFiberUnmount(O2,i)}catch{}switch(i.tag){case 26:S2||T3(i,t),Le(e,t,i),i.memoizedState?i.memoizedState.count--:i.stateNode&&(i=i.stateNode,i.parentNode.removeChild(i));break;case 27:S2||T3(i,t);var o=z2,u=C3;for(z2=i.stateNode,Le(e,t,i),i=i.stateNode,t=i.attributes;t.length;)i.removeAttributeNode(t[0]);P0(i),z2=o,C3=u;break;case 5:S2||T3(i,t);case 6:u=z2;var f=C3;if(z2=null,Le(e,t,i),z2=u,C3=f,z2!==null)if(C3)try{e=z2,o=i.stateNode,e.nodeType===8?e.parentNode.removeChild(o):e.removeChild(o)}catch(g){r2(i,t,g)}else try{z2.removeChild(i.stateNode)}catch(g){r2(i,t,g)}break;case 18:z2!==null&&(C3?(t=z2,i=i.stateNode,t.nodeType===8?go(t.parentNode,i):t.nodeType===1&&go(t,i),Vn(t)):go(z2,i.stateNode));break;case 4:o=z2,u=C3,z2=i.stateNode.containerInfo,C3=!0,Le(e,t,i),z2=o,C3=u;break;case 0:case 11:case 14:case 15:S2||et(2,i,t),S2||et(4,i,t),Le(e,t,i);break;case 1:S2||(T3(i,t),o=i.stateNode,typeof o.componentWillUnmount=="function"&&E4(i,t,o)),Le(e,t,i);break;case 21:Le(e,t,i);break;case 22:S2||T3(i,t),S2=(o=S2)||i.memoizedState!==null,Le(e,t,i),S2=o;break;default:Le(e,t,i)}}function z4(e,t){if(t.memoizedState===null&&(e=t.alternate,e!==null&&(e=e.memoizedState,e!==null&&(e=e.dehydrated,e!==null))))try{Vn(e)}catch(i){r2(t,t.return,i)}}function c5(e){switch(e.tag){case 13:case 19:var t=e.stateNode;return t===null&&(t=e.stateNode=new O4),t;case 22:return e=e.stateNode,t=e._retryCache,t===null&&(t=e._retryCache=new O4),t;default:throw Error(l(435,e.tag))}}function jr(e,t){var i=c5(e);t.forEach(function(o){var u=S5.bind(null,e,o);i.has(o)||(i.add(o),o.then(u,u))})}function V3(e,t){var i=t.deletions;if(i!==null)for(var o=0;o<i.length;o++){var u=i[o],f=e,g=t,x=g;e:for(;x!==null;){switch(x.tag){case 27:case 5:z2=x.stateNode,C3=!1;break e;case 3:z2=x.stateNode.containerInfo,C3=!0;break e;case 4:z2=x.stateNode.containerInfo,C3=!0;break e}x=x.return}if(z2===null)throw Error(l(160));U4(f,g,u),z2=null,C3=!1,f=u.alternate,f!==null&&(f.return=null),u.return=null}if(t.subtreeFlags&13878)for(t=t.child;t!==null;)N4(t,e),t=t.sibling}var ie=null;function N4(e,t){var i=e.alternate,o=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:V3(t,e),F3(e),o&4&&(et(3,e,e.return),An(3,e),et(5,e,e.return));break;case 1:V3(t,e),F3(e),o&512&&(S2||i===null||T3(i,i.return)),o&64&&De&&(e=e.updateQueue,e!==null&&(o=e.callbacks,o!==null&&(i=e.shared.hiddenCallbacks,e.shared.hiddenCallbacks=i===null?o:i.concat(o))));break;case 26:var u=ie;if(V3(t,e),F3(e),o&512&&(S2||i===null||T3(i,i.return)),o&4){var f=i!==null?i.memoizedState:null;if(o=e.memoizedState,i===null)if(o===null)if(e.stateNode===null){e:{o=e.type,i=e.memoizedProps,u=u.ownerDocument||u;t:switch(o){case"title":f=u.getElementsByTagName("title")[0],(!f||f[gt]||f[D2]||f.namespaceURI==="http://www.w3.org/2000/svg"||f.hasAttribute("itemprop"))&&(f=u.createElement(o),u.head.insertBefore(f,u.querySelector("head > title"))),K2(f,o,i),f[D2]=e,L2(f),o=f;break e;case"link":var g=T9("link","href",u).get(o+(i.href||""));if(g){for(var x=0;x<g.length;x++)if(f=g[x],f.getAttribute("href")===(i.href==null?null:i.href)&&f.getAttribute("rel")===(i.rel==null?null:i.rel)&&f.getAttribute("title")===(i.title==null?null:i.title)&&f.getAttribute("crossorigin")===(i.crossOrigin==null?null:i.crossOrigin)){g.splice(x,1);break t}}f=u.createElement(o),K2(f,o,i),u.head.appendChild(f);break;case"meta":if(g=T9("meta","content",u).get(o+(i.content||""))){for(x=0;x<g.length;x++)if(f=g[x],f.getAttribute("content")===(i.content==null?null:""+i.content)&&f.getAttribute("name")===(i.name==null?null:i.name)&&f.getAttribute("property")===(i.property==null?null:i.property)&&f.getAttribute("http-equiv")===(i.httpEquiv==null?null:i.httpEquiv)&&f.getAttribute("charset")===(i.charSet==null?null:i.charSet)){g.splice(x,1);break t}}f=u.createElement(o),K2(f,o,i),u.head.appendChild(f);break;default:throw Error(l(468,o))}f[D2]=e,L2(f),o=f}e.stateNode=o}else C9(u,e.type,e.stateNode);else e.stateNode=E9(u,o,e.memoizedProps);else f!==o?(f===null?i.stateNode!==null&&(i=i.stateNode,i.parentNode.removeChild(i)):f.count--,o===null?C9(u,e.type,e.stateNode):E9(u,o,e.memoizedProps)):o===null&&e.stateNode!==null&&C4(e,e.memoizedProps,i.memoizedProps)}break;case 27:if(o&4&&e.alternate===null){u=e.stateNode,f=e.memoizedProps;try{for(var C=u.firstChild;C;){var L=C.nextSibling,Y=C.nodeName;C[gt]||Y==="HEAD"||Y==="BODY"||Y==="SCRIPT"||Y==="STYLE"||Y==="LINK"&&C.rel.toLowerCase()==="stylesheet"||u.removeChild(C),C=L}for(var K=e.type,N=u.attributes;N.length;)u.removeAttributeNode(N[0]);K2(u,K,f),u[D2]=e,u[F2]=f}catch(y1){r2(e,e.return,y1)}}case 5:if(V3(t,e),F3(e),o&512&&(S2||i===null||T3(i,i.return)),e.flags&32){u=e.stateNode;try{Q2(u,"")}catch(y1){r2(e,e.return,y1)}}o&4&&e.stateNode!=null&&(u=e.memoizedProps,C4(e,u,i!==null?i.memoizedProps:u)),o&1024&&(Ir=!0);break;case 6:if(V3(t,e),F3(e),o&4){if(e.stateNode===null)throw Error(l(162));o=e.memoizedProps,i=e.stateNode;try{i.nodeValue=o}catch(y1){r2(e,e.return,y1)}}break;case 3:if(Wi=null,u=ie,ie=Ki(t.containerInfo),V3(t,e),ie=u,F3(e),o&4&&i!==null&&i.memoizedState.isDehydrated)try{Vn(t.containerInfo)}catch(y1){r2(e,e.return,y1)}Ir&&(Ir=!1,I4(e));break;case 4:o=ie,ie=Ki(e.stateNode.containerInfo),V3(t,e),F3(e),ie=o;break;case 12:V3(t,e),F3(e);break;case 13:V3(t,e),F3(e),e.child.flags&8192&&e.memoizedState!==null!=(i!==null&&i.memoizedState!==null)&&(Qr=e3()),o&4&&(o=e.updateQueue,o!==null&&(e.updateQueue=null,jr(e,o)));break;case 22:if(o&512&&(S2||i===null||T3(i,i.return)),C=e.memoizedState!==null,L=i!==null&&i.memoizedState!==null,Y=De,K=S2,De=Y||C,S2=K||L,V3(t,e),S2=K,De=Y,F3(e),t=e.stateNode,t._current=e,t._visibility&=-3,t._visibility|=t._pendingVisibility&2,o&8192&&(t._visibility=C?t._visibility&-2:t._visibility|1,C&&(t=De||S2,i===null||L||t||b0(e)),e.memoizedProps===null||e.memoizedProps.mode!=="manual"))e:for(i=null,t=e;;){if(t.tag===5||t.tag===26||t.tag===27){if(i===null){L=i=t;try{if(u=L.stateNode,C)f=u.style,typeof f.setProperty=="function"?f.setProperty("display","none","important"):f.display="none";else{g=L.stateNode,x=L.memoizedProps.style;var H=x!=null&&x.hasOwnProperty("display")?x.display:null;g.style.display=H==null||typeof H=="boolean"?"":(""+H).trim()}}catch(y1){r2(L,L.return,y1)}}}else if(t.tag===6){if(i===null){L=t;try{L.stateNode.nodeValue=C?"":L.memoizedProps}catch(y1){r2(L,L.return,y1)}}}else if((t.tag!==22&&t.tag!==23||t.memoizedState===null||t===e)&&t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break e;for(;t.sibling===null;){if(t.return===null||t.return===e)break e;i===t&&(i=null),t=t.return}i===t&&(i=null),t.sibling.return=t.return,t=t.sibling}o&4&&(o=e.updateQueue,o!==null&&(i=o.retryQueue,i!==null&&(o.retryQueue=null,jr(e,i))));break;case 19:V3(t,e),F3(e),o&4&&(o=e.updateQueue,o!==null&&(e.updateQueue=null,jr(e,o)));break;case 21:break;default:V3(t,e),F3(e)}}function F3(e){var t=e.flags;if(t&2){try{if(e.tag!==27){e:{for(var i=e.return;i!==null;){if(M4(i)){var o=i;break e}i=i.return}throw Error(l(160))}switch(o.tag){case 27:var u=o.stateNode,f=zr(e);Ni(e,f,u);break;case 5:var g=o.stateNode;o.flags&32&&(Q2(g,""),o.flags&=-33);var x=zr(e);Ni(e,x,g);break;case 3:case 4:var C=o.stateNode.containerInfo,L=zr(e);Nr(e,L,C);break;default:throw Error(l(161))}}}catch(Y){r2(e,e.return,Y)}e.flags&=-3}t&4096&&(e.flags&=-4097)}function I4(e){if(e.subtreeFlags&1024)for(e=e.child;e!==null;){var t=e;I4(t),t.tag===5&&t.flags&1024&&t.stateNode.reset(),e=e.sibling}}function Re(e,t){if(t.subtreeFlags&8772)for(t=t.child;t!==null;)L4(e,t.alternate,t),t=t.sibling}function b0(e){for(e=e.child;e!==null;){var t=e;switch(t.tag){case 0:case 11:case 14:case 15:et(4,t,t.return),b0(t);break;case 1:T3(t,t.return);var i=t.stateNode;typeof i.componentWillUnmount=="function"&&E4(t,t.return,i),b0(t);break;case 26:case 27:case 5:T3(t,t.return),b0(t);break;case 22:T3(t,t.return),t.memoizedState===null&&b0(t);break;default:b0(t)}e=e.sibling}}function tt(e,t,i){for(i=i&&(t.subtreeFlags&8772)!==0,t=t.child;t!==null;){var o=t.alternate,u=e,f=t,g=f.flags;switch(f.tag){case 0:case 11:case 15:tt(u,f,i),An(4,f);break;case 1:if(tt(u,f,i),o=f,u=o.stateNode,typeof u.componentDidMount=="function")try{u.componentDidMount()}catch(L){r2(o,o.return,L)}if(o=f,u=o.updateQueue,u!==null){var x=o.stateNode;try{var C=u.shared.hiddenCallbacks;if(C!==null)for(u.shared.hiddenCallbacks=null,u=0;u<C.length;u++)S4(C[u],x)}catch(L){r2(o,o.return,L)}}i&&g&64&&k4(f),zt(f,f.return);break;case 26:case 27:case 5:tt(u,f,i),i&&o===null&&g&4&&T4(f),zt(f,f.return);break;case 12:tt(u,f,i);break;case 13:tt(u,f,i),i&&g&4&&z4(u,f);break;case 22:f.memoizedState===null&&tt(u,f,i),zt(f,f.return);break;default:tt(u,f,i)}t=t.sibling}}function Br(e,t){var i=null;e!==null&&e.memoizedState!==null&&e.memoizedState.cachePool!==null&&(i=e.memoizedState.cachePool.pool),e=null,t.memoizedState!==null&&t.memoizedState.cachePool!==null&&(e=t.memoizedState.cachePool.pool),e!==i&&(e!=null&&e.refCount++,i!=null&&hn(i))}function qr(e,t){e=null,t.alternate!==null&&(e=t.alternate.memoizedState.cache),t=t.memoizedState.cache,t!==e&&(t.refCount++,e!=null&&hn(e))}function nt(e,t,i,o){if(t.subtreeFlags&10256)for(t=t.child;t!==null;)j4(e,t,i,o),t=t.sibling}function j4(e,t,i,o){var u=t.flags;switch(t.tag){case 0:case 11:case 15:nt(e,t,i,o),u&2048&&An(9,t);break;case 3:nt(e,t,i,o),u&2048&&(e=null,t.alternate!==null&&(e=t.alternate.memoizedState.cache),t=t.memoizedState.cache,t!==e&&(t.refCount++,e!=null&&hn(e)));break;case 12:if(u&2048){nt(e,t,i,o),e=t.stateNode;try{var f=t.memoizedProps,g=f.id,x=f.onPostCommit;typeof x=="function"&&x(g,t.alternate===null?"mount":"update",e.passiveEffectDuration,-0)}catch(C){r2(t,t.return,C)}}else nt(e,t,i,o);break;case 23:break;case 22:f=t.stateNode,t.memoizedState!==null?f._visibility&4?nt(e,t,i,o):kn(e,t):f._visibility&4?nt(e,t,i,o):(f._visibility|=4,_0(e,t,i,o,(t.subtreeFlags&10256)!==0)),u&2048&&Br(t.alternate,t);break;case 24:nt(e,t,i,o),u&2048&&qr(t.alternate,t);break;default:nt(e,t,i,o)}}function _0(e,t,i,o,u){for(u=u&&(t.subtreeFlags&10256)!==0,t=t.child;t!==null;){var f=e,g=t,x=i,C=o,L=g.flags;switch(g.tag){case 0:case 11:case 15:_0(f,g,x,C,u),An(8,g);break;case 23:break;case 22:var Y=g.stateNode;g.memoizedState!==null?Y._visibility&4?_0(f,g,x,C,u):kn(f,g):(Y._visibility|=4,_0(f,g,x,C,u)),u&&L&2048&&Br(g.alternate,g);break;case 24:_0(f,g,x,C,u),u&&L&2048&&qr(g.alternate,g);break;default:_0(f,g,x,C,u)}t=t.sibling}}function kn(e,t){if(t.subtreeFlags&10256)for(t=t.child;t!==null;){var i=e,o=t,u=o.flags;switch(o.tag){case 22:kn(i,o),u&2048&&Br(o.alternate,o);break;case 24:kn(i,o),u&2048&&qr(o.alternate,o);break;default:kn(i,o)}t=t.sibling}}var En=8192;function w0(e){if(e.subtreeFlags&En)for(e=e.child;e!==null;)B4(e),e=e.sibling}function B4(e){switch(e.tag){case 26:w0(e),e.flags&En&&e.memoizedState!==null&&J5(ie,e.memoizedState,e.memoizedProps);break;case 5:w0(e);break;case 3:case 4:var t=ie;ie=Ki(e.stateNode.containerInfo),w0(e),ie=t;break;case 22:e.memoizedState===null&&(t=e.alternate,t!==null&&t.memoizedState!==null?(t=En,En=16777216,w0(e),En=t):w0(e));break;default:w0(e)}}function q4(e){var t=e.alternate;if(t!==null&&(e=t.child,e!==null)){t.child=null;do t=e.sibling,e.sibling=null,e=t;while(e!==null)}}function Tn(e){var t=e.deletions;if((e.flags&16)!==0){if(t!==null)for(var i=0;i<t.length;i++){var o=t[i];P2=o,V4(o,e)}q4(e)}if(e.subtreeFlags&10256)for(e=e.child;e!==null;)H4(e),e=e.sibling}function H4(e){switch(e.tag){case 0:case 11:case 15:Tn(e),e.flags&2048&&et(9,e,e.return);break;case 3:Tn(e);break;case 12:Tn(e);break;case 22:var t=e.stateNode;e.memoizedState!==null&&t._visibility&4&&(e.return===null||e.return.tag!==13)?(t._visibility&=-5,Ii(e)):Tn(e);break;default:Tn(e)}}function Ii(e){var t=e.deletions;if((e.flags&16)!==0){if(t!==null)for(var i=0;i<t.length;i++){var o=t[i];P2=o,V4(o,e)}q4(e)}for(e=e.child;e!==null;){switch(t=e,t.tag){case 0:case 11:case 15:et(8,t,t.return),Ii(t);break;case 22:i=t.stateNode,i._visibility&4&&(i._visibility&=-5,Ii(t));break;default:Ii(t)}e=e.sibling}}function V4(e,t){for(;P2!==null;){var i=P2;switch(i.tag){case 0:case 11:case 15:et(8,i,t);break;case 23:case 22:if(i.memoizedState!==null&&i.memoizedState.cachePool!==null){var o=i.memoizedState.cachePool.pool;o!=null&&o.refCount++}break;case 24:hn(i.memoizedState.cache)}if(o=i.child,o!==null)o.return=i,P2=o;else e:for(i=e;P2!==null;){o=P2;var u=o.sibling,f=o.return;if(R4(o),o===i){P2=null;break e}if(u!==null){u.return=f,P2=u;break e}P2=f}}}function f5(e,t,i,o){this.tag=e,this.key=i,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=o,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function $3(e,t,i,o){return new f5(e,t,i,o)}function Hr(e){return e=e.prototype,!(!e||!e.isReactComponent)}function it(e,t){var i=e.alternate;return i===null?(i=$3(e.tag,t,e.key,e.mode),i.elementType=e.elementType,i.type=e.type,i.stateNode=e.stateNode,i.alternate=e,e.alternate=i):(i.pendingProps=t,i.type=e.type,i.flags=0,i.subtreeFlags=0,i.deletions=null),i.flags=e.flags&31457280,i.childLanes=e.childLanes,i.lanes=e.lanes,i.child=e.child,i.memoizedProps=e.memoizedProps,i.memoizedState=e.memoizedState,i.updateQueue=e.updateQueue,t=e.dependencies,i.dependencies=t===null?null:{lanes:t.lanes,firstContext:t.firstContext},i.sibling=e.sibling,i.index=e.index,i.ref=e.ref,i.refCleanup=e.refCleanup,i}function F4(e,t){e.flags&=31457282;var i=e.alternate;return i===null?(e.childLanes=0,e.lanes=t,e.child=null,e.subtreeFlags=0,e.memoizedProps=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.stateNode=null):(e.childLanes=i.childLanes,e.lanes=i.lanes,e.child=i.child,e.subtreeFlags=0,e.deletions=null,e.memoizedProps=i.memoizedProps,e.memoizedState=i.memoizedState,e.updateQueue=i.updateQueue,e.type=i.type,t=i.dependencies,e.dependencies=t===null?null:{lanes:t.lanes,firstContext:t.firstContext}),e}function ji(e,t,i,o,u,f){var g=0;if(o=e,typeof e=="function")Hr(e)&&(g=1);else if(typeof e=="string")g=Z5(e,i,M2.current)?26:e==="html"||e==="head"||e==="body"?27:5;else e:switch(e){case v:return Nt(i.children,u,f,t);case p:g=8,u|=24;break;case _:return e=$3(12,i,t,u|2),e.elementType=_,e.lanes=f,e;case V:return e=$3(13,i,t,u),e.elementType=V,e.lanes=f,e;case e1:return e=$3(19,i,t,u),e.elementType=e1,e.lanes=f,e;case o1:return $4(i,u,f,t);default:if(typeof e=="object"&&e!==null)switch(e.$$typeof){case w:case S:g=10;break e;case k:g=9;break e;case B:g=11;break e;case $:g=14;break e;case n1:g=16,o=null;break e}g=29,i=Error(l(130,e===null?"null":typeof e,"")),o=null}return t=$3(g,i,t,u),t.elementType=e,t.type=o,t.lanes=f,t}function Nt(e,t,i,o){return e=$3(7,e,o,t),e.lanes=i,e}function $4(e,t,i,o){e=$3(22,e,o,t),e.elementType=o1,e.lanes=i;var u={_visibility:1,_pendingVisibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null,_current:null,detach:function(){var f=u._current;if(f===null)throw Error(l(456));if((u._pendingVisibility&2)===0){var g=Pe(f,2);g!==null&&(u._pendingVisibility|=2,d3(g,f,2))}},attach:function(){var f=u._current;if(f===null)throw Error(l(456));if((u._pendingVisibility&2)!==0){var g=Pe(f,2);g!==null&&(u._pendingVisibility&=-3,d3(g,f,2))}}};return e.stateNode=u,e}function Vr(e,t,i){return e=$3(6,e,null,t),e.lanes=i,e}function Fr(e,t,i){return t=$3(4,e.children!==null?e.children:[],e.key,t),t.lanes=i,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Ue(e){e.flags|=4}function P4(e,t){if(t.type!=="stylesheet"||(t.state.loading&4)!==0)e.flags&=-16777217;else if(e.flags|=16777216,!M9(t)){if(t=H3.current,t!==null&&((X1&4194176)===X1?ce!==null:(X1&62914560)!==X1&&(X1&536870912)===0||t!==ce))throw fn=Xa,ss;e.flags|=8192}}function Bi(e,t){t!==null&&(e.flags|=4),e.flags&16384&&(t=e.tag!==22?H2():536870912,e.lanes|=t,S0|=t)}function Cn(e,t){if(!Z1)switch(e.tailMode){case"hidden":t=e.tail;for(var i=null;t!==null;)t.alternate!==null&&(i=t),t=t.sibling;i===null?e.tail=null:i.sibling=null;break;case"collapsed":i=e.tail;for(var o=null;i!==null;)i.alternate!==null&&(o=i),i=i.sibling;o===null?t||e.tail===null?e.tail=null:e.tail.sibling=null:o.sibling=null}}function b2(e){var t=e.alternate!==null&&e.alternate.child===e.child,i=0,o=0;if(t)for(var u=e.child;u!==null;)i|=u.lanes|u.childLanes,o|=u.subtreeFlags&31457280,o|=u.flags&31457280,u.return=e,u=u.sibling;else for(u=e.child;u!==null;)i|=u.lanes|u.childLanes,o|=u.subtreeFlags,o|=u.flags,u.return=e,u=u.sibling;return e.subtreeFlags|=o,e.childLanes=i,t}function d5(e,t,i){var o=t.pendingProps;switch(Ya(t),t.tag){case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return b2(t),null;case 1:return b2(t),null;case 3:return i=t.stateNode,o=null,e!==null&&(o=e.memoizedState.cache),t.memoizedState.cache!==o&&(t.flags|=2048),Oe(j2),p3(),i.pendingContext&&(i.context=i.pendingContext,i.pendingContext=null),(e===null||e.child===null)&&(ln(t)?Ue(t):e===null||e.memoizedState.isDehydrated&&(t.flags&256)===0||(t.flags|=1024,ne!==null&&(Kr(ne),ne=null))),b2(t),null;case 26:return i=t.memoizedState,e===null?(Ue(t),i!==null?(b2(t),P4(t,i)):(b2(t),t.flags&=-16777217)):i?i!==e.memoizedState?(Ue(t),b2(t),P4(t,i)):(b2(t),t.flags&=-16777217):(e.memoizedProps!==o&&Ue(t),b2(t),t.flags&=-16777217),null;case 27:s3(t),i=W2.current;var u=t.type;if(e!==null&&t.stateNode!=null)e.memoizedProps!==o&&Ue(t);else{if(!o){if(t.stateNode===null)throw Error(l(166));return b2(t),null}e=M2.current,ln(t)?os(t):(e=w9(u,o,i),t.stateNode=e,Ue(t))}return b2(t),null;case 5:if(s3(t),i=t.type,e!==null&&t.stateNode!=null)e.memoizedProps!==o&&Ue(t);else{if(!o){if(t.stateNode===null)throw Error(l(166));return b2(t),null}if(e=M2.current,ln(t))os(t);else{switch(u=Zi(W2.current),e){case 1:e=u.createElementNS("http://www.w3.org/2000/svg",i);break;case 2:e=u.createElementNS("http://www.w3.org/1998/Math/MathML",i);break;default:switch(i){case"svg":e=u.createElementNS("http://www.w3.org/2000/svg",i);break;case"math":e=u.createElementNS("http://www.w3.org/1998/Math/MathML",i);break;case"script":e=u.createElement("div"),e.innerHTML="<script><\/script>",e=e.removeChild(e.firstChild);break;case"select":e=typeof o.is=="string"?u.createElement("select",{is:o.is}):u.createElement("select"),o.multiple?e.multiple=!0:o.size&&(e.size=o.size);break;default:e=typeof o.is=="string"?u.createElement(i,{is:o.is}):u.createElement(i)}}e[D2]=t,e[F2]=o;e:for(u=t.child;u!==null;){if(u.tag===5||u.tag===6)e.appendChild(u.stateNode);else if(u.tag!==4&&u.tag!==27&&u.child!==null){u.child.return=u,u=u.child;continue}if(u===t)break e;for(;u.sibling===null;){if(u.return===null||u.return===t)break e;u=u.return}u.sibling.return=u.return,u=u.sibling}t.stateNode=e;e:switch(K2(e,i,o),i){case"button":case"input":case"select":case"textarea":e=!!o.autoFocus;break e;case"img":e=!0;break e;default:e=!1}e&&Ue(t)}}return b2(t),t.flags&=-16777217,null;case 6:if(e&&t.stateNode!=null)e.memoizedProps!==o&&Ue(t);else{if(typeof o!="string"&&t.stateNode===null)throw Error(l(166));if(e=W2.current,ln(t)){if(e=t.stateNode,i=t.memoizedProps,o=null,u=f3,u!==null)switch(u.tag){case 27:case 5:o=u.memoizedProps}e[D2]=t,e=!!(e.nodeValue===i||o!==null&&o.suppressHydrationWarning===!0||m9(e.nodeValue,i)),e||Et(t)}else e=Zi(e).createTextNode(o),e[D2]=t,t.stateNode=e}return b2(t),null;case 13:if(o=t.memoizedState,e===null||e.memoizedState!==null&&e.memoizedState.dehydrated!==null){if(u=ln(t),o!==null&&o.dehydrated!==null){if(e===null){if(!u)throw Error(l(318));if(u=t.memoizedState,u=u!==null?u.dehydrated:null,!u)throw Error(l(317));u[D2]=t}else sn(),(t.flags&128)===0&&(t.memoizedState=null),t.flags|=4;b2(t),u=!1}else ne!==null&&(Kr(ne),ne=null),u=!0;if(!u)return t.flags&256?(Ee(t),t):(Ee(t),null)}if(Ee(t),(t.flags&128)!==0)return t.lanes=i,t;if(i=o!==null,e=e!==null&&e.memoizedState!==null,i){o=t.child,u=null,o.alternate!==null&&o.alternate.memoizedState!==null&&o.alternate.memoizedState.cachePool!==null&&(u=o.alternate.memoizedState.cachePool.pool);var f=null;o.memoizedState!==null&&o.memoizedState.cachePool!==null&&(f=o.memoizedState.cachePool.pool),f!==u&&(o.flags|=2048)}return i!==e&&i&&(t.child.flags|=8192),Bi(t,t.updateQueue),b2(t),null;case 4:return p3(),e===null&&so(t.stateNode.containerInfo),b2(t),null;case 10:return Oe(t.type),b2(t),null;case 19:if(e2(I2),u=t.memoizedState,u===null)return b2(t),null;if(o=(t.flags&128)!==0,f=u.rendering,f===null)if(o)Cn(u,!1);else{if(A2!==0||e!==null&&(e.flags&128)!==0)for(e=t.child;e!==null;){if(f=xi(e),f!==null){for(t.flags|=128,Cn(u,!1),e=f.updateQueue,t.updateQueue=e,Bi(t,e),t.subtreeFlags=0,e=i,i=t.child;i!==null;)F4(i,e),i=i.sibling;return V1(I2,I2.current&1|2),t.child}e=e.sibling}u.tail!==null&&e3()>qi&&(t.flags|=128,o=!0,Cn(u,!1),t.lanes=4194304)}else{if(!o)if(e=xi(f),e!==null){if(t.flags|=128,o=!0,e=e.updateQueue,t.updateQueue=e,Bi(t,e),Cn(u,!0),u.tail===null&&u.tailMode==="hidden"&&!f.alternate&&!Z1)return b2(t),null}else 2*e3()-u.renderingStartTime>qi&&i!==536870912&&(t.flags|=128,o=!0,Cn(u,!1),t.lanes=4194304);u.isBackwards?(f.sibling=t.child,t.child=f):(e=u.last,e!==null?e.sibling=f:t.child=f,u.last=f)}return u.tail!==null?(t=u.tail,u.rendering=t,u.tail=t.sibling,u.renderingStartTime=e3(),t.sibling=null,e=I2.current,V1(I2,o?e&1|2:e&1),t):(b2(t),null);case 22:case 23:return Ee(t),Za(),o=t.memoizedState!==null,e!==null?e.memoizedState!==null!==o&&(t.flags|=8192):o&&(t.flags|=8192),o?(i&536870912)!==0&&(t.flags&128)===0&&(b2(t),t.subtreeFlags&6&&(t.flags|=8192)):b2(t),i=t.updateQueue,i!==null&&Bi(t,i.retryQueue),i=null,e!==null&&e.memoizedState!==null&&e.memoizedState.cachePool!==null&&(i=e.memoizedState.cachePool.pool),o=null,t.memoizedState!==null&&t.memoizedState.cachePool!==null&&(o=t.memoizedState.cachePool.pool),o!==i&&(t.flags|=2048),e!==null&&e2(Ct),null;case 24:return i=null,e!==null&&(i=e.memoizedState.cache),t.memoizedState.cache!==i&&(t.flags|=2048),Oe(j2),b2(t),null;case 25:return null}throw Error(l(156,t.tag))}function p5(e,t){switch(Ya(t),t.tag){case 1:return e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 3:return Oe(j2),p3(),e=t.flags,(e&65536)!==0&&(e&128)===0?(t.flags=e&-65537|128,t):null;case 26:case 27:case 5:return s3(t),null;case 13:if(Ee(t),e=t.memoizedState,e!==null&&e.dehydrated!==null){if(t.alternate===null)throw Error(l(340));sn()}return e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 19:return e2(I2),null;case 4:return p3(),null;case 10:return Oe(t.type),null;case 22:case 23:return Ee(t),Za(),e!==null&&e2(Ct),e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 24:return Oe(j2),null;case 25:return null;default:return null}}function Y4(e,t){switch(Ya(t),t.tag){case 3:Oe(j2),p3();break;case 26:case 27:case 5:s3(t);break;case 4:p3();break;case 13:Ee(t);break;case 19:e2(I2);break;case 10:Oe(t.type);break;case 22:case 23:Ee(t),Za(),e!==null&&e2(Ct);break;case 24:Oe(j2)}}var h5={getCacheForType:function(e){var t=i3(j2),i=t.data.get(e);return i===void 0&&(i=e(),t.data.set(e,i)),i}},m5=typeof WeakMap=="function"?WeakMap:Map,_2=0,c2=null,F1=null,X1=0,f2=0,M3=null,ze=!1,x0=!1,$r=!1,Ne=0,A2=0,at=0,It=0,Pr=0,P3=0,S0=0,Mn=null,de=null,Yr=!1,Qr=0,qi=1/0,Hi=null,rt=null,Vi=!1,jt=null,On=0,Xr=0,Gr=null,Dn=0,Zr=null;function O3(){if((_2&2)!==0&&X1!==0)return X1&-X1;if(t1.T!==null){var e=h0;return e!==0?e:ao()}return V0()}function Q4(){P3===0&&(P3=(X1&536870912)===0||Z1?ai():536870912);var e=H3.current;return e!==null&&(e.flags|=32),P3}function d3(e,t,i){(e===c2&&f2===2||e.cancelPendingCommit!==null)&&(A0(e,0),Ie(e,X1,P3,!1)),He(e,i),((_2&2)===0||e!==c2)&&(e===c2&&((_2&2)===0&&(It|=i),A2===4&&Ie(e,X1,P3,!1)),pe(e))}function X4(e,t,i){if((_2&6)!==0)throw Error(l(327));var o=!i&&(t&60)===0&&(t&e.expiredLanes)===0||q2(e,t),u=o?v5(e,t):eo(e,t,!0),f=o;do{if(u===0){x0&&!o&&Ie(e,t,0,!1);break}else if(u===6)Ie(e,t,0,!ze);else{if(i=e.current.alternate,f&&!g5(i)){u=eo(e,t,!1),f=!1;continue}if(u===2){if(f=t,e.errorRecoveryDisabledLanes&f)var g=0;else g=e.pendingLanes&-536870913,g=g!==0?g:g&536870912?536870912:0;if(g!==0){t=g;e:{var x=e;u=Mn;var C=x.current.memoizedState.isDehydrated;if(C&&(A0(x,g).flags|=256),g=eo(x,g,!1),g!==2){if($r&&!C){x.errorRecoveryDisabledLanes|=f,It|=f,u=4;break e}f=de,de=u,f!==null&&Kr(f)}u=g}if(f=!1,u!==2)continue}}if(u===1){A0(e,0),Ie(e,t,0,!0);break}e:{switch(o=e,u){case 0:case 1:throw Error(l(345));case 4:if((t&4194176)===t){Ie(o,t,P3,!ze);break e}break;case 2:de=null;break;case 3:case 5:break;default:throw Error(l(329))}if(o.finishedWork=i,o.finishedLanes=t,(t&62914560)===t&&(f=Qr+300-e3(),10<f)){if(Ie(o,t,P3,!ze),mt(o,0)!==0)break e;o.timeoutHandle=v9(G4.bind(null,o,i,de,Hi,Yr,t,P3,It,S0,ze,2,-0,0),f);break e}G4(o,i,de,Hi,Yr,t,P3,It,S0,ze,0,-0,0)}}break}while(!0);pe(e)}function Kr(e){de===null?de=e:de.push.apply(de,e)}function G4(e,t,i,o,u,f,g,x,C,L,Y,K,N){var H=t.subtreeFlags;if((H&8192||(H&16785408)===16785408)&&(In={stylesheets:null,count:0,unsuspend:K5},B4(t),t=W5(),t!==null)){e.cancelPendingCommit=t(n9.bind(null,e,i,o,u,g,x,C,1,K,N)),Ie(e,f,g,!L);return}n9(e,i,o,u,g,x,C,Y,K,N)}function g5(e){for(var t=e;;){var i=t.tag;if((i===0||i===11||i===15)&&t.flags&16384&&(i=t.updateQueue,i!==null&&(i=i.stores,i!==null)))for(var o=0;o<i.length;o++){var u=i[o],f=u.getSnapshot;u=u.value;try{if(!E3(f(),u))return!1}catch{return!1}}if(i=t.child,t.subtreeFlags&16384&&i!==null)i.return=t,t=i;else{if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}function Ie(e,t,i,o){t&=~Pr,t&=~It,e.suspendedLanes|=t,e.pingedLanes&=~t,o&&(e.warmLanes|=t),o=e.expirationTimes;for(var u=t;0<u;){var f=31-x2(u),g=1<<f;o[f]=-1,u&=~g}i!==0&&Zt(e,i,t)}function Fi(){return(_2&6)===0?(Ln(0),!1):!0}function Jr(){if(F1!==null){if(f2===0)var e=F1.return;else e=F1,Me=Rt=null,ar(e),d0=null,dn=0,e=F1;for(;e!==null;)Y4(e.alternate,e),e=e.return;F1=null}}function A0(e,t){e.finishedWork=null,e.finishedLanes=0;var i=e.timeoutHandle;i!==-1&&(e.timeoutHandle=-1,z5(i)),i=e.cancelPendingCommit,i!==null&&(e.cancelPendingCommit=null,i()),Jr(),c2=e,F1=i=it(e.current,null),X1=t,f2=0,M3=null,ze=!1,x0=q2(e,t),$r=!1,S0=P3=Pr=It=at=A2=0,de=Mn=null,Yr=!1,(t&8)!==0&&(t|=t&32);var o=e.entangledLanes;if(o!==0)for(e=e.entanglements,o&=t;0<o;){var u=31-x2(o),f=1<<u;t|=e[u],o&=~f}return Ne=t,pi(),i}function Z4(e,t){q1=null,t1.H=fe,t===cn?(t=fs(),f2=3):t===ss?(t=fs(),f2=4):f2=t===u4?8:t!==null&&typeof t=="object"&&typeof t.then=="function"?6:1,M3=t,F1===null&&(A2=1,Ri(e,j3(t,e.current)))}function K4(){var e=t1.H;return t1.H=fe,e===null?fe:e}function J4(){var e=t1.A;return t1.A=h5,e}function Wr(){A2=4,ze||(X1&4194176)!==X1&&H3.current!==null||(x0=!0),(at&134217727)===0&&(It&134217727)===0||c2===null||Ie(c2,X1,P3,!1)}function eo(e,t,i){var o=_2;_2|=2;var u=K4(),f=J4();(c2!==e||X1!==t)&&(Hi=null,A0(e,t)),t=!1;var g=A2;e:do try{if(f2!==0&&F1!==null){var x=F1,C=M3;switch(f2){case 8:Jr(),g=6;break e;case 3:case 2:case 6:H3.current===null&&(t=!0);var L=f2;if(f2=0,M3=null,k0(e,x,C,L),i&&x0){g=0;break e}break;default:L=f2,f2=0,M3=null,k0(e,x,C,L)}}y5(),g=A2;break}catch(Y){Z4(e,Y)}while(!0);return t&&e.shellSuspendCounter++,Me=Rt=null,_2=o,t1.H=u,t1.A=f,F1===null&&(c2=null,X1=0,pi()),g}function y5(){for(;F1!==null;)W4(F1)}function v5(e,t){var i=_2;_2|=2;var o=K4(),u=J4();c2!==e||X1!==t?(Hi=null,qi=e3()+500,A0(e,t)):x0=q2(e,t);e:do try{if(f2!==0&&F1!==null){t=F1;var f=M3;t:switch(f2){case 1:f2=0,M3=null,k0(e,t,f,1);break;case 2:if(us(f)){f2=0,M3=null,e9(t);break}t=function(){f2===2&&c2===e&&(f2=7),pe(e)},f.then(t,t);break e;case 3:f2=7;break e;case 4:f2=5;break e;case 7:us(f)?(f2=0,M3=null,e9(t)):(f2=0,M3=null,k0(e,t,f,7));break;case 5:var g=null;switch(F1.tag){case 26:g=F1.memoizedState;case 5:case 27:var x=F1;if(!g||M9(g)){f2=0,M3=null;var C=x.sibling;if(C!==null)F1=C;else{var L=x.return;L!==null?(F1=L,$i(L)):F1=null}break t}}f2=0,M3=null,k0(e,t,f,5);break;case 6:f2=0,M3=null,k0(e,t,f,6);break;case 8:Jr(),A2=6;break e;default:throw Error(l(462))}}b5();break}catch(Y){Z4(e,Y)}while(!0);return Me=Rt=null,t1.H=o,t1.A=u,_2=i,F1!==null?0:(c2=null,X1=0,pi(),A2)}function b5(){for(;F1!==null&&!q0();)W4(F1)}function W4(e){var t=w4(e.alternate,e,Ne);e.memoizedProps=e.pendingProps,t===null?$i(e):F1=t}function e9(e){var t=e,i=t.alternate;switch(t.tag){case 15:case 0:t=m4(i,t,t.pendingProps,t.type,void 0,X1);break;case 11:t=m4(i,t,t.pendingProps,t.type.render,t.ref,X1);break;case 5:ar(t);default:Y4(i,t),t=F1=F4(t,Ne),t=w4(i,t,Ne)}e.memoizedProps=e.pendingProps,t===null?$i(e):F1=t}function k0(e,t,i,o){Me=Rt=null,ar(t),d0=null,dn=0;var u=t.return;try{if(l5(e,u,t,i,X1)){A2=1,Ri(e,j3(i,e.current)),F1=null;return}}catch(f){if(u!==null)throw F1=u,f;A2=1,Ri(e,j3(i,e.current)),F1=null;return}t.flags&32768?(Z1||o===1?e=!0:x0||(X1&536870912)!==0?e=!1:(ze=e=!0,(o===2||o===3||o===6)&&(o=H3.current,o!==null&&o.tag===13&&(o.flags|=16384))),t9(t,e)):$i(t)}function $i(e){var t=e;do{if((t.flags&32768)!==0){t9(t,ze);return}e=t.return;var i=d5(t.alternate,t,Ne);if(i!==null){F1=i;return}if(t=t.sibling,t!==null){F1=t;return}F1=t=e}while(t!==null);A2===0&&(A2=5)}function t9(e,t){do{var i=p5(e.alternate,e);if(i!==null){i.flags&=32767,F1=i;return}if(i=e.return,i!==null&&(i.flags|=32768,i.subtreeFlags=0,i.deletions=null),!t&&(e=e.sibling,e!==null)){F1=e;return}F1=e=i}while(e!==null);A2=6,F1=null}function n9(e,t,i,o,u,f,g,x,C,L){var Y=t1.T,K=a1.p;try{a1.p=2,t1.T=null,_5(e,t,i,o,K,u,f,g,x,C,L)}finally{t1.T=Y,a1.p=K}}function _5(e,t,i,o,u,f,g,x){do E0();while(jt!==null);if((_2&6)!==0)throw Error(l(327));var C=e.finishedWork;if(o=e.finishedLanes,C===null)return null;if(e.finishedWork=null,e.finishedLanes=0,C===e.current)throw Error(l(177));e.callbackNode=null,e.callbackPriority=0,e.cancelPendingCommit=null;var L=C.lanes|C.childLanes;if(L|=Fa,Gt(e,o,L,f,g,x),e===c2&&(F1=c2=null,X1=0),(C.subtreeFlags&10256)===0&&(C.flags&10256)===0||Vi||(Vi=!0,Xr=L,Gr=i,A5(S1,function(){return E0(),null})),i=(C.flags&15990)!==0,(C.subtreeFlags&15990)!==0||i?(i=t1.T,t1.T=null,f=a1.p,a1.p=2,g=_2,_2|=4,u5(e,C),N4(C,e),$6(po,e.containerInfo),na=!!fo,po=fo=null,e.current=C,L4(e,C.alternate,C),u3(),_2=g,a1.p=f,t1.T=i):e.current=C,Vi?(Vi=!1,jt=e,On=o):i9(e,L),L=e.pendingLanes,L===0&&(rt=null),le(C.stateNode),pe(e),t!==null)for(u=e.onRecoverableError,C=0;C<t.length;C++)L=t[C],u(L.value,{componentStack:L.stack});return(On&3)!==0&&E0(),L=e.pendingLanes,(o&4194218)!==0&&(L&42)!==0?e===Zr?Dn++:(Dn=0,Zr=e):Dn=0,Ln(0),null}function i9(e,t){(e.pooledCacheLanes&=t)===0&&(t=e.pooledCache,t!=null&&(e.pooledCache=null,hn(t)))}function E0(){if(jt!==null){var e=jt,t=Xr;Xr=0;var i=Kt(On),o=t1.T,u=a1.p;try{if(a1.p=32>i?32:i,t1.T=null,jt===null)var f=!1;else{i=Gr,Gr=null;var g=jt,x=On;if(jt=null,On=0,(_2&6)!==0)throw Error(l(331));var C=_2;if(_2|=4,H4(g.current),j4(g,g.current,x,i),_2=C,Ln(0,!1),m2&&typeof m2.onPostCommitFiberRoot=="function")try{m2.onPostCommitFiberRoot(O2,g)}catch{}f=!0}return f}finally{a1.p=u,t1.T=o,i9(e,t)}}return!1}function a9(e,t,i){t=j3(i,t),t=vr(e.stateNode,t,2),e=We(e,t,2),e!==null&&(He(e,2),pe(e))}function r2(e,t,i){if(e.tag===3)a9(e,e,i);else for(;t!==null;){if(t.tag===3){a9(t,e,i);break}else if(t.tag===1){var o=t.stateNode;if(typeof t.type.getDerivedStateFromError=="function"||typeof o.componentDidCatch=="function"&&(rt===null||!rt.has(o))){e=j3(i,e),i=l4(2),o=We(t,i,2),o!==null&&(s4(i,o,t,e),He(o,2),pe(o));break}}t=t.return}}function to(e,t,i){var o=e.pingCache;if(o===null){o=e.pingCache=new m5;var u=new Set;o.set(t,u)}else u=o.get(t),u===void 0&&(u=new Set,o.set(t,u));u.has(i)||($r=!0,u.add(i),e=w5.bind(null,e,t,i),t.then(e,e))}function w5(e,t,i){var o=e.pingCache;o!==null&&o.delete(t),e.pingedLanes|=e.suspendedLanes&i,e.warmLanes&=~i,c2===e&&(X1&i)===i&&(A2===4||A2===3&&(X1&62914560)===X1&&300>e3()-Qr?(_2&2)===0&&A0(e,0):Pr|=i,S0===X1&&(S0=0)),pe(e)}function r9(e,t){t===0&&(t=H2()),e=Pe(e,t),e!==null&&(He(e,t),pe(e))}function x5(e){var t=e.memoizedState,i=0;t!==null&&(i=t.retryLane),r9(e,i)}function S5(e,t){var i=0;switch(e.tag){case 13:var o=e.stateNode,u=e.memoizedState;u!==null&&(i=u.retryLane);break;case 19:o=e.stateNode;break;case 22:o=e.stateNode._retryCache;break;default:throw Error(l(314))}o!==null&&o.delete(t),r9(e,i)}function A5(e,t){return g2(e,t)}var Pi=null,T0=null,no=!1,Yi=!1,io=!1,Bt=0;function pe(e){e!==T0&&e.next===null&&(T0===null?Pi=T0=e:T0=T0.next=e),Yi=!0,no||(no=!0,E5(k5))}function Ln(e,t){if(!io&&Yi){io=!0;do for(var i=!1,o=Pi;o!==null;){if(e!==0){var u=o.pendingLanes;if(u===0)var f=0;else{var g=o.suspendedLanes,x=o.pingedLanes;f=(1<<31-x2(42|e)+1)-1,f&=u&~(g&~x),f=f&201326677?f&201326677|1:f?f|2:0}f!==0&&(i=!0,s9(o,f))}else f=X1,f=mt(o,o===c2?f:0),(f&3)===0||q2(o,f)||(i=!0,s9(o,f));o=o.next}while(i);io=!1}}function k5(){Yi=no=!1;var e=0;Bt!==0&&(U5()&&(e=Bt),Bt=0);for(var t=e3(),i=null,o=Pi;o!==null;){var u=o.next,f=o9(o,t);f===0?(o.next=null,i===null?Pi=u:i.next=u,u===null&&(T0=i)):(i=o,(e!==0||(f&3)!==0)&&(Yi=!0)),o=u}Ln(e)}function o9(e,t){for(var i=e.suspendedLanes,o=e.pingedLanes,u=e.expirationTimes,f=e.pendingLanes&-62914561;0<f;){var g=31-x2(f),x=1<<g,C=u[g];C===-1?((x&i)===0||(x&o)!==0)&&(u[g]=Ma(x,t)):C<=t&&(e.expiredLanes|=x),f&=~x}if(t=c2,i=X1,i=mt(e,e===t?i:0),o=e.callbackNode,i===0||e===t&&f2===2||e.cancelPendingCommit!==null)return o!==null&&o!==null&&R1(o),e.callbackNode=null,e.callbackPriority=0;if((i&3)===0||q2(e,i)){if(t=i&-i,t===e.callbackPriority)return t;switch(o!==null&&R1(o),Kt(i)){case 2:case 8:i=r1;break;case 32:i=S1;break;case 268435456:i=G1;break;default:i=S1}return o=l9.bind(null,e),i=g2(i,o),e.callbackPriority=t,e.callbackNode=i,t}return o!==null&&o!==null&&R1(o),e.callbackPriority=2,e.callbackNode=null,2}function l9(e,t){var i=e.callbackNode;if(E0()&&e.callbackNode!==i)return null;var o=X1;return o=mt(e,e===c2?o:0),o===0?null:(X4(e,o,t),o9(e,e3()),e.callbackNode!=null&&e.callbackNode===i?l9.bind(null,e):null)}function s9(e,t){if(E0())return null;X4(e,t,!0)}function E5(e){N5(function(){(_2&6)!==0?g2(F,e):e()})}function ao(){return Bt===0&&(Bt=ai()),Bt}function u9(e){return e==null||typeof e=="symbol"||typeof e=="boolean"?null:typeof e=="function"?e:a0(""+e)}function c9(e,t){var i=t.ownerDocument.createElement("input");return i.name=t.name,i.value=t.value,e.id&&i.setAttribute("form",e.id),t.parentNode.insertBefore(i,t),e=new FormData(e),i.parentNode.removeChild(i),e}function T5(e,t,i,o,u){if(t==="submit"&&i&&i.stateNode===u){var f=u9((u[F2]||null).action),g=o.submitter;g&&(t=(t=g[F2]||null)?u9(t.formAction):g.getAttribute("formAction"),t!==null&&(f=t,g=null));var x=new s2("action","action",null,o,u);e.push({event:x,listeners:[{instance:null,listener:function(){if(o.defaultPrevented){if(Bt!==0){var C=g?c9(u,g):new FormData(u);pr(i,{pending:!0,data:C,method:u.method,action:f},null,C)}}else typeof f=="function"&&(x.preventDefault(),C=g?c9(u,g):new FormData(u),pr(i,{pending:!0,data:C,method:u.method,action:f},f,C))},currentTarget:u}]})}}for(var ro=0;ro<ns.length;ro++){var oo=ns[ro],C5=oo.toLowerCase(),M5=oo[0].toUpperCase()+oo.slice(1);te(C5,"on"+M5)}te(Kl,"onAnimationEnd"),te(Jl,"onAnimationIteration"),te(Wl,"onAnimationStart"),te("dblclick","onDoubleClick"),te("focusin","onFocus"),te("focusout","onBlur"),te(Y6,"onTransitionRun"),te(Q6,"onTransitionStart"),te(X6,"onTransitionCancel"),te(es,"onTransitionEnd"),se("onMouseEnter",["mouseout","mouseover"]),se("onMouseLeave",["mouseout","mouseover"]),se("onPointerEnter",["pointerout","pointerover"]),se("onPointerLeave",["pointerout","pointerover"]),xe("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),xe("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),xe("onBeforeInput",["compositionend","keypress","textInput","paste"]),xe("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),xe("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),xe("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Rn="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),O5=new Set("beforetoggle cancel close invalid load scroll scrollend toggle".split(" ").concat(Rn));function f9(e,t){t=(t&4)!==0;for(var i=0;i<e.length;i++){var o=e[i],u=o.event;o=o.listeners;e:{var f=void 0;if(t)for(var g=o.length-1;0<=g;g--){var x=o[g],C=x.instance,L=x.currentTarget;if(x=x.listener,C!==f&&u.isPropagationStopped())break e;f=x,u.currentTarget=L;try{f(u)}catch(Y){Li(Y)}u.currentTarget=null,f=C}else for(g=0;g<o.length;g++){if(x=o[g],C=x.instance,L=x.currentTarget,x=x.listener,C!==f&&u.isPropagationStopped())break e;f=x,u.currentTarget=L;try{f(u)}catch(Y){Li(Y)}u.currentTarget=null,f=C}}}}function Y1(e,t){var i=t[Jt];i===void 0&&(i=t[Jt]=new Set);var o=e+"__bubble";i.has(o)||(d9(t,e,2,!1),i.add(o))}function lo(e,t,i){var o=0;t&&(o|=4),d9(i,e,o,t)}var Qi="_reactListening"+Math.random().toString(36).slice(2);function so(e){if(!e[Qi]){e[Qi]=!0,oi.forEach(function(i){i!=="selectionchange"&&(O5.has(i)||lo(i,!1,e),lo(i,!0,e))});var t=e.nodeType===9?e:e.ownerDocument;t===null||t[Qi]||(t[Qi]=!0,lo("selectionchange",!1,t))}}function d9(e,t,i,o){switch(z9(t)){case 2:var u=nf;break;case 8:u=af;break;default:u=xo}i=u.bind(null,t,i,e),u=void 0,!E||t!=="touchstart"&&t!=="touchmove"&&t!=="wheel"||(u=!0),o?u!==void 0?e.addEventListener(t,i,{capture:!0,passive:u}):e.addEventListener(t,i,!0):u!==void 0?e.addEventListener(t,i,{passive:u}):e.addEventListener(t,i,!1)}function uo(e,t,i,o,u){var f=o;if((t&1)===0&&(t&2)===0&&o!==null)e:for(;;){if(o===null)return;var g=o.tag;if(g===3||g===4){var x=o.stateNode.containerInfo;if(x===u||x.nodeType===8&&x.parentNode===u)break;if(g===4)for(g=o.return;g!==null;){var C=g.tag;if((C===3||C===4)&&(C=g.stateNode.containerInfo,C===u||C.nodeType===8&&C.parentNode===u))return;g=g.return}for(;x!==null;){if(g=_e(x),g===null)return;if(C=g.tag,C===5||C===6||C===26||C===27){o=f=g;continue e}x=x.parentNode}}o=o.return}y(function(){var L=f,Y=J0(i),K=[];e:{var N=ts.get(e);if(N!==void 0){var H=s2,y1=e;switch(e){case"keypress":if(p1(i)===0)break e;case"keydown":case"keyup":H=S6;break;case"focusin":y1="focus",H=Ua;break;case"focusout":y1="blur",H=Ua;break;case"beforeblur":case"afterblur":H=Ua;break;case"click":if(i.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":H=en;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":H=f6;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":H=E6;break;case Kl:case Jl:case Wl:H=h6;break;case es:H=C6;break;case"scroll":case"scrollend":H=k3;break;case"wheel":H=O6;break;case"copy":case"cut":case"paste":H=g6;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":H=Ll;break;case"toggle":case"beforetoggle":H=L6}var D1=(t&4)!==0,k2=!D1&&(e==="scroll"||e==="scrollend"),R=D1?N!==null?N+"Capture":null:N;D1=[];for(var D=L,U;D!==null;){var G=D;if(U=G.stateNode,G=G.tag,G!==5&&G!==26&&G!==27||U===null||R===null||(G=A(D,R),G!=null&&D1.push(Un(D,G,U))),k2)break;D=D.return}0<D1.length&&(N=new H(N,y1,null,i,Y),K.push({event:N,listeners:D1}))}}if((t&7)===0){e:{if(N=e==="mouseover"||e==="pointerover",H=e==="mouseout"||e==="pointerout",N&&i!==K0&&(y1=i.relatedTarget||i.fromElement)&&(_e(y1)||y1[K3]))break e;if((H||N)&&(N=Y.window===Y?Y:(N=Y.ownerDocument)?N.defaultView||N.parentWindow:window,H?(y1=i.relatedTarget||i.toElement,H=L,y1=y1?_e(y1):null,y1!==null&&(k2=P(y1),D1=y1.tag,y1!==k2||D1!==5&&D1!==27&&D1!==6)&&(y1=null)):(H=null,y1=L),H!==y1)){if(D1=en,G="onMouseLeave",R="onMouseEnter",D="mouse",(e==="pointerout"||e==="pointerover")&&(D1=Ll,G="onPointerLeave",R="onPointerEnter",D="pointer"),k2=H==null?N:yt(H),U=y1==null?N:yt(y1),N=new D1(G,D+"leave",H,i,Y),N.target=k2,N.relatedTarget=U,G=null,_e(Y)===L&&(D1=new D1(R,D+"enter",y1,i,Y),D1.target=U,D1.relatedTarget=k2,G=D1),k2=G,H&&y1)t:{for(D1=H,R=y1,D=0,U=D1;U;U=C0(U))D++;for(U=0,G=R;G;G=C0(G))U++;for(;0<D-U;)D1=C0(D1),D--;for(;0<U-D;)R=C0(R),U--;for(;D--;){if(D1===R||R!==null&&D1===R.alternate)break t;D1=C0(D1),R=C0(R)}D1=null}else D1=null;H!==null&&p9(K,N,H,D1,!1),y1!==null&&k2!==null&&p9(K,k2,y1,D1,!0)}}e:{if(N=L?yt(L):window,H=N.nodeName&&N.nodeName.toLowerCase(),H==="select"||H==="input"&&N.type==="file")var m1=ql;else if(jl(N))if(Hl)m1=V6;else{m1=q6;var H1=B6}else H=N.nodeName,!H||H.toLowerCase()!=="input"||N.type!=="checkbox"&&N.type!=="radio"?L&&Z0(L.elementType)&&(m1=ql):m1=H6;if(m1&&(m1=m1(e,L))){Bl(K,m1,i,Y);break e}H1&&H1(e,N,L),e==="focusout"&&L&&N.type==="number"&&L.memoizedProps.value!=null&&i0(N,"number",N.value)}switch(H1=L?yt(L):window,e){case"focusin":(jl(H1)||H1.contentEditable==="true")&&(o0=H1,qa=L,on=null);break;case"focusout":on=qa=o0=null;break;case"mousedown":Ha=!0;break;case"contextmenu":case"mouseup":case"dragend":Ha=!1,Gl(K,i,Y);break;case"selectionchange":if(P6)break;case"keydown":case"keyup":Gl(K,i,Y)}var w1;if(Na)e:{switch(e){case"compositionstart":var k1="onCompositionStart";break e;case"compositionend":k1="onCompositionEnd";break e;case"compositionupdate":k1="onCompositionUpdate";break e}k1=void 0}else r0?Nl(e,i)&&(k1="onCompositionEnd"):e==="keydown"&&i.keyCode===229&&(k1="onCompositionStart");k1&&(Rl&&i.locale!=="ko"&&(r0||k1!=="onCompositionStart"?k1==="onCompositionEnd"&&r0&&(w1=d1()):(j=Y,J="value"in j?j.value:j.textContent,r0=!0)),H1=Xi(L,k1),0<H1.length&&(k1=new Dl(k1,e,null,i,Y),K.push({event:k1,listeners:H1}),w1?k1.data=w1:(w1=Il(i),w1!==null&&(k1.data=w1)))),(w1=U6?z6(e,i):N6(e,i))&&(k1=Xi(L,"onBeforeInput"),0<k1.length&&(H1=new Dl("onBeforeInput","beforeinput",null,i,Y),K.push({event:H1,listeners:k1}),H1.data=w1)),T5(K,e,L,i,Y)}f9(K,t)})}function Un(e,t,i){return{instance:e,listener:t,currentTarget:i}}function Xi(e,t){for(var i=t+"Capture",o=[];e!==null;){var u=e,f=u.stateNode;u=u.tag,u!==5&&u!==26&&u!==27||f===null||(u=A(e,i),u!=null&&o.unshift(Un(e,u,f)),u=A(e,t),u!=null&&o.push(Un(e,u,f))),e=e.return}return o}function C0(e){if(e===null)return null;do e=e.return;while(e&&e.tag!==5&&e.tag!==27);return e||null}function p9(e,t,i,o,u){for(var f=t._reactName,g=[];i!==null&&i!==o;){var x=i,C=x.alternate,L=x.stateNode;if(x=x.tag,C!==null&&C===o)break;x!==5&&x!==26&&x!==27||L===null||(C=L,u?(L=A(i,f),L!=null&&g.unshift(Un(i,L,C))):u||(L=A(i,f),L!=null&&g.push(Un(i,L,C)))),i=i.return}g.length!==0&&e.push({event:t,listeners:g})}var D5=/\r\n?/g,L5=/\u0000|\uFFFD/g;function h9(e){return(typeof e=="string"?e:""+e).replace(D5,`
`).replace(L5,"")}function m9(e,t){return t=h9(t),h9(e)===t}function Gi(){}function a2(e,t,i,o,u,f){switch(i){case"children":typeof o=="string"?t==="body"||t==="textarea"&&o===""||Q2(e,o):(typeof o=="number"||typeof o=="bigint")&&t!=="body"&&Q2(e,""+o);break;case"className":_t(e,"class",o);break;case"tabIndex":_t(e,"tabindex",o);break;case"dir":case"role":case"viewBox":case"width":case"height":_t(e,i,o);break;case"style":fi(e,o,f);break;case"data":if(t!=="object"){_t(e,"data",o);break}case"src":case"href":if(o===""&&(t!=="a"||i!=="href")){e.removeAttribute(i);break}if(o==null||typeof o=="function"||typeof o=="symbol"||typeof o=="boolean"){e.removeAttribute(i);break}o=a0(""+o),e.setAttribute(i,o);break;case"action":case"formAction":if(typeof o=="function"){e.setAttribute(i,"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')");break}else typeof f=="function"&&(i==="formAction"?(t!=="input"&&a2(e,t,"name",u.name,u,null),a2(e,t,"formEncType",u.formEncType,u,null),a2(e,t,"formMethod",u.formMethod,u,null),a2(e,t,"formTarget",u.formTarget,u,null)):(a2(e,t,"encType",u.encType,u,null),a2(e,t,"method",u.method,u,null),a2(e,t,"target",u.target,u,null)));if(o==null||typeof o=="symbol"||typeof o=="boolean"){e.removeAttribute(i);break}o=a0(""+o),e.setAttribute(i,o);break;case"onClick":o!=null&&(e.onclick=Gi);break;case"onScroll":o!=null&&Y1("scroll",e);break;case"onScrollEnd":o!=null&&Y1("scrollend",e);break;case"dangerouslySetInnerHTML":if(o!=null){if(typeof o!="object"||!("__html"in o))throw Error(l(61));if(i=o.__html,i!=null){if(u.children!=null)throw Error(l(60));e.innerHTML=i}}break;case"multiple":e.multiple=o&&typeof o!="function"&&typeof o!="symbol";break;case"muted":e.muted=o&&typeof o!="function"&&typeof o!="symbol";break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"defaultValue":case"defaultChecked":case"innerHTML":case"ref":break;case"autoFocus":break;case"xlinkHref":if(o==null||typeof o=="function"||typeof o=="boolean"||typeof o=="symbol"){e.removeAttribute("xlink:href");break}i=a0(""+o),e.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",i);break;case"contentEditable":case"spellCheck":case"draggable":case"value":case"autoReverse":case"externalResourcesRequired":case"focusable":case"preserveAlpha":o!=null&&typeof o!="function"&&typeof o!="symbol"?e.setAttribute(i,""+o):e.removeAttribute(i);break;case"inert":case"allowFullScreen":case"async":case"autoPlay":case"controls":case"default":case"defer":case"disabled":case"disablePictureInPicture":case"disableRemotePlayback":case"formNoValidate":case"hidden":case"loop":case"noModule":case"noValidate":case"open":case"playsInline":case"readOnly":case"required":case"reversed":case"scoped":case"seamless":case"itemScope":o&&typeof o!="function"&&typeof o!="symbol"?e.setAttribute(i,""):e.removeAttribute(i);break;case"capture":case"download":o===!0?e.setAttribute(i,""):o!==!1&&o!=null&&typeof o!="function"&&typeof o!="symbol"?e.setAttribute(i,o):e.removeAttribute(i);break;case"cols":case"rows":case"size":case"span":o!=null&&typeof o!="function"&&typeof o!="symbol"&&!isNaN(o)&&1<=o?e.setAttribute(i,o):e.removeAttribute(i);break;case"rowSpan":case"start":o==null||typeof o=="function"||typeof o=="symbol"||isNaN(o)?e.removeAttribute(i):e.setAttribute(i,o);break;case"popover":Y1("beforetoggle",e),Y1("toggle",e),bt(e,"popover",o);break;case"xlinkActuate":J3(e,"http://www.w3.org/1999/xlink","xlink:actuate",o);break;case"xlinkArcrole":J3(e,"http://www.w3.org/1999/xlink","xlink:arcrole",o);break;case"xlinkRole":J3(e,"http://www.w3.org/1999/xlink","xlink:role",o);break;case"xlinkShow":J3(e,"http://www.w3.org/1999/xlink","xlink:show",o);break;case"xlinkTitle":J3(e,"http://www.w3.org/1999/xlink","xlink:title",o);break;case"xlinkType":J3(e,"http://www.w3.org/1999/xlink","xlink:type",o);break;case"xmlBase":J3(e,"http://www.w3.org/XML/1998/namespace","xml:base",o);break;case"xmlLang":J3(e,"http://www.w3.org/XML/1998/namespace","xml:lang",o);break;case"xmlSpace":J3(e,"http://www.w3.org/XML/1998/namespace","xml:space",o);break;case"is":bt(e,"is",o);break;case"innerText":case"textContent":break;default:(!(2<i.length)||i[0]!=="o"&&i[0]!=="O"||i[1]!=="n"&&i[1]!=="N")&&(i=La.get(i)||i,bt(e,i,o))}}function co(e,t,i,o,u,f){switch(i){case"style":fi(e,o,f);break;case"dangerouslySetInnerHTML":if(o!=null){if(typeof o!="object"||!("__html"in o))throw Error(l(61));if(i=o.__html,i!=null){if(u.children!=null)throw Error(l(60));e.innerHTML=i}}break;case"children":typeof o=="string"?Q2(e,o):(typeof o=="number"||typeof o=="bigint")&&Q2(e,""+o);break;case"onScroll":o!=null&&Y1("scroll",e);break;case"onScrollEnd":o!=null&&Y1("scrollend",e);break;case"onClick":o!=null&&(e.onclick=Gi);break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"innerHTML":case"ref":break;case"innerText":case"textContent":break;default:if(!li.hasOwnProperty(i))e:{if(i[0]==="o"&&i[1]==="n"&&(u=i.endsWith("Capture"),t=i.slice(2,u?i.length-7:void 0),f=e[F2]||null,f=f!=null?f[i]:null,typeof f=="function"&&e.removeEventListener(t,f,u),typeof o=="function")){typeof f!="function"&&f!==null&&(i in e?e[i]=null:e.hasAttribute(i)&&e.removeAttribute(i)),e.addEventListener(t,o,u);break e}i in e?e[i]=o:o===!0?e.setAttribute(i,""):bt(e,i,o)}}}function K2(e,t,i){switch(t){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"img":Y1("error",e),Y1("load",e);var o=!1,u=!1,f;for(f in i)if(i.hasOwnProperty(f)){var g=i[f];if(g!=null)switch(f){case"src":o=!0;break;case"srcSet":u=!0;break;case"children":case"dangerouslySetInnerHTML":throw Error(l(137,t));default:a2(e,t,f,g,i,null)}}u&&a2(e,t,"srcSet",i.srcSet,i,null),o&&a2(e,t,"src",i.src,i,null);return;case"input":Y1("invalid",e);var x=f=g=u=null,C=null,L=null;for(o in i)if(i.hasOwnProperty(o)){var Y=i[o];if(Y!=null)switch(o){case"name":u=Y;break;case"type":g=Y;break;case"checked":C=Y;break;case"defaultChecked":L=Y;break;case"value":f=Y;break;case"defaultValue":x=Y;break;case"children":case"dangerouslySetInnerHTML":if(Y!=null)throw Error(l(137,t));break;default:a2(e,t,o,Y,i,null)}}n0(e,f,x,C,L,g,u,!1),e0(e);return;case"select":Y1("invalid",e),o=g=f=null;for(u in i)if(i.hasOwnProperty(u)&&(x=i[u],x!=null))switch(u){case"value":f=x;break;case"defaultValue":g=x;break;case"multiple":o=x;default:a2(e,t,u,x,i,null)}t=f,i=g,e.multiple=!!o,t!=null?n3(e,!!o,t,!1):i!=null&&n3(e,!!o,i,!0);return;case"textarea":Y1("invalid",e),f=u=o=null;for(g in i)if(i.hasOwnProperty(g)&&(x=i[g],x!=null))switch(g){case"value":o=x;break;case"defaultValue":u=x;break;case"children":f=x;break;case"dangerouslySetInnerHTML":if(x!=null)throw Error(l(91));break;default:a2(e,t,g,x,i,null)}A3(e,o,u,f),e0(e);return;case"option":for(C in i)if(i.hasOwnProperty(C)&&(o=i[C],o!=null))switch(C){case"selected":e.selected=o&&typeof o!="function"&&typeof o!="symbol";break;default:a2(e,t,C,o,i,null)}return;case"dialog":Y1("cancel",e),Y1("close",e);break;case"iframe":case"object":Y1("load",e);break;case"video":case"audio":for(o=0;o<Rn.length;o++)Y1(Rn[o],e);break;case"image":Y1("error",e),Y1("load",e);break;case"details":Y1("toggle",e);break;case"embed":case"source":case"link":Y1("error",e),Y1("load",e);case"area":case"base":case"br":case"col":case"hr":case"keygen":case"meta":case"param":case"track":case"wbr":case"menuitem":for(L in i)if(i.hasOwnProperty(L)&&(o=i[L],o!=null))switch(L){case"children":case"dangerouslySetInnerHTML":throw Error(l(137,t));default:a2(e,t,L,o,i,null)}return;default:if(Z0(t)){for(Y in i)i.hasOwnProperty(Y)&&(o=i[Y],o!==void 0&&co(e,t,Y,o,i,void 0));return}}for(x in i)i.hasOwnProperty(x)&&(o=i[x],o!=null&&a2(e,t,x,o,i,null))}function R5(e,t,i,o){switch(t){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"input":var u=null,f=null,g=null,x=null,C=null,L=null,Y=null;for(H in i){var K=i[H];if(i.hasOwnProperty(H)&&K!=null)switch(H){case"checked":break;case"value":break;case"defaultValue":C=K;default:o.hasOwnProperty(H)||a2(e,t,H,null,o,K)}}for(var N in o){var H=o[N];if(K=i[N],o.hasOwnProperty(N)&&(H!=null||K!=null))switch(N){case"type":f=H;break;case"name":u=H;break;case"checked":L=H;break;case"defaultChecked":Y=H;break;case"value":g=H;break;case"defaultValue":x=H;break;case"children":case"dangerouslySetInnerHTML":if(H!=null)throw Error(l(137,t));break;default:H!==K&&a2(e,t,N,H,o,K)}}y2(e,g,x,C,L,Y,f,u);return;case"select":H=g=x=N=null;for(f in i)if(C=i[f],i.hasOwnProperty(f)&&C!=null)switch(f){case"value":break;case"multiple":H=C;default:o.hasOwnProperty(f)||a2(e,t,f,null,o,C)}for(u in o)if(f=o[u],C=i[u],o.hasOwnProperty(u)&&(f!=null||C!=null))switch(u){case"value":N=f;break;case"defaultValue":x=f;break;case"multiple":g=f;default:f!==C&&a2(e,t,u,f,o,C)}t=x,i=g,o=H,N!=null?n3(e,!!i,N,!1):!!o!=!!i&&(t!=null?n3(e,!!i,t,!0):n3(e,!!i,i?[]:"",!1));return;case"textarea":H=N=null;for(x in i)if(u=i[x],i.hasOwnProperty(x)&&u!=null&&!o.hasOwnProperty(x))switch(x){case"value":break;case"children":break;default:a2(e,t,x,null,o,u)}for(g in o)if(u=o[g],f=i[g],o.hasOwnProperty(g)&&(u!=null||f!=null))switch(g){case"value":N=u;break;case"defaultValue":H=u;break;case"children":break;case"dangerouslySetInnerHTML":if(u!=null)throw Error(l(91));break;default:u!==f&&a2(e,t,g,u,o,f)}G0(e,N,H);return;case"option":for(var y1 in i)if(N=i[y1],i.hasOwnProperty(y1)&&N!=null&&!o.hasOwnProperty(y1))switch(y1){case"selected":e.selected=!1;break;default:a2(e,t,y1,null,o,N)}for(C in o)if(N=o[C],H=i[C],o.hasOwnProperty(C)&&N!==H&&(N!=null||H!=null))switch(C){case"selected":e.selected=N&&typeof N!="function"&&typeof N!="symbol";break;default:a2(e,t,C,N,o,H)}return;case"img":case"link":case"area":case"base":case"br":case"col":case"embed":case"hr":case"keygen":case"meta":case"param":case"source":case"track":case"wbr":case"menuitem":for(var D1 in i)N=i[D1],i.hasOwnProperty(D1)&&N!=null&&!o.hasOwnProperty(D1)&&a2(e,t,D1,null,o,N);for(L in o)if(N=o[L],H=i[L],o.hasOwnProperty(L)&&N!==H&&(N!=null||H!=null))switch(L){case"children":case"dangerouslySetInnerHTML":if(N!=null)throw Error(l(137,t));break;default:a2(e,t,L,N,o,H)}return;default:if(Z0(t)){for(var k2 in i)N=i[k2],i.hasOwnProperty(k2)&&N!==void 0&&!o.hasOwnProperty(k2)&&co(e,t,k2,void 0,o,N);for(Y in o)N=o[Y],H=i[Y],!o.hasOwnProperty(Y)||N===H||N===void 0&&H===void 0||co(e,t,Y,N,o,H);return}}for(var R in i)N=i[R],i.hasOwnProperty(R)&&N!=null&&!o.hasOwnProperty(R)&&a2(e,t,R,null,o,N);for(K in o)N=o[K],H=i[K],!o.hasOwnProperty(K)||N===H||N==null&&H==null||a2(e,t,K,N,o,H)}var fo=null,po=null;function Zi(e){return e.nodeType===9?e:e.ownerDocument}function g9(e){switch(e){case"http://www.w3.org/2000/svg":return 1;case"http://www.w3.org/1998/Math/MathML":return 2;default:return 0}}function y9(e,t){if(e===0)switch(t){case"svg":return 1;case"math":return 2;default:return 0}return e===1&&t==="foreignObject"?0:e}function ho(e,t){return e==="textarea"||e==="noscript"||typeof t.children=="string"||typeof t.children=="number"||typeof t.children=="bigint"||typeof t.dangerouslySetInnerHTML=="object"&&t.dangerouslySetInnerHTML!==null&&t.dangerouslySetInnerHTML.__html!=null}var mo=null;function U5(){var e=window.event;return e&&e.type==="popstate"?e===mo?!1:(mo=e,!0):(mo=null,!1)}var v9=typeof setTimeout=="function"?setTimeout:void 0,z5=typeof clearTimeout=="function"?clearTimeout:void 0,b9=typeof Promise=="function"?Promise:void 0,N5=typeof queueMicrotask=="function"?queueMicrotask:typeof b9<"u"?function(e){return b9.resolve(null).then(e).catch(I5)}:v9;function I5(e){setTimeout(function(){throw e})}function go(e,t){var i=t,o=0;do{var u=i.nextSibling;if(e.removeChild(i),u&&u.nodeType===8)if(i=u.data,i==="/$"){if(o===0){e.removeChild(u),Vn(t);return}o--}else i!=="$"&&i!=="$?"&&i!=="$!"||o++;i=u}while(i);Vn(t)}function yo(e){var t=e.firstChild;for(t&&t.nodeType===10&&(t=t.nextSibling);t;){var i=t;switch(t=t.nextSibling,i.nodeName){case"HTML":case"HEAD":case"BODY":yo(i),P0(i);continue;case"SCRIPT":case"STYLE":continue;case"LINK":if(i.rel.toLowerCase()==="stylesheet")continue}e.removeChild(i)}}function j5(e,t,i,o){for(;e.nodeType===1;){var u=i;if(e.nodeName.toLowerCase()!==t.toLowerCase()){if(!o&&(e.nodeName!=="INPUT"||e.type!=="hidden"))break}else if(o){if(!e[gt])switch(t){case"meta":if(!e.hasAttribute("itemprop"))break;return e;case"link":if(f=e.getAttribute("rel"),f==="stylesheet"&&e.hasAttribute("data-precedence"))break;if(f!==u.rel||e.getAttribute("href")!==(u.href==null?null:u.href)||e.getAttribute("crossorigin")!==(u.crossOrigin==null?null:u.crossOrigin)||e.getAttribute("title")!==(u.title==null?null:u.title))break;return e;case"style":if(e.hasAttribute("data-precedence"))break;return e;case"script":if(f=e.getAttribute("src"),(f!==(u.src==null?null:u.src)||e.getAttribute("type")!==(u.type==null?null:u.type)||e.getAttribute("crossorigin")!==(u.crossOrigin==null?null:u.crossOrigin))&&f&&e.hasAttribute("async")&&!e.hasAttribute("itemprop"))break;return e;default:return e}}else if(t==="input"&&e.type==="hidden"){var f=u.name==null?null:""+u.name;if(u.type==="hidden"&&e.getAttribute("name")===f)return e}else return e;if(e=ae(e.nextSibling),e===null)break}return null}function B5(e,t,i){if(t==="")return null;for(;e.nodeType!==3;)if((e.nodeType!==1||e.nodeName!=="INPUT"||e.type!=="hidden")&&!i||(e=ae(e.nextSibling),e===null))return null;return e}function ae(e){for(;e!=null;e=e.nextSibling){var t=e.nodeType;if(t===1||t===3)break;if(t===8){if(t=e.data,t==="$"||t==="$!"||t==="$?"||t==="F!"||t==="F")break;if(t==="/$")return null}}return e}function _9(e){e=e.previousSibling;for(var t=0;e;){if(e.nodeType===8){var i=e.data;if(i==="$"||i==="$!"||i==="$?"){if(t===0)return e;t--}else i==="/$"&&t++}e=e.previousSibling}return null}function w9(e,t,i){switch(t=Zi(i),e){case"html":if(e=t.documentElement,!e)throw Error(l(452));return e;case"head":if(e=t.head,!e)throw Error(l(453));return e;case"body":if(e=t.body,!e)throw Error(l(454));return e;default:throw Error(l(451))}}var Y3=new Map,x9=new Set;function Ki(e){return typeof e.getRootNode=="function"?e.getRootNode():e.ownerDocument}var je=a1.d;a1.d={f:q5,r:H5,D:V5,C:F5,L:$5,m:P5,X:Q5,S:Y5,M:X5};function q5(){var e=je.f(),t=Fi();return e||t}function H5(e){var t=we(e);t!==null&&t.tag===5&&t.type==="form"?Gs(t):je.r(e)}var M0=typeof document>"u"?null:document;function S9(e,t,i){var o=M0;if(o&&typeof t=="string"&&t){var u=h3(t);u='link[rel="'+e+'"][href="'+u+'"]',typeof i=="string"&&(u+='[crossorigin="'+i+'"]'),x9.has(u)||(x9.add(u),e={rel:e,crossOrigin:i,href:t},o.querySelector(u)===null&&(t=o.createElement("link"),K2(t,"link",e),L2(t),o.head.appendChild(t)))}}function V5(e){je.D(e),S9("dns-prefetch",e,null)}function F5(e,t){je.C(e,t),S9("preconnect",e,t)}function $5(e,t,i){je.L(e,t,i);var o=M0;if(o&&e&&t){var u='link[rel="preload"][as="'+h3(t)+'"]';t==="image"&&i&&i.imageSrcSet?(u+='[imagesrcset="'+h3(i.imageSrcSet)+'"]',typeof i.imageSizes=="string"&&(u+='[imagesizes="'+h3(i.imageSizes)+'"]')):u+='[href="'+h3(e)+'"]';var f=u;switch(t){case"style":f=O0(e);break;case"script":f=D0(e)}Y3.has(f)||(e=f1({rel:"preload",href:t==="image"&&i&&i.imageSrcSet?void 0:e,as:t},i),Y3.set(f,e),o.querySelector(u)!==null||t==="style"&&o.querySelector(zn(f))||t==="script"&&o.querySelector(Nn(f))||(t=o.createElement("link"),K2(t,"link",e),L2(t),o.head.appendChild(t)))}}function P5(e,t){je.m(e,t);var i=M0;if(i&&e){var o=t&&typeof t.as=="string"?t.as:"script",u='link[rel="modulepreload"][as="'+h3(o)+'"][href="'+h3(e)+'"]',f=u;switch(o){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":f=D0(e)}if(!Y3.has(f)&&(e=f1({rel:"modulepreload",href:e},t),Y3.set(f,e),i.querySelector(u)===null)){switch(o){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":if(i.querySelector(Nn(f)))return}o=i.createElement("link"),K2(o,"link",e),L2(o),i.head.appendChild(o)}}}function Y5(e,t,i){je.S(e,t,i);var o=M0;if(o&&e){var u=Ve(o).hoistableStyles,f=O0(e);t=t||"default";var g=u.get(f);if(!g){var x={loading:0,preload:null};if(g=o.querySelector(zn(f)))x.loading=5;else{e=f1({rel:"stylesheet",href:e,"data-precedence":t},i),(i=Y3.get(f))&&vo(e,i);var C=g=o.createElement("link");L2(C),K2(C,"link",e),C._p=new Promise(function(L,Y){C.onload=L,C.onerror=Y}),C.addEventListener("load",function(){x.loading|=1}),C.addEventListener("error",function(){x.loading|=2}),x.loading|=4,Ji(g,t,o)}g={type:"stylesheet",instance:g,count:1,state:x},u.set(f,g)}}}function Q5(e,t){je.X(e,t);var i=M0;if(i&&e){var o=Ve(i).hoistableScripts,u=D0(e),f=o.get(u);f||(f=i.querySelector(Nn(u)),f||(e=f1({src:e,async:!0},t),(t=Y3.get(u))&&bo(e,t),f=i.createElement("script"),L2(f),K2(f,"link",e),i.head.appendChild(f)),f={type:"script",instance:f,count:1,state:null},o.set(u,f))}}function X5(e,t){je.M(e,t);var i=M0;if(i&&e){var o=Ve(i).hoistableScripts,u=D0(e),f=o.get(u);f||(f=i.querySelector(Nn(u)),f||(e=f1({src:e,async:!0,type:"module"},t),(t=Y3.get(u))&&bo(e,t),f=i.createElement("script"),L2(f),K2(f,"link",e),i.head.appendChild(f)),f={type:"script",instance:f,count:1,state:null},o.set(u,f))}}function A9(e,t,i,o){var u=(u=W2.current)?Ki(u):null;if(!u)throw Error(l(446));switch(e){case"meta":case"title":return null;case"style":return typeof i.precedence=="string"&&typeof i.href=="string"?(t=O0(i.href),i=Ve(u).hoistableStyles,o=i.get(t),o||(o={type:"style",instance:null,count:0,state:null},i.set(t,o)),o):{type:"void",instance:null,count:0,state:null};case"link":if(i.rel==="stylesheet"&&typeof i.href=="string"&&typeof i.precedence=="string"){e=O0(i.href);var f=Ve(u).hoistableStyles,g=f.get(e);if(g||(u=u.ownerDocument||u,g={type:"stylesheet",instance:null,count:0,state:{loading:0,preload:null}},f.set(e,g),(f=u.querySelector(zn(e)))&&!f._p&&(g.instance=f,g.state.loading=5),Y3.has(e)||(i={rel:"preload",as:"style",href:i.href,crossOrigin:i.crossOrigin,integrity:i.integrity,media:i.media,hrefLang:i.hrefLang,referrerPolicy:i.referrerPolicy},Y3.set(e,i),f||G5(u,e,i,g.state))),t&&o===null)throw Error(l(528,""));return g}if(t&&o!==null)throw Error(l(529,""));return null;case"script":return t=i.async,i=i.src,typeof i=="string"&&t&&typeof t!="function"&&typeof t!="symbol"?(t=D0(i),i=Ve(u).hoistableScripts,o=i.get(t),o||(o={type:"script",instance:null,count:0,state:null},i.set(t,o)),o):{type:"void",instance:null,count:0,state:null};default:throw Error(l(444,e))}}function O0(e){return'href="'+h3(e)+'"'}function zn(e){return'link[rel="stylesheet"]['+e+"]"}function k9(e){return f1({},e,{"data-precedence":e.precedence,precedence:null})}function G5(e,t,i,o){e.querySelector('link[rel="preload"][as="style"]['+t+"]")?o.loading=1:(t=e.createElement("link"),o.preload=t,t.addEventListener("load",function(){return o.loading|=1}),t.addEventListener("error",function(){return o.loading|=2}),K2(t,"link",i),L2(t),e.head.appendChild(t))}function D0(e){return'[src="'+h3(e)+'"]'}function Nn(e){return"script[async]"+e}function E9(e,t,i){if(t.count++,t.instance===null)switch(t.type){case"style":var o=e.querySelector('style[data-href~="'+h3(i.href)+'"]');if(o)return t.instance=o,L2(o),o;var u=f1({},i,{"data-href":i.href,"data-precedence":i.precedence,href:null,precedence:null});return o=(e.ownerDocument||e).createElement("style"),L2(o),K2(o,"style",u),Ji(o,i.precedence,e),t.instance=o;case"stylesheet":u=O0(i.href);var f=e.querySelector(zn(u));if(f)return t.state.loading|=4,t.instance=f,L2(f),f;o=k9(i),(u=Y3.get(u))&&vo(o,u),f=(e.ownerDocument||e).createElement("link"),L2(f);var g=f;return g._p=new Promise(function(x,C){g.onload=x,g.onerror=C}),K2(f,"link",o),t.state.loading|=4,Ji(f,i.precedence,e),t.instance=f;case"script":return f=D0(i.src),(u=e.querySelector(Nn(f)))?(t.instance=u,L2(u),u):(o=i,(u=Y3.get(f))&&(o=f1({},i),bo(o,u)),e=e.ownerDocument||e,u=e.createElement("script"),L2(u),K2(u,"link",o),e.head.appendChild(u),t.instance=u);case"void":return null;default:throw Error(l(443,t.type))}else t.type==="stylesheet"&&(t.state.loading&4)===0&&(o=t.instance,t.state.loading|=4,Ji(o,i.precedence,e));return t.instance}function Ji(e,t,i){for(var o=i.querySelectorAll('link[rel="stylesheet"][data-precedence],style[data-precedence]'),u=o.length?o[o.length-1]:null,f=u,g=0;g<o.length;g++){var x=o[g];if(x.dataset.precedence===t)f=x;else if(f!==u)break}f?f.parentNode.insertBefore(e,f.nextSibling):(t=i.nodeType===9?i.head:i,t.insertBefore(e,t.firstChild))}function vo(e,t){e.crossOrigin==null&&(e.crossOrigin=t.crossOrigin),e.referrerPolicy==null&&(e.referrerPolicy=t.referrerPolicy),e.title==null&&(e.title=t.title)}function bo(e,t){e.crossOrigin==null&&(e.crossOrigin=t.crossOrigin),e.referrerPolicy==null&&(e.referrerPolicy=t.referrerPolicy),e.integrity==null&&(e.integrity=t.integrity)}var Wi=null;function T9(e,t,i){if(Wi===null){var o=new Map,u=Wi=new Map;u.set(i,o)}else u=Wi,o=u.get(i),o||(o=new Map,u.set(i,o));if(o.has(e))return o;for(o.set(e,null),i=i.getElementsByTagName(e),u=0;u<i.length;u++){var f=i[u];if(!(f[gt]||f[D2]||e==="link"&&f.getAttribute("rel")==="stylesheet")&&f.namespaceURI!=="http://www.w3.org/2000/svg"){var g=f.getAttribute(t)||"";g=e+g;var x=o.get(g);x?x.push(f):o.set(g,[f])}}return o}function C9(e,t,i){e=e.ownerDocument||e,e.head.insertBefore(i,t==="title"?e.querySelector("head > title"):null)}function Z5(e,t,i){if(i===1||t.itemProp!=null)return!1;switch(e){case"meta":case"title":return!0;case"style":if(typeof t.precedence!="string"||typeof t.href!="string"||t.href==="")break;return!0;case"link":if(typeof t.rel!="string"||typeof t.href!="string"||t.href===""||t.onLoad||t.onError)break;switch(t.rel){case"stylesheet":return e=t.disabled,typeof t.precedence=="string"&&e==null;default:return!0}case"script":if(t.async&&typeof t.async!="function"&&typeof t.async!="symbol"&&!t.onLoad&&!t.onError&&t.src&&typeof t.src=="string")return!0}return!1}function M9(e){return!(e.type==="stylesheet"&&(e.state.loading&3)===0)}var In=null;function K5(){}function J5(e,t,i){if(In===null)throw Error(l(475));var o=In;if(t.type==="stylesheet"&&(typeof i.media!="string"||matchMedia(i.media).matches!==!1)&&(t.state.loading&4)===0){if(t.instance===null){var u=O0(i.href),f=e.querySelector(zn(u));if(f){e=f._p,e!==null&&typeof e=="object"&&typeof e.then=="function"&&(o.count++,o=ea.bind(o),e.then(o,o)),t.state.loading|=4,t.instance=f,L2(f);return}f=e.ownerDocument||e,i=k9(i),(u=Y3.get(u))&&vo(i,u),f=f.createElement("link"),L2(f);var g=f;g._p=new Promise(function(x,C){g.onload=x,g.onerror=C}),K2(f,"link",i),t.instance=f}o.stylesheets===null&&(o.stylesheets=new Map),o.stylesheets.set(t,e),(e=t.state.preload)&&(t.state.loading&3)===0&&(o.count++,t=ea.bind(o),e.addEventListener("load",t),e.addEventListener("error",t))}}function W5(){if(In===null)throw Error(l(475));var e=In;return e.stylesheets&&e.count===0&&_o(e,e.stylesheets),0<e.count?function(t){var i=setTimeout(function(){if(e.stylesheets&&_o(e,e.stylesheets),e.unsuspend){var o=e.unsuspend;e.unsuspend=null,o()}},6e4);return e.unsuspend=t,function(){e.unsuspend=null,clearTimeout(i)}}:null}function ea(){if(this.count--,this.count===0){if(this.stylesheets)_o(this,this.stylesheets);else if(this.unsuspend){var e=this.unsuspend;this.unsuspend=null,e()}}}var ta=null;function _o(e,t){e.stylesheets=null,e.unsuspend!==null&&(e.count++,ta=new Map,t.forEach(ef,e),ta=null,ea.call(e))}function ef(e,t){if(!(t.state.loading&4)){var i=ta.get(e);if(i)var o=i.get(null);else{i=new Map,ta.set(e,i);for(var u=e.querySelectorAll("link[data-precedence],style[data-precedence]"),f=0;f<u.length;f++){var g=u[f];(g.nodeName==="LINK"||g.getAttribute("media")!=="not all")&&(i.set(g.dataset.precedence,g),o=g)}o&&i.set(null,o)}u=t.instance,g=u.getAttribute("data-precedence"),f=i.get(g)||o,f===o&&i.set(null,u),i.set(g,u),this.count++,o=ea.bind(this),u.addEventListener("load",o),u.addEventListener("error",o),f?f.parentNode.insertBefore(u,f.nextSibling):(e=e.nodeType===9?e.head:e,e.insertBefore(u,e.firstChild)),t.state.loading|=4}}var jn={$$typeof:S,Provider:null,Consumer:null,_currentValue:E1,_currentValue2:E1,_threadCount:0};function tf(e,t,i,o,u,f,g,x){this.tag=1,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=Xt(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.finishedLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Xt(0),this.hiddenUpdates=Xt(null),this.identifierPrefix=o,this.onUncaughtError=u,this.onCaughtError=f,this.onRecoverableError=g,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=x,this.incompleteTransitions=new Map}function O9(e,t,i,o,u,f,g,x,C,L,Y,K){return e=new tf(e,t,i,g,x,C,L,K),t=1,f===!0&&(t|=24),f=$3(3,null,null,t),e.current=f,f.stateNode=e,t=Ka(),t.refCount++,e.pooledCache=t,t.refCount++,f.memoizedState={element:o,isDehydrated:i,cache:t},Dr(f),e}function D9(e){return e?(e=u0,e):u0}function L9(e,t,i,o,u,f){u=D9(u),o.context===null?o.context=u:o.pendingContext=u,o=Je(t),o.payload={element:i},f=f===void 0?null:f,f!==null&&(o.callback=f),i=We(e,o,t),i!==null&&(d3(i,e,t),wn(i,e,t))}function R9(e,t){if(e=e.memoizedState,e!==null&&e.dehydrated!==null){var i=e.retryLane;e.retryLane=i!==0&&i<t?i:t}}function wo(e,t){R9(e,t),(e=e.alternate)&&R9(e,t)}function U9(e){if(e.tag===13){var t=Pe(e,67108864);t!==null&&d3(t,e,67108864),wo(e,67108864)}}var na=!0;function nf(e,t,i,o){var u=t1.T;t1.T=null;var f=a1.p;try{a1.p=2,xo(e,t,i,o)}finally{a1.p=f,t1.T=u}}function af(e,t,i,o){var u=t1.T;t1.T=null;var f=a1.p;try{a1.p=8,xo(e,t,i,o)}finally{a1.p=f,t1.T=u}}function xo(e,t,i,o){if(na){var u=So(o);if(u===null)uo(e,t,o,ia,i),N9(e,o);else if(of(u,e,t,i,o))o.stopPropagation();else if(N9(e,o),t&4&&-1<rf.indexOf(e)){for(;u!==null;){var f=we(u);if(f!==null)switch(f.tag){case 3:if(f=f.stateNode,f.current.memoizedState.isDehydrated){var g=x3(f.pendingLanes);if(g!==0){var x=f;for(x.pendingLanes|=2,x.entangledLanes|=2;g;){var C=1<<31-x2(g);x.entanglements[1]|=C,g&=~C}pe(f),(_2&6)===0&&(qi=e3()+500,Ln(0))}}break;case 13:x=Pe(f,2),x!==null&&d3(x,f,2),Fi(),wo(f,2)}if(f=So(o),f===null&&uo(e,t,o,ia,i),f===u)break;u=f}u!==null&&o.stopPropagation()}else uo(e,t,o,null,i)}}function So(e){return e=J0(e),Ao(e)}var ia=null;function Ao(e){if(ia=null,e=_e(e),e!==null){var t=P(e);if(t===null)e=null;else{var i=t.tag;if(i===13){if(e=x1(t),e!==null)return e;e=null}else if(i===3){if(t.stateNode.current.memoizedState.isDehydrated)return t.tag===3?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null)}}return ia=e,null}function z9(e){switch(e){case"beforetoggle":case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"toggle":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 2;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 8;case"message":switch(ht()){case F:return 2;case r1:return 8;case S1:case B1:return 32;case G1:return 268435456;default:return 32}default:return 32}}var ko=!1,ot=null,lt=null,st=null,Bn=new Map,qn=new Map,ut=[],rf="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset".split(" ");function N9(e,t){switch(e){case"focusin":case"focusout":ot=null;break;case"dragenter":case"dragleave":lt=null;break;case"mouseover":case"mouseout":st=null;break;case"pointerover":case"pointerout":Bn.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":qn.delete(t.pointerId)}}function Hn(e,t,i,o,u,f){return e===null||e.nativeEvent!==f?(e={blockedOn:t,domEventName:i,eventSystemFlags:o,nativeEvent:f,targetContainers:[u]},t!==null&&(t=we(t),t!==null&&U9(t)),e):(e.eventSystemFlags|=o,t=e.targetContainers,u!==null&&t.indexOf(u)===-1&&t.push(u),e)}function of(e,t,i,o,u){switch(t){case"focusin":return ot=Hn(ot,e,t,i,o,u),!0;case"dragenter":return lt=Hn(lt,e,t,i,o,u),!0;case"mouseover":return st=Hn(st,e,t,i,o,u),!0;case"pointerover":var f=u.pointerId;return Bn.set(f,Hn(Bn.get(f)||null,e,t,i,o,u)),!0;case"gotpointercapture":return f=u.pointerId,qn.set(f,Hn(qn.get(f)||null,e,t,i,o,u)),!0}return!1}function I9(e){var t=_e(e.target);if(t!==null){var i=P(t);if(i!==null){if(t=i.tag,t===13){if(t=x1(i),t!==null){e.blockedOn=t,F0(e.priority,function(){if(i.tag===13){var o=O3(),u=Pe(i,o);u!==null&&d3(u,i,o),wo(i,o)}});return}}else if(t===3&&i.stateNode.current.memoizedState.isDehydrated){e.blockedOn=i.tag===3?i.stateNode.containerInfo:null;return}}}e.blockedOn=null}function aa(e){if(e.blockedOn!==null)return!1;for(var t=e.targetContainers;0<t.length;){var i=So(e.nativeEvent);if(i===null){i=e.nativeEvent;var o=new i.constructor(i.type,i);K0=o,i.target.dispatchEvent(o),K0=null}else return t=we(i),t!==null&&U9(t),e.blockedOn=i,!1;t.shift()}return!0}function j9(e,t,i){aa(e)&&i.delete(t)}function lf(){ko=!1,ot!==null&&aa(ot)&&(ot=null),lt!==null&&aa(lt)&&(lt=null),st!==null&&aa(st)&&(st=null),Bn.forEach(j9),qn.forEach(j9)}function ra(e,t){e.blockedOn===t&&(e.blockedOn=null,ko||(ko=!0,n.unstable_scheduleCallback(n.unstable_NormalPriority,lf)))}var oa=null;function B9(e){oa!==e&&(oa=e,n.unstable_scheduleCallback(n.unstable_NormalPriority,function(){oa===e&&(oa=null);for(var t=0;t<e.length;t+=3){var i=e[t],o=e[t+1],u=e[t+2];if(typeof o!="function"){if(Ao(o||i)===null)continue;break}var f=we(i);f!==null&&(e.splice(t,3),t-=3,pr(f,{pending:!0,data:u,method:i.method,action:o},o,u))}}))}function Vn(e){function t(C){return ra(C,e)}ot!==null&&ra(ot,e),lt!==null&&ra(lt,e),st!==null&&ra(st,e),Bn.forEach(t),qn.forEach(t);for(var i=0;i<ut.length;i++){var o=ut[i];o.blockedOn===e&&(o.blockedOn=null)}for(;0<ut.length&&(i=ut[0],i.blockedOn===null);)I9(i),i.blockedOn===null&&ut.shift();if(i=(e.ownerDocument||e).$$reactFormReplay,i!=null)for(o=0;o<i.length;o+=3){var u=i[o],f=i[o+1],g=u[F2]||null;if(typeof f=="function")g||B9(i);else if(g){var x=null;if(f&&f.hasAttribute("formAction")){if(u=f,g=f[F2]||null)x=g.formAction;else if(Ao(u)!==null)continue}else x=g.action;typeof x=="function"?i[o+1]=x:(i.splice(o,3),o-=3),B9(i)}}}function Eo(e){this._internalRoot=e}la.prototype.render=Eo.prototype.render=function(e){var t=this._internalRoot;if(t===null)throw Error(l(409));var i=t.current,o=O3();L9(i,o,e,t,null,null)},la.prototype.unmount=Eo.prototype.unmount=function(){var e=this._internalRoot;if(e!==null){this._internalRoot=null;var t=e.containerInfo;e.tag===0&&E0(),L9(e.current,2,null,e,null,null),Fi(),t[K3]=null}};function la(e){this._internalRoot=e}la.prototype.unstable_scheduleHydration=function(e){if(e){var t=V0();e={blockedOn:null,target:e,priority:t};for(var i=0;i<ut.length&&t!==0&&t<ut[i].priority;i++);ut.splice(i,0,e),i===0&&I9(e)}};var q9=a.version;if(q9!=="19.0.0")throw Error(l(527,q9,"19.0.0"));a1.findDOMNode=function(e){var t=e._reactInternals;if(t===void 0)throw typeof e.render=="function"?Error(l(188)):(e=Object.keys(e).join(","),Error(l(268,e)));return e=Z(t),e=e!==null?h1(e):null,e=e===null?null:e.stateNode,e};var sf={bundleType:0,version:"19.0.0",rendererPackageName:"react-dom",currentDispatcherRef:t1,findFiberByHostInstance:_e,reconcilerVersion:"19.0.0"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var sa=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!sa.isDisabled&&sa.supportsFiber)try{O2=sa.inject(sf),m2=sa}catch{}}return $n.createRoot=function(e,t){if(!s(e))throw Error(l(299));var i=!1,o="",u=i4,f=a4,g=r4,x=null;return t!=null&&(t.unstable_strictMode===!0&&(i=!0),t.identifierPrefix!==void 0&&(o=t.identifierPrefix),t.onUncaughtError!==void 0&&(u=t.onUncaughtError),t.onCaughtError!==void 0&&(f=t.onCaughtError),t.onRecoverableError!==void 0&&(g=t.onRecoverableError),t.unstable_transitionCallbacks!==void 0&&(x=t.unstable_transitionCallbacks)),t=O9(e,1,!1,null,null,i,o,u,f,g,x,null),e[K3]=t.current,so(e.nodeType===8?e.parentNode:e),new Eo(t)},$n.hydrateRoot=function(e,t,i){if(!s(e))throw Error(l(299));var o=!1,u="",f=i4,g=a4,x=r4,C=null,L=null;return i!=null&&(i.unstable_strictMode===!0&&(o=!0),i.identifierPrefix!==void 0&&(u=i.identifierPrefix),i.onUncaughtError!==void 0&&(f=i.onUncaughtError),i.onCaughtError!==void 0&&(g=i.onCaughtError),i.onRecoverableError!==void 0&&(x=i.onRecoverableError),i.unstable_transitionCallbacks!==void 0&&(C=i.unstable_transitionCallbacks),i.formState!==void 0&&(L=i.formState)),t=O9(e,1,!0,t,i??null,o,u,f,g,x,C,L),t.context=D9(null),i=t.current,o=O3(),u=Je(o),u.callback=null,We(i,u,o),t.current.lanes=o,He(t,o),pe(t),e[K3]=t.current,so(e),new la(t)},$n.version="19.0.0",$n}var Z9;function _f(){if(Z9)return Co.exports;Z9=1;function n(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(n)}catch(a){console.error(a)}}return n(),Co.exports=bf(),Co.exports}var wf=_f();const xf=cl(wf),Sf="/chef-ai/assets/chef-B1BsgsoC.png";function Af(){return T1.jsxs("header",{children:[T1.jsx("img",{className:"header-icon",src:Sf,alt:"Chef icon"}),T1.jsx("h1",{className:"header-name",children:"My Robot Chef"})]})}var d2=fl();const kf={transformers:["audio-classification","automatic-speech-recognition","depth-estimation","document-question-answering","feature-extraction","fill-mask","image-classification","image-feature-extraction","image-segmentation","image-to-image","image-to-text","image-text-to-text","mask-generation","object-detection","question-answering","summarization","table-question-answering","text2text-generation","text-classification","text-generation","text-to-audio","text-to-speech","token-classification","translation","video-classification","visual-question-answering","zero-shot-classification","zero-shot-image-classification","zero-shot-object-detection"]},dl={"text-classification":{name:"Text Classification",subtasks:[{type:"acceptability-classification",name:"Acceptability Classification"},{type:"entity-linking-classification",name:"Entity Linking Classification"},{type:"fact-checking",name:"Fact Checking"},{type:"intent-classification",name:"Intent Classification"},{type:"language-identification",name:"Language Identification"},{type:"multi-class-classification",name:"Multi Class Classification"},{type:"multi-label-classification",name:"Multi Label Classification"},{type:"multi-input-text-classification",name:"Multi-input Text Classification"},{type:"natural-language-inference",name:"Natural Language Inference"},{type:"semantic-similarity-classification",name:"Semantic Similarity Classification"},{type:"sentiment-classification",name:"Sentiment Classification"},{type:"topic-classification",name:"Topic Classification"},{type:"semantic-similarity-scoring",name:"Semantic Similarity Scoring"},{type:"sentiment-scoring",name:"Sentiment Scoring"},{type:"sentiment-analysis",name:"Sentiment Analysis"},{type:"hate-speech-detection",name:"Hate Speech Detection"},{type:"text-scoring",name:"Text Scoring"}],modality:"nlp",color:"orange"},"token-classification":{name:"Token Classification",subtasks:[{type:"named-entity-recognition",name:"Named Entity Recognition"},{type:"part-of-speech",name:"Part of Speech"},{type:"parsing",name:"Parsing"},{type:"lemmatization",name:"Lemmatization"},{type:"word-sense-disambiguation",name:"Word Sense Disambiguation"},{type:"coreference-resolution",name:"Coreference-resolution"}],modality:"nlp",color:"blue"},"table-question-answering":{name:"Table Question Answering",modality:"nlp",color:"green"},"question-answering":{name:"Question Answering",subtasks:[{type:"extractive-qa",name:"Extractive QA"},{type:"open-domain-qa",name:"Open Domain QA"},{type:"closed-domain-qa",name:"Closed Domain QA"}],modality:"nlp",color:"blue"},"zero-shot-classification":{name:"Zero-Shot Classification",modality:"nlp",color:"yellow"},translation:{name:"Translation",modality:"nlp",color:"green"},summarization:{name:"Summarization",subtasks:[{type:"news-articles-summarization",name:"News Articles Summarization"},{type:"news-articles-headline-generation",name:"News Articles Headline Generation"}],modality:"nlp",color:"indigo"},"feature-extraction":{name:"Feature Extraction",modality:"nlp",color:"red"},"text-generation":{name:"Text Generation",subtasks:[{type:"dialogue-modeling",name:"Dialogue Modeling"},{type:"dialogue-generation",name:"Dialogue Generation"},{type:"conversational",name:"Conversational"},{type:"language-modeling",name:"Language Modeling"}],modality:"nlp",color:"indigo"},"text2text-generation":{name:"Text2Text Generation",subtasks:[{type:"text-simplification",name:"Text simplification"},{type:"explanation-generation",name:"Explanation Generation"},{type:"abstractive-qa",name:"Abstractive QA"},{type:"open-domain-abstractive-qa",name:"Open Domain Abstractive QA"},{type:"closed-domain-qa",name:"Closed Domain QA"},{type:"open-book-qa",name:"Open Book QA"},{type:"closed-book-qa",name:"Closed Book QA"}],modality:"nlp",color:"indigo"},"fill-mask":{name:"Fill-Mask",subtasks:[{type:"slot-filling",name:"Slot Filling"},{type:"masked-language-modeling",name:"Masked Language Modeling"}],modality:"nlp",color:"red"},"sentence-similarity":{name:"Sentence Similarity",modality:"nlp",color:"yellow"},"text-to-speech":{name:"Text-to-Speech",modality:"audio",color:"yellow"},"text-to-audio":{name:"Text-to-Audio",modality:"audio",color:"yellow"},"automatic-speech-recognition":{name:"Automatic Speech Recognition",modality:"audio",color:"yellow"},"audio-to-audio":{name:"Audio-to-Audio",modality:"audio",color:"blue"},"audio-classification":{name:"Audio Classification",subtasks:[{type:"keyword-spotting",name:"Keyword Spotting"},{type:"speaker-identification",name:"Speaker Identification"},{type:"audio-intent-classification",name:"Audio Intent Classification"},{type:"audio-emotion-recognition",name:"Audio Emotion Recognition"},{type:"audio-language-identification",name:"Audio Language Identification"}],modality:"audio",color:"green"},"audio-text-to-text":{name:"Audio-Text-to-Text",modality:"multimodal",color:"red",hideInDatasets:!0},"voice-activity-detection":{name:"Voice Activity Detection",modality:"audio",color:"red"},"depth-estimation":{name:"Depth Estimation",modality:"cv",color:"yellow"},"image-classification":{name:"Image Classification",subtasks:[{type:"multi-label-image-classification",name:"Multi Label Image Classification"},{type:"multi-class-image-classification",name:"Multi Class Image Classification"}],modality:"cv",color:"blue"},"object-detection":{name:"Object Detection",subtasks:[{type:"face-detection",name:"Face Detection"},{type:"vehicle-detection",name:"Vehicle Detection"}],modality:"cv",color:"yellow"},"image-segmentation":{name:"Image Segmentation",subtasks:[{type:"instance-segmentation",name:"Instance Segmentation"},{type:"semantic-segmentation",name:"Semantic Segmentation"},{type:"panoptic-segmentation",name:"Panoptic Segmentation"}],modality:"cv",color:"green"},"text-to-image":{name:"Text-to-Image",modality:"cv",color:"yellow"},"image-to-text":{name:"Image-to-Text",subtasks:[{type:"image-captioning",name:"Image Captioning"}],modality:"cv",color:"red"},"image-to-image":{name:"Image-to-Image",subtasks:[{type:"image-inpainting",name:"Image Inpainting"},{type:"image-colorization",name:"Image Colorization"},{type:"super-resolution",name:"Super Resolution"}],modality:"cv",color:"indigo"},"image-to-video":{name:"Image-to-Video",modality:"cv",color:"indigo"},"unconditional-image-generation":{name:"Unconditional Image Generation",modality:"cv",color:"green"},"video-classification":{name:"Video Classification",modality:"cv",color:"blue"},"reinforcement-learning":{name:"Reinforcement Learning",modality:"rl",color:"red"},robotics:{name:"Robotics",modality:"rl",subtasks:[{type:"grasping",name:"Grasping"},{type:"task-planning",name:"Task Planning"}],color:"blue"},"tabular-classification":{name:"Tabular Classification",modality:"tabular",subtasks:[{type:"tabular-multi-class-classification",name:"Tabular Multi Class Classification"},{type:"tabular-multi-label-classification",name:"Tabular Multi Label Classification"}],color:"blue"},"tabular-regression":{name:"Tabular Regression",modality:"tabular",subtasks:[{type:"tabular-single-column-regression",name:"Tabular Single Column Regression"}],color:"blue"},"tabular-to-text":{name:"Tabular to Text",modality:"tabular",subtasks:[{type:"rdf-to-text",name:"RDF to text"}],color:"blue",hideInModels:!0},"table-to-text":{name:"Table to Text",modality:"nlp",color:"blue",hideInModels:!0},"multiple-choice":{name:"Multiple Choice",subtasks:[{type:"multiple-choice-qa",name:"Multiple Choice QA"},{type:"multiple-choice-coreference-resolution",name:"Multiple Choice Coreference Resolution"}],modality:"nlp",color:"blue",hideInModels:!0},"text-ranking":{name:"Text Ranking",modality:"nlp",color:"red"},"text-retrieval":{name:"Text Retrieval",subtasks:[{type:"document-retrieval",name:"Document Retrieval"},{type:"utterance-retrieval",name:"Utterance Retrieval"},{type:"entity-linking-retrieval",name:"Entity Linking Retrieval"},{type:"fact-checking-retrieval",name:"Fact Checking Retrieval"}],modality:"nlp",color:"indigo",hideInModels:!0},"time-series-forecasting":{name:"Time Series Forecasting",modality:"tabular",subtasks:[{type:"univariate-time-series-forecasting",name:"Univariate Time Series Forecasting"},{type:"multivariate-time-series-forecasting",name:"Multivariate Time Series Forecasting"}],color:"blue"},"text-to-video":{name:"Text-to-Video",modality:"cv",color:"green"},"image-text-to-text":{name:"Image-Text-to-Text",modality:"multimodal",color:"red",hideInDatasets:!0},"visual-question-answering":{name:"Visual Question Answering",subtasks:[{type:"visual-question-answering",name:"Visual Question Answering"}],modality:"multimodal",color:"red"},"document-question-answering":{name:"Document Question Answering",subtasks:[{type:"document-question-answering",name:"Document Question Answering"}],modality:"multimodal",color:"blue",hideInDatasets:!0},"zero-shot-image-classification":{name:"Zero-Shot Image Classification",modality:"cv",color:"yellow"},"graph-ml":{name:"Graph Machine Learning",modality:"other",color:"green"},"mask-generation":{name:"Mask Generation",modality:"cv",color:"indigo"},"zero-shot-object-detection":{name:"Zero-Shot Object Detection",modality:"cv",color:"yellow"},"text-to-3d":{name:"Text-to-3D",modality:"cv",color:"yellow"},"image-to-3d":{name:"Image-to-3D",modality:"cv",color:"green"},"image-feature-extraction":{name:"Image Feature Extraction",modality:"cv",color:"indigo"},"video-text-to-text":{name:"Video-Text-to-Text",modality:"multimodal",color:"blue",hideInDatasets:!1},"keypoint-detection":{name:"Keypoint Detection",subtasks:[{type:"pose-estimation",name:"Pose Estimation"}],modality:"cv",color:"red",hideInDatasets:!0},"visual-document-retrieval":{name:"Visual Document Retrieval",modality:"multimodal",color:"yellow",hideInDatasets:!0},"any-to-any":{name:"Any-to-Any",modality:"multimodal",color:"yellow",hideInDatasets:!0},other:{name:"Other",modality:"other",color:"blue",hideInModels:!0,hideInDatasets:!0}},Ef=Object.keys(dl);Object.values(dl).flatMap(n=>"subtasks"in n?n.subtasks:[]).map(n=>n.type);new Set(Ef);const Tf={datasets:[{description:"A benchmark of 10 different audio tasks.",id:"s3prl/superb"},{description:"A dataset of YouTube clips and their sound categories.",id:"agkphysics/AudioSet"}],demo:{inputs:[{filename:"audio.wav",type:"audio"}],outputs:[{data:[{label:"Up",score:.2},{label:"Down",score:.8}],type:"chart"}]},metrics:[{description:"",id:"accuracy"},{description:"",id:"recall"},{description:"",id:"precision"},{description:"",id:"f1"}],models:[{description:"An easy-to-use model for command recognition.",id:"speechbrain/google_speech_command_xvector"},{description:"An emotion recognition model.",id:"ehcalabres/wav2vec2-lg-xlsr-en-speech-emotion-recognition"},{description:"A language identification model.",id:"facebook/mms-lid-126"}],spaces:[{description:"An application that can classify music into different genre.",id:"kurianbenoy/audioclassification"}],summary:"Audio classification is the task of assigning a label or class to a given audio. It can be used for recognizing which command a user is giving or the emotion of a statement, as well as identifying a speaker.",widgetModels:["MIT/ast-finetuned-audioset-10-10-0.4593"],youtubeId:"KWwzcmG98Ds"},Cf={datasets:[{description:"512-element X-vector embeddings of speakers from CMU ARCTIC dataset.",id:"Matthijs/cmu-arctic-xvectors"}],demo:{inputs:[{filename:"input.wav",type:"audio"}],outputs:[{filename:"label-0.wav",type:"audio"},{filename:"label-1.wav",type:"audio"}]},metrics:[{description:"The Signal-to-Noise ratio is the relationship between the target signal level and the background noise level. It is calculated as the logarithm of the target signal divided by the background noise, in decibels.",id:"snri"},{description:"The Signal-to-Distortion ratio is the relationship between the target signal and the sum of noise, interference, and artifact errors",id:"sdri"}],models:[{description:"A speech enhancement model.",id:"ResembleAI/resemble-enhance"},{description:"A model that can change the voice in a speech recording.",id:"microsoft/speecht5_vc"}],spaces:[{description:"An application for speech separation.",id:"younver/speechbrain-speech-separation"},{description:"An application for audio style transfer.",id:"nakas/audio-diffusion_style_transfer"}],summary:"Audio-to-Audio is a family of tasks in which the input is an audio and the output is one or multiple generated audios. Some example tasks are speech enhancement and source separation.",widgetModels:["speechbrain/sepformer-wham"],youtubeId:"iohj7nCCYoM"},Mf={datasets:[{description:"31,175 hours of multilingual audio-text dataset in 108 languages.",id:"mozilla-foundation/common_voice_17_0"},{description:"Multilingual and diverse audio dataset with 101k hours of audio.",id:"amphion/Emilia-Dataset"},{description:"A dataset with 44.6k hours of English speaker data and 6k hours of other language speakers.",id:"parler-tts/mls_eng"},{description:"A multilingual audio dataset with 370K hours of audio.",id:"espnet/yodas"}],demo:{inputs:[{filename:"input.flac",type:"audio"}],outputs:[{label:"Transcript",content:"Going along slushy country roads and speaking to damp audiences in...",type:"text"}]},metrics:[{description:"",id:"wer"},{description:"",id:"cer"}],models:[{description:"A powerful ASR model by OpenAI.",id:"openai/whisper-large-v3"},{description:"A good generic speech model by MetaAI for fine-tuning.",id:"facebook/w2v-bert-2.0"},{description:"An end-to-end model that performs ASR and Speech Translation by MetaAI.",id:"facebook/seamless-m4t-v2-large"},{description:"A powerful multilingual ASR and Speech Translation model by Nvidia.",id:"nvidia/canary-1b"},{description:"Powerful speaker diarization model.",id:"pyannote/speaker-diarization-3.1"}],spaces:[{description:"A powerful general-purpose speech recognition application.",id:"hf-audio/whisper-large-v3"},{description:"Latest ASR model from Useful Sensors.",id:"mrfakename/Moonshinex"},{description:"A high quality speech and text translation model by Meta.",id:"facebook/seamless_m4t"},{description:"A powerful multilingual ASR and Speech Translation model by Nvidia",id:"nvidia/canary-1b"}],summary:"Automatic Speech Recognition (ASR), also known as Speech to Text (STT), is the task of transcribing a given audio to text. It has many applications, such as voice user interfaces.",widgetModels:["openai/whisper-large-v3"],youtubeId:"TksaY_FDgnk"},Of={datasets:[{description:"Largest document understanding dataset.",id:"HuggingFaceM4/Docmatix"},{description:"Dataset from the 2020 DocVQA challenge. The documents are taken from the UCSF Industry Documents Library.",id:"eliolio/docvqa"}],demo:{inputs:[{label:"Question",content:"What is the idea behind the consumer relations efficiency team?",type:"text"},{filename:"document-question-answering-input.png",type:"img"}],outputs:[{label:"Answer",content:"Balance cost efficiency with quality customer service",type:"text"}]},metrics:[{description:"The evaluation metric for the DocVQA challenge is the Average Normalized Levenshtein Similarity (ANLS). This metric is flexible to character regognition errors and compares the predicted answer with the ground truth answer.",id:"anls"},{description:"Exact Match is a metric based on the strict character match of the predicted answer and the right answer. For answers predicted correctly, the Exact Match will be 1. Even if only one character is different, Exact Match will be 0",id:"exact-match"}],models:[{description:"A robust document question answering model.",id:"impira/layoutlm-document-qa"},{description:"A document question answering model specialized in invoices.",id:"impira/layoutlm-invoices"},{description:"A special model for OCR-free document question answering.",id:"microsoft/udop-large"},{description:"A powerful model for document question answering.",id:"google/pix2struct-docvqa-large"}],spaces:[{description:"A robust document question answering application.",id:"impira/docquery"},{description:"An application that can answer questions from invoices.",id:"impira/invoices"},{description:"An application to compare different document question answering models.",id:"merve/compare_docvqa_models"}],summary:"Document Question Answering (also known as Document Visual Question Answering) is the task of answering questions on document images. Document question answering models take a (document, question) pair as input and return an answer in natural language. Models usually rely on multi-modal features, combining text, position of words (bounding-boxes) and image.",widgetModels:["impira/layoutlm-invoices"],youtubeId:""},Df={datasets:[{description:"Wikipedia dataset containing cleaned articles of all languages. Can be used to train `feature-extraction` models.",id:"wikipedia"}],demo:{inputs:[{label:"Input",content:"India, officially the Republic of India, is a country in South Asia.",type:"text"}],outputs:[{table:[["Dimension 1","Dimension 2","Dimension 3"],["2.583383083343506","2.757075071334839","0.9023529887199402"],["8.29393482208252","1.1071064472198486","2.03399395942688"],["-0.7754912972450256","-1.647324562072754","-0.6113331913948059"],["0.07087723910808563","1.5942802429199219","1.4610432386398315"]],type:"tabular"}]},metrics:[],models:[{description:"A powerful feature extraction model for natural language processing tasks.",id:"thenlper/gte-large"},{description:"A strong feature extraction model for retrieval.",id:"Alibaba-NLP/gte-Qwen1.5-7B-instruct"}],spaces:[{description:"A leaderboard to rank text feature extraction models based on a benchmark.",id:"mteb/leaderboard"},{description:"A leaderboard to rank best feature extraction models based on human feedback.",id:"mteb/arena"}],summary:"Feature extraction is the task of extracting features learnt in a model.",widgetModels:["facebook/bart-base"]},Lf={datasets:[{description:"A common dataset that is used to train models for many languages.",id:"wikipedia"},{description:"A large English dataset with text crawled from the web.",id:"c4"}],demo:{inputs:[{label:"Input",content:"The <mask> barked at me",type:"text"}],outputs:[{type:"chart",data:[{label:"wolf",score:.487},{label:"dog",score:.061},{label:"cat",score:.058},{label:"fox",score:.047},{label:"squirrel",score:.025}]}]},metrics:[{description:"Cross Entropy is a metric that calculates the difference between two probability distributions. Each probability distribution is the distribution of predicted words",id:"cross_entropy"},{description:"Perplexity is the exponential of the cross-entropy loss. It evaluates the probabilities assigned to the next word by the model. Lower perplexity indicates better performance",id:"perplexity"}],models:[{description:"State-of-the-art masked language model.",id:"answerdotai/ModernBERT-large"},{description:"A multilingual model trained on 100 languages.",id:"FacebookAI/xlm-roberta-base"}],spaces:[],summary:"Masked language modeling is the task of masking some of the words in a sentence and predicting which words should replace those masks. These models are useful when we want to get a statistical understanding of the language in which the model is trained in.",widgetModels:["distilroberta-base"],youtubeId:"mqElG5QJWUg"},Rf={datasets:[{description:"Benchmark dataset used for image classification with images that belong to 100 classes.",id:"cifar100"},{description:"Dataset consisting of images of garments.",id:"fashion_mnist"}],demo:{inputs:[{filename:"image-classification-input.jpeg",type:"img"}],outputs:[{type:"chart",data:[{label:"Egyptian cat",score:.514},{label:"Tabby cat",score:.193},{label:"Tiger cat",score:.068}]}]},metrics:[{description:"",id:"accuracy"},{description:"",id:"recall"},{description:"",id:"precision"},{description:"",id:"f1"}],models:[{description:"A strong image classification model.",id:"google/vit-base-patch16-224"},{description:"A robust image classification model.",id:"facebook/deit-base-distilled-patch16-224"},{description:"A strong image classification model.",id:"facebook/convnext-large-224"}],spaces:[{description:"A leaderboard to evaluate different image classification models.",id:"timm/leaderboard"}],summary:"Image classification is the task of assigning a label or class to an entire image. Images are expected to have only one class for each image. Image classification models take an image as input and return a prediction about which class the image belongs to.",widgetModels:["google/vit-base-patch16-224"],youtubeId:"tjAIM7BOYhw"},Uf={datasets:[{description:"ImageNet-1K is a image classification dataset in which images are used to train image-feature-extraction models.",id:"imagenet-1k"}],demo:{inputs:[{filename:"mask-generation-input.png",type:"img"}],outputs:[{table:[["Dimension 1","Dimension 2","Dimension 3"],["0.21236686408519745","1.0919708013534546","0.8512550592422485"],["0.809657871723175","-0.18544459342956543","-0.7851548194885254"],["1.3103108406066895","-0.2479034662246704","-0.9107287526130676"],["1.8536205291748047","-0.36419737339019775","0.09717650711536407"]],type:"tabular"}]},metrics:[],models:[{description:"A powerful image feature extraction model.",id:"timm/vit_large_patch14_dinov2.lvd142m"},{description:"A strong image feature extraction model.",id:"nvidia/MambaVision-T-1K"},{description:"A robust image feature extraction model.",id:"facebook/dino-vitb16"},{description:"Cutting-edge image feature extraction model.",id:"apple/aimv2-large-patch14-336-distilled"},{description:"Strong image feature extraction model that can be used on images and documents.",id:"OpenGVLab/InternViT-6B-448px-V1-2"}],spaces:[{description:"A leaderboard to evaluate different image-feature-extraction models on classification performances",id:"timm/leaderboard"}],summary:"Image feature extraction is the task of extracting features learnt in a computer vision model.",widgetModels:[]},zf={datasets:[{description:"Synthetic dataset, for image relighting",id:"VIDIT"},{description:"Multiple images of celebrities, used for facial expression translation",id:"huggan/CelebA-faces"},{description:"12M image-caption pairs.",id:"Spawning/PD12M"}],demo:{inputs:[{filename:"image-to-image-input.jpeg",type:"img"}],outputs:[{filename:"image-to-image-output.png",type:"img"}]},isPlaceholder:!1,metrics:[{description:"Peak Signal to Noise Ratio (PSNR) is an approximation of the human perception, considering the ratio of the absolute intensity with respect to the variations. Measured in dB, a high value indicates a high fidelity.",id:"PSNR"},{description:"Structural Similarity Index (SSIM) is a perceptual metric which compares the luminance, contrast and structure of two images. The values of SSIM range between -1 and 1, and higher values indicate closer resemblance to the original image.",id:"SSIM"},{description:"Inception Score (IS) is an analysis of the labels predicted by an image classification model when presented with a sample of the generated images.",id:"IS"}],models:[{description:"An image-to-image model to improve image resolution.",id:"fal/AuraSR-v2"},{description:"A model that increases the resolution of an image.",id:"keras-io/super-resolution"},{description:"A model for applying edits to images through image controls.",id:"Yuanshi/OminiControl"},{description:"A model that generates images based on segments in the input image and the text prompt.",id:"mfidabel/controlnet-segment-anything"},{description:"Strong model for inpainting and outpainting.",id:"black-forest-labs/FLUX.1-Fill-dev"},{description:"Strong model for image editing using depth maps.",id:"black-forest-labs/FLUX.1-Depth-dev-lora"}],spaces:[{description:"Image enhancer application for low light.",id:"keras-io/low-light-image-enhancement"},{description:"Style transfer application.",id:"keras-io/neural-style-transfer"},{description:"An application that generates images based on segment control.",id:"mfidabel/controlnet-segment-anything"},{description:"Image generation application that takes image control and text prompt.",id:"hysts/ControlNet"},{description:"Colorize any image using this app.",id:"ioclab/brightness-controlnet"},{description:"Edit images with instructions.",id:"timbrooks/instruct-pix2pix"}],summary:"Image-to-image is the task of transforming an input image through a variety of possible manipulations and enhancements, such as super-resolution, image inpainting, colorization, and more.",widgetModels:["stabilityai/stable-diffusion-2-inpainting"],youtubeId:""},Nf={datasets:[{description:"Dataset from 12M image-text of Reddit",id:"red_caps"},{description:"Dataset from 3.3M images of Google",id:"datasets/conceptual_captions"}],demo:{inputs:[{filename:"savanna.jpg",type:"img"}],outputs:[{label:"Detailed description",content:"a herd of giraffes and zebras grazing in a field",type:"text"}]},metrics:[],models:[{description:"A robust image captioning model.",id:"Salesforce/blip2-opt-2.7b"},{description:"A powerful and accurate image-to-text model that can also localize concepts in images.",id:"microsoft/kosmos-2-patch14-224"},{description:"A strong optical character recognition model.",id:"facebook/nougat-base"},{description:"A powerful model that lets you have a conversation with the image.",id:"llava-hf/llava-1.5-7b-hf"}],spaces:[{description:"An application that compares various image captioning models.",id:"nielsr/comparing-captioning-models"},{description:"A robust image captioning application.",id:"flax-community/image-captioning"},{description:"An application that transcribes handwritings into text.",id:"nielsr/TrOCR-handwritten"},{description:"An application that can caption images and answer questions about a given image.",id:"Salesforce/BLIP"},{description:"An application that can caption images and answer questions with a conversational agent.",id:"Salesforce/BLIP2"},{description:"An image captioning application that demonstrates the effect of noise on captions.",id:"johko/capdec-image-captioning"}],summary:"Image to text models output a text from a given image. Image captioning or optical character recognition can be considered as the most common applications of image to text.",widgetModels:["Salesforce/blip-image-captioning-large"],youtubeId:""},If={datasets:[{description:"Instructions composed of image and text.",id:"liuhaotian/LLaVA-Instruct-150K"},{description:"Collection of image-text pairs on scientific topics.",id:"DAMO-NLP-SG/multimodal_textbook"},{description:"A collection of datasets made for model fine-tuning.",id:"HuggingFaceM4/the_cauldron"},{description:"Screenshots of websites with their HTML/CSS codes.",id:"HuggingFaceM4/WebSight"}],demo:{inputs:[{filename:"image-text-to-text-input.png",type:"img"},{label:"Text Prompt",content:"Describe the position of the bee in detail.",type:"text"}],outputs:[{label:"Answer",content:"The bee is sitting on a pink flower, surrounded by other flowers. The bee is positioned in the center of the flower, with its head and front legs sticking out.",type:"text"}]},metrics:[],models:[{description:"Small and efficient yet powerful vision language model.",id:"HuggingFaceTB/SmolVLM-Instruct"},{description:"A screenshot understanding model used to control computers.",id:"microsoft/OmniParser-v2.0"},{description:"Cutting-edge vision language model.",id:"allenai/Molmo-7B-D-0924"},{description:"Small yet powerful model.",id:"vikhyatk/moondream2"},{description:"Strong image-text-to-text model.",id:"Qwen/Qwen2.5-VL-7B-Instruct"},{description:"Image-text-to-text model with agentic capabilities.",id:"microsoft/Magma-8B"},{description:"Strong image-text-to-text model focused on documents.",id:"allenai/olmOCR-7B-0225-preview"},{description:"Small yet strong image-text-to-text model.",id:"ibm-granite/granite-vision-3.2-2b"}],spaces:[{description:"Leaderboard to evaluate vision language models.",id:"opencompass/open_vlm_leaderboard"},{description:"Vision language models arena, where models are ranked by votes of users.",id:"WildVision/vision-arena"},{description:"Powerful vision-language model assistant.",id:"akhaliq/Molmo-7B-D-0924"},{description:"Powerful vision language assistant that can understand multiple images.",id:"HuggingFaceTB/SmolVLM2"},{description:"An application for chatting with an image-text-to-text model.",id:"GanymedeNil/Qwen2-VL-7B"},{description:"An application that parses screenshots into actions.",id:"showlab/ShowUI"},{description:"An application that detects gaze.",id:"moondream/gaze-demo"}],summary:"Image-text-to-text models take in an image and text prompt and output text. These models are also called vision-language models, or VLMs. The difference from image-to-text models is that these models take an additional text input, not restricting the model to certain use cases like image captioning, and may also be trained to accept a conversation as input.",widgetModels:["Qwen/Qwen2-VL-7B-Instruct"],youtubeId:"IoGaGfU1CIg"},jf={datasets:[{description:"Scene segmentation dataset.",id:"scene_parse_150"}],demo:{inputs:[{filename:"image-segmentation-input.jpeg",type:"img"}],outputs:[{filename:"image-segmentation-output.png",type:"img"}]},metrics:[{description:"Average Precision (AP) is the Area Under the PR Curve (AUC-PR). It is calculated for each semantic class separately",id:"Average Precision"},{description:"Mean Average Precision (mAP) is the overall average of the AP values",id:"Mean Average Precision"},{description:"Intersection over Union (IoU) is the overlap of segmentation masks. Mean IoU is the average of the IoU of all semantic classes",id:"Mean Intersection over Union"},{description:"APα is the Average Precision at the IoU threshold of a α value, for example, AP50 and AP75",id:"APα"}],models:[{description:"Solid semantic segmentation model trained on ADE20k.",id:"openmmlab/upernet-convnext-small"},{description:"Background removal model.",id:"briaai/RMBG-1.4"},{description:"A multipurpose image segmentation model for high resolution images.",id:"ZhengPeng7/BiRefNet"},{description:"Powerful human-centric image segmentation model.",id:"facebook/sapiens-seg-1b"},{description:"Panoptic segmentation model trained on the COCO (common objects) dataset.",id:"facebook/mask2former-swin-large-coco-panoptic"}],spaces:[{description:"A semantic segmentation application that can predict unseen instances out of the box.",id:"facebook/ov-seg"},{description:"One of the strongest segmentation applications.",id:"jbrinkma/segment-anything"},{description:"A human-centric segmentation model.",id:"facebook/sapiens-pose"},{description:"An instance segmentation application to predict neuronal cell types from microscopy images.",id:"rashmi/sartorius-cell-instance-segmentation"},{description:"An application that segments videos.",id:"ArtGAN/Segment-Anything-Video"},{description:"An panoptic segmentation application built for outdoor environments.",id:"segments/panoptic-segment-anything"}],summary:"Image Segmentation divides an image into segments where each pixel in the image is mapped to an object. This task has multiple variants such as instance segmentation, panoptic segmentation and semantic segmentation.",widgetModels:["nvidia/segformer-b0-finetuned-ade-512-512"],youtubeId:"dKE8SIt9C-w"},Bf={datasets:[{description:"Widely used benchmark dataset for multiple Vision tasks.",id:"merve/coco2017"},{description:"Medical Imaging dataset of the Human Brain for segmentation and mask generating tasks",id:"rocky93/BraTS_segmentation"}],demo:{inputs:[{filename:"mask-generation-input.png",type:"img"}],outputs:[{filename:"mask-generation-output.png",type:"img"}]},metrics:[{description:"IoU is used to measure the overlap between predicted mask and the ground truth mask.",id:"Intersection over Union (IoU)"}],models:[{description:"Small yet powerful mask generation model.",id:"Zigeng/SlimSAM-uniform-50"},{description:"Very strong mask generation model.",id:"facebook/sam2-hiera-large"}],spaces:[{description:"An application that combines a mask generation model with a zero-shot object detection model for text-guided image segmentation.",id:"merve/OWLSAM2"},{description:"An application that compares the performance of a large and a small mask generation model.",id:"merve/slimsam"},{description:"An application based on an improved mask generation model.",id:"SkalskiP/segment-anything-model-2"},{description:"An application to remove objects from videos using mask generation models.",id:"SkalskiP/SAM_and_ProPainter"}],summary:"Mask generation is the task of generating masks that identify a specific object or region of interest in a given image. Masks are often used in segmentation tasks, where they provide a precise way to isolate the object of interest for further processing or analysis.",widgetModels:[],youtubeId:""},qf={datasets:[{description:"Widely used benchmark dataset for multiple vision tasks.",id:"merve/coco2017"},{description:"Multi-task computer vision benchmark.",id:"merve/pascal-voc"}],demo:{inputs:[{filename:"object-detection-input.jpg",type:"img"}],outputs:[{filename:"object-detection-output.jpg",type:"img"}]},metrics:[{description:"The Average Precision (AP) metric is the Area Under the PR Curve (AUC-PR). It is calculated for each class separately",id:"Average Precision"},{description:"The Mean Average Precision (mAP) metric is the overall average of the AP values",id:"Mean Average Precision"},{description:"The APα metric is the Average Precision at the IoU threshold of a α value, for example, AP50 and AP75",id:"APα"}],models:[{description:"Solid object detection model pre-trained on the COCO 2017 dataset.",id:"facebook/detr-resnet-50"},{description:"Accurate object detection model.",id:"IDEA-Research/dab-detr-resnet-50"},{description:"Fast and accurate object detection model.",id:"PekingU/rtdetr_v2_r50vd"},{description:"Object detection model for low-lying objects.",id:"StephanST/WALDO30"}],spaces:[{description:"Leaderboard to compare various object detection models across several metrics.",id:"hf-vision/object_detection_leaderboard"},{description:"An application that contains various object detection models to try from.",id:"Gradio-Blocks/Object-Detection-With-DETR-and-YOLOS"},{description:"A cutting-edge object detection application.",id:"sunsmarterjieleaf/yolov12"},{description:"An object tracking, segmentation and inpainting application.",id:"VIPLab/Track-Anything"},{description:"Very fast object tracking application based on object detection.",id:"merve/RT-DETR-tracking-coco"}],summary:"Object Detection models allow users to identify objects of certain defined classes. Object detection models receive an image as input and output the images with bounding boxes and labels on detected objects.",widgetModels:["facebook/detr-resnet-50"],youtubeId:"WdAeKSOpxhw"},Hf={datasets:[{description:"NYU Depth V2 Dataset: Video dataset containing both RGB and depth sensor data.",id:"sayakpaul/nyu_depth_v2"},{description:"Monocular depth estimation benchmark based without noise and errors.",id:"depth-anything/DA-2K"}],demo:{inputs:[{filename:"depth-estimation-input.jpg",type:"img"}],outputs:[{filename:"depth-estimation-output.png",type:"img"}]},metrics:[],models:[{description:"Cutting-edge depth estimation model.",id:"depth-anything/Depth-Anything-V2-Large"},{description:"A strong monocular depth estimation model.",id:"jingheya/lotus-depth-g-v1-0"},{description:"A depth estimation model that predicts depth in videos.",id:"tencent/DepthCrafter"},{description:"A robust depth estimation model.",id:"apple/DepthPro-hf"}],spaces:[{description:"An application that predicts the depth of an image and then reconstruct the 3D model as voxels.",id:"radames/dpt-depth-estimation-3d-voxels"},{description:"An application for bleeding-edge depth estimation.",id:"akhaliq/depth-pro"},{description:"An application on cutting-edge depth estimation in videos.",id:"tencent/DepthCrafter"},{description:"A human-centric depth estimation application.",id:"facebook/sapiens-depth"}],summary:"Depth estimation is the task of predicting depth of the objects present in an image.",widgetModels:[""],youtubeId:""},pa={datasets:[],demo:{inputs:[],outputs:[]},isPlaceholder:!0,metrics:[],models:[],spaces:[],summary:"",widgetModels:[],youtubeId:void 0,canonicalId:void 0},Vf={datasets:[{description:"A curation of widely used datasets for Data Driven Deep Reinforcement Learning (D4RL)",id:"edbeeching/decision_transformer_gym_replay"}],demo:{inputs:[{label:"State",content:"Red traffic light, pedestrians are about to pass.",type:"text"}],outputs:[{label:"Action",content:"Stop the car.",type:"text"},{label:"Next State",content:"Yellow light, pedestrians have crossed.",type:"text"}]},metrics:[{description:"Accumulated reward across all time steps discounted by a factor that ranges between 0 and 1 and determines how much the agent optimizes for future relative to immediate rewards. Measures how good is the policy ultimately found by a given algorithm considering uncertainty over the future.",id:"Discounted Total Reward"},{description:"Average return obtained after running the policy for a certain number of evaluation episodes. As opposed to total reward, mean reward considers how much reward a given algorithm receives while learning.",id:"Mean Reward"},{description:"Measures how good a given algorithm is after a predefined time. Some algorithms may be guaranteed to converge to optimal behavior across many time steps. However, an agent that reaches an acceptable level of optimality after a given time horizon may be preferable to one that ultimately reaches optimality but takes a long time.",id:"Level of Performance After Some Time"}],models:[{description:"A Reinforcement Learning model trained on expert data from the Gym Hopper environment",id:"edbeeching/decision-transformer-gym-hopper-expert"},{description:"A PPO agent playing seals/CartPole-v0 using the stable-baselines3 library and the RL Zoo.",id:"HumanCompatibleAI/ppo-seals-CartPole-v0"}],spaces:[{description:"An application for a cute puppy agent learning to catch a stick.",id:"ThomasSimonini/Huggy"},{description:"An application to play Snowball Fight with a reinforcement learning agent.",id:"ThomasSimonini/SnowballFight"}],summary:"Reinforcement learning is the computational approach of learning from action by interacting with an environment through trial and error and receiving rewards (negative or positive) as feedback",widgetModels:[],youtubeId:"q0BiUn5LiBc"},Ff={datasets:[{description:"A famous question answering dataset based on English articles from Wikipedia.",id:"squad_v2"},{description:"A dataset of aggregated anonymized actual queries issued to the Google search engine.",id:"natural_questions"}],demo:{inputs:[{label:"Question",content:"Which name is also used to describe the Amazon rainforest in English?",type:"text"},{label:"Context",content:"The Amazon rainforest, also known in English as Amazonia or the Amazon Jungle",type:"text"}],outputs:[{label:"Answer",content:"Amazonia",type:"text"}]},metrics:[{description:"Exact Match is a metric based on the strict character match of the predicted answer and the right answer. For answers predicted correctly, the Exact Match will be 1. Even if only one character is different, Exact Match will be 0",id:"exact-match"},{description:" The F1-Score metric is useful if we value both false positives and false negatives equally. The F1-Score is calculated on each word in the predicted sequence against the correct answer",id:"f1"}],models:[{description:"A robust baseline model for most question answering domains.",id:"deepset/roberta-base-squad2"},{description:"Small yet robust model that can answer questions.",id:"distilbert/distilbert-base-cased-distilled-squad"},{description:"A special model that can answer questions from tables.",id:"google/tapas-base-finetuned-wtq"}],spaces:[{description:"An application that can answer a long question from Wikipedia.",id:"deepset/wikipedia-assistant"}],summary:"Question Answering models can retrieve the answer to a question from a given text, which is useful for searching for an answer in a document. Some question answering models can generate answers without context!",widgetModels:["deepset/roberta-base-squad2"],youtubeId:"ajPx5LwJD-I"},$f={datasets:[{description:"Bing queries with relevant passages from various web sources.",id:"microsoft/ms_marco"}],demo:{inputs:[{label:"Source sentence",content:"Machine learning is so easy.",type:"text"},{label:"Sentences to compare to",content:"Deep learning is so straightforward.",type:"text"},{label:"",content:"This is so difficult, like rocket science.",type:"text"},{label:"",content:"I can't believe how much I struggled with this.",type:"text"}],outputs:[{type:"chart",data:[{label:"Deep learning is so straightforward.",score:.623},{label:"This is so difficult, like rocket science.",score:.413},{label:"I can't believe how much I struggled with this.",score:.256}]}]},metrics:[{description:"Reciprocal Rank is a measure used to rank the relevancy of documents given a set of documents. Reciprocal Rank is the reciprocal of the rank of the document retrieved, meaning, if the rank is 3, the Reciprocal Rank is 0.33. If the rank is 1, the Reciprocal Rank is 1",id:"Mean Reciprocal Rank"},{description:"The similarity of the embeddings is evaluated mainly on cosine similarity. It is calculated as the cosine of the angle between two vectors. It is particularly useful when your texts are not the same length",id:"Cosine Similarity"}],models:[{description:"This model works well for sentences and paragraphs and can be used for clustering/grouping and semantic searches.",id:"sentence-transformers/all-mpnet-base-v2"},{description:"A multilingual robust sentence similarity model.",id:"BAAI/bge-m3"},{description:"A robust sentence similarity model.",id:"HIT-TMG/KaLM-embedding-multilingual-mini-instruct-v1.5"}],spaces:[{description:"An application that leverages sentence similarity to answer questions from YouTube videos.",id:"Gradio-Blocks/Ask_Questions_To_YouTube_Videos"},{description:"An application that retrieves relevant PubMed abstracts for a given online article which can be used as further references.",id:"Gradio-Blocks/pubmed-abstract-retriever"},{description:"An application that leverages sentence similarity to summarize text.",id:"nickmuchi/article-text-summarizer"},{description:"A guide that explains how Sentence Transformers can be used for semantic search.",id:"sentence-transformers/Sentence_Transformers_for_semantic_search"}],summary:"Sentence Similarity is the task of determining how similar two texts are. Sentence similarity models convert input texts into vectors (embeddings) that capture semantic information and calculate how close (similar) they are between them. This task is particularly useful for information retrieval and clustering/grouping.",widgetModels:["BAAI/bge-small-en-v1.5"],youtubeId:"VCZq5AkbNEU"},Pf={canonicalId:"text2text-generation",datasets:[{description:"News articles in five different languages along with their summaries. Widely used for benchmarking multilingual summarization models.",id:"mlsum"},{description:"English conversations and their summaries. Useful for benchmarking conversational agents.",id:"samsum"}],demo:{inputs:[{label:"Input",content:"The tower is 324 metres (1,063 ft) tall, about the same height as an 81-storey building, and the tallest structure in Paris. Its base is square, measuring 125 metres (410 ft) on each side. It was the first structure to reach a height of 300 metres. Excluding transmitters, the Eiffel Tower is the second tallest free-standing structure in France after the Millau Viaduct.",type:"text"}],outputs:[{label:"Output",content:"The tower is 324 metres (1,063 ft) tall, about the same height as an 81-storey building. It was the first structure to reach a height of 300 metres.",type:"text"}]},metrics:[{description:"The generated sequence is compared against its summary, and the overlap of tokens are counted. ROUGE-N refers to overlap of N subsequent tokens, ROUGE-1 refers to overlap of single tokens and ROUGE-2 is the overlap of two subsequent tokens.",id:"rouge"}],models:[{description:"A strong summarization model trained on English news articles. Excels at generating factual summaries.",id:"facebook/bart-large-cnn"},{description:"A summarization model trained on medical articles.",id:"Falconsai/medical_summarization"}],spaces:[{description:"An application that can summarize long paragraphs.",id:"pszemraj/summarize-long-text"},{description:"A much needed summarization application for terms and conditions.",id:"ml6team/distilbart-tos-summarizer-tosdr"},{description:"An application that summarizes long documents.",id:"pszemraj/document-summarization"},{description:"An application that can detect errors in abstractive summarization.",id:"ml6team/post-processing-summarization"}],summary:"Summarization is the task of producing a shorter version of a document while preserving its important information. Some models can extract text from the original input, while other models can generate entirely new text.",widgetModels:["facebook/bart-large-cnn"],youtubeId:"yHnr5Dk2zCI"},Yf={datasets:[{description:"The WikiTableQuestions dataset is a large-scale dataset for the task of question answering on semi-structured tables.",id:"wikitablequestions"},{description:"WikiSQL is a dataset of 80654 hand-annotated examples of questions and SQL queries distributed across 24241 tables from Wikipedia.",id:"wikisql"}],demo:{inputs:[{table:[["Rank","Name","No.of reigns","Combined days"],["1","lou Thesz","3","3749"],["2","Ric Flair","8","3103"],["3","Harley Race","7","1799"]],type:"tabular"},{label:"Question",content:"What is the number of reigns for Harley Race?",type:"text"}],outputs:[{label:"Result",content:"7",type:"text"}]},metrics:[{description:"Checks whether the predicted answer(s) is the same as the ground-truth answer(s).",id:"Denotation Accuracy"}],models:[{description:"A table question answering model that is capable of neural SQL execution, i.e., employ TAPEX to execute a SQL query on a given table.",id:"microsoft/tapex-base"},{description:"A robust table question answering model.",id:"google/tapas-base-finetuned-wtq"}],spaces:[{description:"An application that answers questions based on table CSV files.",id:"katanaml/table-query"}],summary:"Table Question Answering (Table QA) is the answering a question about an information on a given table.",widgetModels:["google/tapas-base-finetuned-wtq"]},Qf={datasets:[{description:"A comprehensive curation of datasets covering all benchmarks.",id:"inria-soda/tabular-benchmark"}],demo:{inputs:[{table:[["Glucose","Blood Pressure ","Skin Thickness","Insulin","BMI"],["148","72","35","0","33.6"],["150","50","30","0","35.1"],["141","60","29","1","39.2"]],type:"tabular"}],outputs:[{table:[["Diabetes"],["1"],["1"],["0"]],type:"tabular"}]},metrics:[{description:"",id:"accuracy"},{description:"",id:"recall"},{description:"",id:"precision"},{description:"",id:"f1"}],models:[{description:"Breast cancer prediction model based on decision trees.",id:"scikit-learn/cancer-prediction-trees"}],spaces:[{description:"An application that can predict defective products on a production line.",id:"scikit-learn/tabular-playground"},{description:"An application that compares various tabular classification techniques on different datasets.",id:"scikit-learn/classification"}],summary:"Tabular classification is the task of classifying a target category (a group) based on set of attributes.",widgetModels:["scikit-learn/tabular-playground"],youtubeId:""},Xf={datasets:[{description:"A comprehensive curation of datasets covering all benchmarks.",id:"inria-soda/tabular-benchmark"}],demo:{inputs:[{table:[["Car Name","Horsepower","Weight"],["ford torino","140","3,449"],["amc hornet","97","2,774"],["toyota corolla","65","1,773"]],type:"tabular"}],outputs:[{table:[["MPG (miles per gallon)"],["17"],["18"],["31"]],type:"tabular"}]},metrics:[{description:"",id:"mse"},{description:"Coefficient of determination (or R-squared) is a measure of how well the model fits the data. Higher R-squared is considered a better fit.",id:"r-squared"}],models:[{description:"Fish weight prediction based on length measurements and species.",id:"scikit-learn/Fish-Weight"}],spaces:[{description:"An application that can predict weight of a fish based on set of attributes.",id:"scikit-learn/fish-weight-prediction"}],summary:"Tabular regression is the task of predicting a numerical value given a set of attributes.",widgetModels:["scikit-learn/Fish-Weight"],youtubeId:""},Gf={datasets:[{description:"RedCaps is a large-scale dataset of 12M image-text pairs collected from Reddit.",id:"red_caps"},{description:"Conceptual Captions is a dataset consisting of ~3.3M images annotated with captions.",id:"conceptual_captions"},{description:"12M image-caption pairs.",id:"Spawning/PD12M"}],demo:{inputs:[{label:"Input",content:"A city above clouds, pastel colors, Victorian style",type:"text"}],outputs:[{filename:"image.jpeg",type:"img"}]},metrics:[{description:"The Inception Score (IS) measure assesses diversity and meaningfulness. It uses a generated image sample to predict its label. A higher score signifies more diverse and meaningful images.",id:"IS"},{description:"The Fréchet Inception Distance (FID) calculates the distance between distributions between synthetic and real samples. A lower FID score indicates better similarity between the distributions of real and generated images.",id:"FID"},{description:"R-precision assesses how the generated image aligns with the provided text description. It uses the generated images as queries to retrieve relevant text descriptions. The top 'r' relevant descriptions are selected and used to calculate R-precision as r/R, where 'R' is the number of ground truth descriptions associated with the generated images. A higher R-precision value indicates a better model.",id:"R-Precision"}],models:[{description:"One of the most powerful image generation models that can generate realistic outputs.",id:"black-forest-labs/FLUX.1-dev"},{description:"A powerful yet fast image generation model.",id:"latent-consistency/lcm-lora-sdxl"},{description:"Text-to-image model for photorealistic generation.",id:"Kwai-Kolors/Kolors"},{description:"A powerful text-to-image model.",id:"stabilityai/stable-diffusion-3-medium-diffusers"}],spaces:[{description:"A powerful text-to-image application.",id:"stabilityai/stable-diffusion-3-medium"},{description:"A text-to-image application to generate comics.",id:"jbilcke-hf/ai-comic-factory"},{description:"An application to match multiple custom image generation models.",id:"multimodalart/flux-lora-lab"},{description:"A powerful yet very fast image generation application.",id:"latent-consistency/lcm-lora-for-sdxl"},{description:"A gallery to explore various text-to-image models.",id:"multimodalart/LoraTheExplorer"},{description:"An application for `text-to-image`, `image-to-image` and image inpainting.",id:"ArtGAN/Stable-Diffusion-ControlNet-WebUI"},{description:"An application to generate realistic images given photos of a person and a prompt.",id:"InstantX/InstantID"}],summary:"Text-to-image is the task of generating images from input text. These pipelines can also be used to modify and edit images based on text prompts.",widgetModels:["black-forest-labs/FLUX.1-dev"],youtubeId:""},Zf={canonicalId:"text-to-audio",datasets:[{description:"10K hours of multi-speaker English dataset.",id:"parler-tts/mls_eng_10k"},{description:"Multi-speaker English dataset.",id:"mythicinfinity/libritts_r"},{description:"Multi-lingual dataset.",id:"facebook/multilingual_librispeech"}],demo:{inputs:[{label:"Input",content:"I love audio models on the Hub!",type:"text"}],outputs:[{filename:"audio.wav",type:"audio"}]},metrics:[{description:"The Mel Cepstral Distortion (MCD) metric is used to calculate the quality of generated speech.",id:"mel cepstral distortion"}],models:[{description:"A prompt based, powerful TTS model.",id:"parler-tts/parler-tts-large-v1"},{description:"A powerful TTS model that supports English and Chinese.",id:"SWivid/F5-TTS"},{description:"A massively multi-lingual TTS model.",id:"fishaudio/fish-speech-1.5"},{description:"A powerful TTS model.",id:"OuteAI/OuteTTS-0.1-350M"},{description:"Small yet powerful TTS model.",id:"hexgrad/Kokoro-82M"}],spaces:[{description:"An application for generate high quality speech in different languages.",id:"hexgrad/Kokoro-TTS"},{description:"A multilingual text-to-speech application.",id:"fishaudio/fish-speech-1"},{description:"An application that generates speech in different styles in English and Chinese.",id:"mrfakename/E2-F5-TTS"},{description:"An application that synthesizes emotional speech for diverse speaker prompts.",id:"parler-tts/parler-tts-expresso"},{description:"An application that generates podcast episodes.",id:"ngxson/kokoro-podcast-generator"}],summary:"Text-to-Speech (TTS) is the task of generating natural sounding speech given text input. TTS models can be extended to have a single model that generates speech for multiple speakers and multiple languages.",widgetModels:["suno/bark"],youtubeId:"NW62DpzJ274"},Kf={datasets:[{description:"A widely used dataset useful to benchmark named entity recognition models.",id:"eriktks/conll2003"},{description:"A multilingual dataset of Wikipedia articles annotated for named entity recognition in over 150 different languages.",id:"unimelb-nlp/wikiann"}],demo:{inputs:[{label:"Input",content:"My name is Omar and I live in Zürich.",type:"text"}],outputs:[{text:"My name is Omar and I live in Zürich.",tokens:[{type:"PERSON",start:11,end:15},{type:"GPE",start:30,end:36}],type:"text-with-tokens"}]},metrics:[{description:"",id:"accuracy"},{description:"",id:"recall"},{description:"",id:"precision"},{description:"",id:"f1"}],models:[{description:"A robust performance model to identify people, locations, organizations and names of miscellaneous entities.",id:"dslim/bert-base-NER"},{description:"A strong model to identify people, locations, organizations and names in multiple languages.",id:"FacebookAI/xlm-roberta-large-finetuned-conll03-english"},{description:"A token classification model specialized on medical entity recognition.",id:"blaze999/Medical-NER"},{description:"Flair models are typically the state of the art in named entity recognition tasks.",id:"flair/ner-english"}],spaces:[{description:"An application that can recognizes entities, extracts noun chunks and recognizes various linguistic features of each token.",id:"spacy/gradio_pipeline_visualizer"}],summary:"Token classification is a natural language understanding task in which a label is assigned to some tokens in a text. Some popular token classification subtasks are Named Entity Recognition (NER) and Part-of-Speech (PoS) tagging. NER models could be trained to identify specific entities in a text, such as dates, individuals and places; and PoS tagging would identify, for example, which words in a text are verbs, nouns, and punctuation marks.",widgetModels:["FacebookAI/xlm-roberta-large-finetuned-conll03-english"],youtubeId:"wVHdVlPScxA"},Jf={canonicalId:"text2text-generation",datasets:[{description:"A dataset of copyright-free books translated into 16 different languages.",id:"Helsinki-NLP/opus_books"},{description:"An example of translation between programming languages. This dataset consists of functions in Java and C#.",id:"google/code_x_glue_cc_code_to_code_trans"}],demo:{inputs:[{label:"Input",content:"My name is Omar and I live in Zürich.",type:"text"}],outputs:[{label:"Output",content:"Mein Name ist Omar und ich wohne in Zürich.",type:"text"}]},metrics:[{description:"BLEU score is calculated by counting the number of shared single or subsequent tokens between the generated sequence and the reference. Subsequent n tokens are called “n-grams”. Unigram refers to a single token while bi-gram refers to token pairs and n-grams refer to n subsequent tokens. The score ranges from 0 to 1, where 1 means the translation perfectly matched and 0 did not match at all",id:"bleu"},{description:"",id:"sacrebleu"}],models:[{description:"Very powerful model that can translate many languages between each other, especially low-resource languages.",id:"facebook/nllb-200-1.3B"},{description:"A general-purpose Transformer that can be used to translate from English to German, French, or Romanian.",id:"google-t5/t5-base"}],spaces:[{description:"An application that can translate between 100 languages.",id:"Iker/Translate-100-languages"},{description:"An application that can translate between many languages.",id:"Geonmo/nllb-translation-demo"}],summary:"Translation is the task of converting text from one language to another.",widgetModels:["facebook/mbart-large-50-many-to-many-mmt"],youtubeId:"1JvfrvZgi6c"},Wf={datasets:[{description:"A widely used dataset used to benchmark multiple variants of text classification.",id:"nyu-mll/glue"},{description:"A text classification dataset used to benchmark natural language inference models",id:"stanfordnlp/snli"}],demo:{inputs:[{label:"Input",content:"I love Hugging Face!",type:"text"}],outputs:[{type:"chart",data:[{label:"POSITIVE",score:.9},{label:"NEUTRAL",score:.1},{label:"NEGATIVE",score:0}]}]},metrics:[{description:"",id:"accuracy"},{description:"",id:"recall"},{description:"",id:"precision"},{description:"The F1 metric is the harmonic mean of the precision and recall. It can be calculated as: F1 = 2 * (precision * recall) / (precision + recall)",id:"f1"}],models:[{description:"A robust model trained for sentiment analysis.",id:"distilbert/distilbert-base-uncased-finetuned-sst-2-english"},{description:"A sentiment analysis model specialized in financial sentiment.",id:"ProsusAI/finbert"},{description:"A sentiment analysis model specialized in analyzing tweets.",id:"cardiffnlp/twitter-roberta-base-sentiment-latest"},{description:"A model that can classify languages.",id:"papluca/xlm-roberta-base-language-detection"},{description:"A model that can classify text generation attacks.",id:"meta-llama/Prompt-Guard-86M"}],spaces:[{description:"An application that can classify financial sentiment.",id:"IoannisTr/Tech_Stocks_Trading_Assistant"},{description:"A dashboard that contains various text classification tasks.",id:"miesnerjacob/Multi-task-NLP"},{description:"An application that analyzes user reviews in healthcare.",id:"spacy/healthsea-demo"}],summary:"Text Classification is the task of assigning a label or class to a given text. Some use cases are sentiment analysis, natural language inference, and assessing grammatical correctness.",widgetModels:["distilbert/distilbert-base-uncased-finetuned-sst-2-english"],youtubeId:"leNG9fN9FQU"},e7={datasets:[{description:"Multilingual dataset used to evaluate text generation models.",id:"CohereForAI/Global-MMLU"},{description:"High quality multilingual data used to train text-generation models.",id:"HuggingFaceFW/fineweb-2"},{description:"Truly open-source, curated and cleaned dialogue dataset.",id:"HuggingFaceH4/ultrachat_200k"},{description:"A reasoning dataset.",id:"open-r1/OpenThoughts-114k-math"},{description:"A multilingual instruction dataset with preference ratings on responses.",id:"allenai/tulu-3-sft-mixture"},{description:"A large synthetic dataset for alignment of text generation models.",id:"HuggingFaceTB/smoltalk"},{description:"A dataset made for training text generation models solving math questions.",id:"HuggingFaceTB/finemath"}],demo:{inputs:[{label:"Input",content:"Once upon a time,",type:"text"}],outputs:[{label:"Output",content:"Once upon a time, we knew that our ancestors were on the verge of extinction. The great explorers and poets of the Old World, from Alexander the Great to Chaucer, are dead and gone. A good many of our ancient explorers and poets have",type:"text"}]},metrics:[{description:"Cross Entropy is a metric that calculates the difference between two probability distributions. Each probability distribution is the distribution of predicted words",id:"Cross Entropy"},{description:"The Perplexity metric is the exponential of the cross-entropy loss. It evaluates the probabilities assigned to the next word by the model. Lower perplexity indicates better performance",id:"Perplexity"}],models:[{description:"A text-generation model trained to follow instructions.",id:"google/gemma-2-2b-it"},{description:"Smaller variant of one of the most powerful models.",id:"deepseek-ai/DeepSeek-R1-Distill-Qwen-1.5B"},{description:"Very powerful text generation model trained to follow instructions.",id:"meta-llama/Meta-Llama-3.1-8B-Instruct"},{description:"Powerful text generation model by Microsoft.",id:"microsoft/phi-4"},{description:"A very powerful model with reasoning capabilities.",id:"simplescaling/s1.1-32B"},{description:"Strong conversational model that supports very long instructions.",id:"Qwen/Qwen2.5-7B-Instruct-1M"},{description:"Text generation model used to write code.",id:"Qwen/Qwen2.5-Coder-32B-Instruct"},{description:"Powerful reasoning based open large language model.",id:"deepseek-ai/DeepSeek-R1"}],spaces:[{description:"A leaderboard to compare different open-source text generation models based on various benchmarks.",id:"open-llm-leaderboard/open_llm_leaderboard"},{description:"A leaderboard for comparing chain-of-thought performance of models.",id:"logikon/open_cot_leaderboard"},{description:"An text generation based application based on a very powerful LLaMA2 model.",id:"ysharma/Explore_llamav2_with_TGI"},{description:"An text generation based application to converse with Zephyr model.",id:"HuggingFaceH4/zephyr-chat"},{description:"A leaderboard that ranks text generation models based on blind votes from people.",id:"lmsys/chatbot-arena-leaderboard"},{description:"An chatbot to converse with a very powerful text generation model.",id:"mlabonne/phixtral-chat"}],summary:"Generating text is the task of generating new text given another text. These models can, for example, fill in incomplete text or paraphrase.",widgetModels:["mistralai/Mistral-Nemo-Instruct-2407"],youtubeId:"e9gNEAlsOvU"},t7={datasets:[{description:"Bing queries with relevant passages from various web sources.",id:"microsoft/ms_marco"}],demo:{inputs:[{label:"Source sentence",content:"Machine learning is so easy.",type:"text"},{label:"Sentences to compare to",content:"Deep learning is so straightforward.",type:"text"},{label:"",content:"This is so difficult, like rocket science.",type:"text"},{label:"",content:"I can't believe how much I struggled with this.",type:"text"}],outputs:[{type:"chart",data:[{label:"Deep learning is so straightforward.",score:2.2006407},{label:"This is so difficult, like rocket science.",score:-6.2634873},{label:"I can't believe how much I struggled with this.",score:-10.251488}]}]},metrics:[{description:"Discounted Cumulative Gain (DCG) measures the gain, or usefulness, of search results discounted by their position. The normalization is done by dividing the DCG by the ideal DCG, which is the DCG of the perfect ranking.",id:"Normalized Discounted Cumulative Gain"},{description:"Reciprocal Rank is a measure used to rank the relevancy of documents given a set of documents. Reciprocal Rank is the reciprocal of the rank of the document retrieved, meaning, if the rank is 3, the Reciprocal Rank is 0.33. If the rank is 1, the Reciprocal Rank is 1",id:"Mean Reciprocal Rank"},{description:"Mean Average Precision (mAP) is the overall average of the Average Precision (AP) values, where AP is the Area Under the PR Curve (AUC-PR)",id:"Mean Average Precision"}],models:[{description:"An extremely efficient text ranking model trained on a web search dataset.",id:"cross-encoder/ms-marco-MiniLM-L6-v2"},{description:"A strong multilingual text reranker model.",id:"Alibaba-NLP/gte-multilingual-reranker-base"},{description:"An efficient text ranking model that punches above its weight.",id:"Alibaba-NLP/gte-reranker-modernbert-base"}],spaces:[],summary:"Text Ranking is the task of ranking a set of texts based on their relevance to a query. Text ranking models are trained on large datasets of queries and relevant documents to learn how to rank documents based on their relevance to the query. This task is particularly useful for search engines and information retrieval systems.",widgetModels:["cross-encoder/ms-marco-MiniLM-L6-v2"],youtubeId:""},n7={datasets:[{description:"Microsoft Research Video to Text is a large-scale dataset for open domain video captioning",id:"iejMac/CLIP-MSR-VTT"},{description:"UCF101 Human Actions dataset consists of 13,320 video clips from YouTube, with 101 classes.",id:"quchenyuan/UCF101-ZIP"},{description:"A high-quality dataset for human action recognition in YouTube videos.",id:"nateraw/kinetics"},{description:"A dataset of video clips of humans performing pre-defined basic actions with everyday objects.",id:"HuggingFaceM4/something_something_v2"},{description:"This dataset consists of text-video pairs and contains noisy samples with irrelevant video descriptions",id:"HuggingFaceM4/webvid"},{description:"A dataset of short Flickr videos for the temporal localization of events with descriptions.",id:"iejMac/CLIP-DiDeMo"}],demo:{inputs:[{label:"Input",content:"Darth Vader is surfing on the waves.",type:"text"}],outputs:[{filename:"text-to-video-output.gif",type:"img"}]},metrics:[{description:"Inception Score uses an image classification model that predicts class labels and evaluates how distinct and diverse the images are. A higher score indicates better video generation.",id:"is"},{description:"Frechet Inception Distance uses an image classification model to obtain image embeddings. The metric compares mean and standard deviation of the embeddings of real and generated images. A smaller score indicates better video generation.",id:"fid"},{description:"Frechet Video Distance uses a model that captures coherence for changes in frames and the quality of each frame. A smaller score indicates better video generation.",id:"fvd"},{description:"CLIPSIM measures similarity between video frames and text using an image-text similarity model. A higher score indicates better video generation.",id:"clipsim"}],models:[{description:"A strong model for consistent video generation.",id:"tencent/HunyuanVideo"},{description:"A text-to-video model with high fidelity motion and strong prompt adherence.",id:"Lightricks/LTX-Video"},{description:"A text-to-video model focusing on physics-aware applications like robotics.",id:"nvidia/Cosmos-1.0-Diffusion-7B-Text2World"},{description:"A robust model for video generation.",id:"Wan-AI/Wan2.1-T2V-1.3B"}],spaces:[{description:"An application that generates video from text.",id:"VideoCrafter/VideoCrafter"},{description:"Consistent video generation application.",id:"Wan-AI/Wan2.1"},{description:"A cutting edge video generation application.",id:"Pyramid-Flow/pyramid-flow"}],summary:"Text-to-video models can be used in any application that requires generating consistent sequence of images from text. ",widgetModels:["Wan-AI/Wan2.1-T2V-14B"],youtubeId:void 0},i7={datasets:[{description:"The CIFAR-100 dataset consists of 60000 32x32 colour images in 100 classes, with 600 images per class.",id:"cifar100"},{description:"Multiple images of celebrities, used for facial expression translation.",id:"CelebA"}],demo:{inputs:[{label:"Seed",content:"42",type:"text"},{label:"Number of images to generate:",content:"4",type:"text"}],outputs:[{filename:"unconditional-image-generation-output.jpeg",type:"img"}]},metrics:[{description:"The inception score (IS) evaluates the quality of generated images. It measures the diversity of the generated images (the model predictions are evenly distributed across all possible labels) and their 'distinction' or 'sharpness' (the model confidently predicts a single label for each image).",id:"Inception score (IS)"},{description:"The Fréchet Inception Distance (FID) evaluates the quality of images created by a generative model by calculating the distance between feature vectors for real and generated images.",id:"Frećhet Inception Distance (FID)"}],models:[{description:"High-quality image generation model trained on the CIFAR-10 dataset. It synthesizes images of the ten classes presented in the dataset using diffusion probabilistic models, a class of latent variable models inspired by considerations from nonequilibrium thermodynamics.",id:"google/ddpm-cifar10-32"},{description:"High-quality image generation model trained on the 256x256 CelebA-HQ dataset. It synthesizes images of faces using diffusion probabilistic models, a class of latent variable models inspired by considerations from nonequilibrium thermodynamics.",id:"google/ddpm-celebahq-256"}],spaces:[{description:"An application that can generate realistic faces.",id:"CompVis/celeba-latent-diffusion"}],summary:"Unconditional image generation is the task of generating images with no condition in any context (like a prompt text or another image). Once trained, the model will create images that resemble its training data distribution.",widgetModels:[""],youtubeId:""},a7={datasets:[{description:"Benchmark dataset used for video classification with videos that belong to 400 classes.",id:"kinetics400"}],demo:{inputs:[{filename:"video-classification-input.gif",type:"img"}],outputs:[{type:"chart",data:[{label:"Playing Guitar",score:.514},{label:"Playing Tennis",score:.193},{label:"Cooking",score:.068}]}]},metrics:[{description:"",id:"accuracy"},{description:"",id:"recall"},{description:"",id:"precision"},{description:"",id:"f1"}],models:[{description:"Strong Video Classification model trained on the Kinetics 400 dataset.",id:"google/vivit-b-16x2-kinetics400"},{description:"Strong Video Classification model trained on the Kinetics 400 dataset.",id:"microsoft/xclip-base-patch32"}],spaces:[{description:"An application that classifies video at different timestamps.",id:"nateraw/lavila"},{description:"An application that classifies video.",id:"fcakyon/video-classification"}],summary:"Video classification is the task of assigning a label or class to an entire video. Videos are expected to have only one class for each video. Video classification models take a video as input and return a prediction about which class the video belongs to.",widgetModels:[],youtubeId:""},r7={datasets:[{description:"A widely used dataset containing questions (with answers) about images.",id:"Graphcore/vqa"},{description:"A dataset to benchmark visual reasoning based on text in images.",id:"facebook/textvqa"}],demo:{inputs:[{filename:"elephant.jpeg",type:"img"},{label:"Question",content:"What is in this image?",type:"text"}],outputs:[{type:"chart",data:[{label:"elephant",score:.97},{label:"elephants",score:.06},{label:"animal",score:.003}]}]},isPlaceholder:!1,metrics:[{description:"",id:"accuracy"},{description:"Measures how much a predicted answer differs from the ground truth based on the difference in their semantic meaning.",id:"wu-palmer similarity"}],models:[{description:"A visual question answering model trained to convert charts and plots to text.",id:"google/deplot"},{description:"A visual question answering model trained for mathematical reasoning and chart derendering from images.",id:"google/matcha-base"},{description:"A strong visual question answering that answers questions from book covers.",id:"google/pix2struct-ocrvqa-large"}],spaces:[{description:"An application that compares visual question answering models across different tasks.",id:"merve/pix2struct"},{description:"An application that can answer questions based on images.",id:"nielsr/vilt-vqa"},{description:"An application that can caption images and answer questions about a given image. ",id:"Salesforce/BLIP"},{description:"An application that can caption images and answer questions about a given image. ",id:"vumichien/Img2Prompt"}],summary:"Visual Question Answering is the task of answering open-ended questions based on an image. They output natural language responses to natural language questions.",widgetModels:["dandelin/vilt-b32-finetuned-vqa"],youtubeId:""},o7={datasets:[{description:"A widely used dataset used to benchmark multiple variants of text classification.",id:"nyu-mll/glue"},{description:"The Multi-Genre Natural Language Inference (MultiNLI) corpus is a crowd-sourced collection of 433k sentence pairs annotated with textual entailment information.",id:"nyu-mll/multi_nli"},{description:"FEVER is a publicly available dataset for fact extraction and verification against textual sources.",id:"fever/fever"}],demo:{inputs:[{label:"Text Input",content:"Dune is the best movie ever.",type:"text"},{label:"Candidate Labels",content:"CINEMA, ART, MUSIC",type:"text"}],outputs:[{type:"chart",data:[{label:"CINEMA",score:.9},{label:"ART",score:.1},{label:"MUSIC",score:0}]}]},metrics:[],models:[{description:"Powerful zero-shot text classification model.",id:"facebook/bart-large-mnli"},{description:"Cutting-edge zero-shot multilingual text classification model.",id:"MoritzLaurer/ModernBERT-large-zeroshot-v2.0"},{description:"Zero-shot text classification model that can be used for topic and sentiment classification.",id:"knowledgator/gliclass-modern-base-v2.0-init"}],spaces:[],summary:"Zero-shot text classification is a task in natural language processing where a model is trained on a set of labeled examples but is then able to classify new examples from previously unseen classes.",widgetModels:["facebook/bart-large-mnli"]},l7={datasets:[{description:"",id:""}],demo:{inputs:[{filename:"image-classification-input.jpeg",type:"img"},{label:"Classes",content:"cat, dog, bird",type:"text"}],outputs:[{type:"chart",data:[{label:"Cat",score:.664},{label:"Dog",score:.329},{label:"Bird",score:.008}]}]},metrics:[{description:"Computes the number of times the correct label appears in top K labels predicted",id:"top-K accuracy"}],models:[{description:"Multilingual image classification model for 80 languages.",id:"visheratin/mexma-siglip"},{description:"Strong zero-shot image classification model.",id:"google/siglip2-base-patch16-224"},{description:"Robust zero-shot image classification model.",id:"intfloat/mmE5-mllama-11b-instruct"},{description:"Powerful zero-shot image classification model supporting 94 languages.",id:"jinaai/jina-clip-v2"},{description:"Strong image classification model for biomedical domain.",id:"microsoft/BiomedCLIP-PubMedBERT_256-vit_base_patch16_224"}],spaces:[{description:"An application that leverages zero-shot image classification to find best captions to generate an image. ",id:"pharma/CLIP-Interrogator"},{description:"An application to compare different zero-shot image classification models. ",id:"merve/compare_clip_siglip"}],summary:"Zero-shot image classification is the task of classifying previously unseen classes during training of a model.",widgetModels:["google/siglip-so400m-patch14-224"],youtubeId:""},s7={datasets:[],demo:{inputs:[{filename:"zero-shot-object-detection-input.jpg",type:"img"},{label:"Classes",content:"cat, dog, bird",type:"text"}],outputs:[{filename:"zero-shot-object-detection-output.jpg",type:"img"}]},metrics:[{description:"The Average Precision (AP) metric is the Area Under the PR Curve (AUC-PR). It is calculated for each class separately",id:"Average Precision"},{description:"The Mean Average Precision (mAP) metric is the overall average of the AP values",id:"Mean Average Precision"},{description:"The APα metric is the Average Precision at the IoU threshold of a α value, for example, AP50 and AP75",id:"APα"}],models:[{description:"Solid zero-shot object detection model.",id:"IDEA-Research/grounding-dino-base"},{description:"Cutting-edge zero-shot object detection model.",id:"google/owlv2-base-patch16-ensemble"}],spaces:[{description:"A demo to try the state-of-the-art zero-shot object detection model, OWLv2.",id:"merve/owlv2"},{description:"A demo that combines a zero-shot object detection and mask generation model for zero-shot segmentation.",id:"merve/OWLSAM"}],summary:"Zero-shot object detection is a computer vision task to detect objects and their classes in images, without any prior training or knowledge of the classes. Zero-shot object detection models receive an image as input, as well as a list of candidate classes, and output the bounding boxes and labels where the objects have been detected.",widgetModels:[],youtubeId:""},u7={datasets:[{description:"A large dataset of over 10 million 3D objects.",id:"allenai/objaverse-xl"},{description:"A dataset of isolated object images for evaluating image-to-3D models.",id:"dylanebert/iso3d"}],demo:{inputs:[{filename:"image-to-3d-image-input.png",type:"img"}],outputs:[{label:"Result",content:"image-to-3d-3d-output-filename.glb",type:"text"}]},metrics:[],models:[{description:"Fast image-to-3D mesh model by Tencent.",id:"TencentARC/InstantMesh"},{description:"Fast image-to-3D mesh model by StabilityAI",id:"stabilityai/TripoSR"},{description:"A scaled up image-to-3D mesh model derived from TripoSR.",id:"hwjiang/Real3D"},{description:"Consistent image-to-3d generation model.",id:"stabilityai/stable-point-aware-3d"}],spaces:[{description:"Leaderboard to evaluate image-to-3D models.",id:"dylanebert/3d-arena"},{description:"Image-to-3D demo with mesh outputs.",id:"TencentARC/InstantMesh"},{description:"Image-to-3D demo.",id:"stabilityai/stable-point-aware-3d"},{description:"Image-to-3D demo with mesh outputs.",id:"hwjiang/Real3D"},{description:"Image-to-3D demo with splat outputs.",id:"dylanebert/LGM-mini"}],summary:"Image-to-3D models take in image input and produce 3D output.",widgetModels:[],youtubeId:""},c7={datasets:[{description:"A large dataset of over 10 million 3D objects.",id:"allenai/objaverse-xl"},{description:"Descriptive captions for 3D objects in Objaverse.",id:"tiange/Cap3D"}],demo:{inputs:[{label:"Prompt",content:"a cat statue",type:"text"}],outputs:[{label:"Result",content:"text-to-3d-3d-output-filename.glb",type:"text"}]},metrics:[],models:[{description:"Text-to-3D mesh model by OpenAI",id:"openai/shap-e"},{description:"Generative 3D gaussian splatting model.",id:"ashawkey/LGM"}],spaces:[{description:"Text-to-3D demo with mesh outputs.",id:"hysts/Shap-E"},{description:"Text/image-to-3D demo with splat outputs.",id:"ashawkey/LGM"}],summary:"Text-to-3D models take in text input and produce 3D output.",widgetModels:[],youtubeId:""},f7={datasets:[{description:"A dataset of hand keypoints of over 500k examples.",id:"Vincent-luo/hagrid-mediapipe-hands"}],demo:{inputs:[{filename:"keypoint-detection-input.png",type:"img"}],outputs:[{filename:"keypoint-detection-output.png",type:"img"}]},metrics:[],models:[{description:"A robust keypoint detection model.",id:"magic-leap-community/superpoint"},{description:"A robust keypoint matching model.",id:"magic-leap-community/superglue_outdoor"},{description:"Strong keypoint detection model used to detect human pose.",id:"facebook/sapiens-pose-1b"},{description:"Powerful keypoint detection model used to detect human pose.",id:"usyd-community/vitpose-plus-base"}],spaces:[{description:"An application that detects hand keypoints in real-time.",id:"datasciencedojo/Hand-Keypoint-Detection-Realtime"},{description:"An application to try a universal keypoint detection model.",id:"merve/SuperPoint"}],summary:"Keypoint detection is the task of identifying meaningful distinctive points or features in an image.",widgetModels:[],youtubeId:""},d7={datasets:[{description:"Multiple-choice questions and answers about videos.",id:"lmms-lab/Video-MME"},{description:"A dataset of instructions and question-answer pairs about videos.",id:"lmms-lab/VideoChatGPT"},{description:"Large video understanding dataset.",id:"HuggingFaceFV/finevideo"}],demo:{inputs:[{filename:"video-text-to-text-input.gif",type:"img"},{label:"Text Prompt",content:"What is happening in this video?",type:"text"}],outputs:[{label:"Answer",content:"The video shows a series of images showing a fountain with water jets and a variety of colorful flowers and butterflies in the background.",type:"text"}]},metrics:[],models:[{description:"A robust video-text-to-text model.",id:"Vision-CAIR/LongVU_Qwen2_7B"},{description:"Strong video-text-to-text model with reasoning capabilities.",id:"GoodiesHere/Apollo-LMMs-Apollo-7B-t32"},{description:"Strong video-text-to-text model.",id:"HuggingFaceTB/SmolVLM2-2.2B-Instruct"}],spaces:[{description:"An application to chat with a video-text-to-text model.",id:"llava-hf/video-llava"},{description:"A leaderboard for various video-text-to-text models.",id:"opencompass/openvlm_video_leaderboard"},{description:"An application to generate highlights from a video.",id:"HuggingFaceTB/SmolVLM2-HighlightGenerator"}],summary:"Video-text-to-text models take in a video and a text prompt and output text. These models are also called video-language models.",widgetModels:[""],youtubeId:""},p7={"audio-classification":["speechbrain","transformers","transformers.js"],"audio-to-audio":["asteroid","fairseq","speechbrain"],"automatic-speech-recognition":["espnet","nemo","speechbrain","transformers","transformers.js"],"audio-text-to-text":[],"depth-estimation":["transformers","transformers.js"],"document-question-answering":["transformers","transformers.js"],"feature-extraction":["sentence-transformers","transformers","transformers.js"],"fill-mask":["transformers","transformers.js"],"graph-ml":["transformers"],"image-classification":["keras","timm","transformers","transformers.js"],"image-feature-extraction":["timm","transformers"],"image-segmentation":["transformers","transformers.js"],"image-text-to-text":["transformers"],"image-to-image":["diffusers","transformers","transformers.js"],"image-to-text":["transformers","transformers.js"],"image-to-video":["diffusers"],"keypoint-detection":["transformers"],"video-classification":["transformers"],"mask-generation":["transformers"],"multiple-choice":["transformers"],"object-detection":["transformers","transformers.js","ultralytics"],other:[],"question-answering":["adapter-transformers","allennlp","transformers","transformers.js"],robotics:[],"reinforcement-learning":["transformers","stable-baselines3","ml-agents","sample-factory"],"sentence-similarity":["sentence-transformers","spacy","transformers.js"],summarization:["transformers","transformers.js"],"table-question-answering":["transformers"],"table-to-text":["transformers"],"tabular-classification":["sklearn"],"tabular-regression":["sklearn"],"tabular-to-text":["transformers"],"text-classification":["adapter-transformers","setfit","spacy","transformers","transformers.js"],"text-generation":["transformers","transformers.js"],"text-ranking":["sentence-transformers","transformers"],"text-retrieval":[],"text-to-image":["diffusers"],"text-to-speech":["espnet","tensorflowtts","transformers","transformers.js"],"text-to-audio":["transformers","transformers.js"],"text-to-video":["diffusers"],"text2text-generation":["transformers","transformers.js"],"time-series-forecasting":[],"token-classification":["adapter-transformers","flair","spacy","span-marker","stanza","transformers","transformers.js"],translation:["transformers","transformers.js"],"unconditional-image-generation":["diffusers"],"video-text-to-text":["transformers"],"visual-question-answering":["transformers","transformers.js"],"voice-activity-detection":[],"zero-shot-classification":["transformers","transformers.js"],"zero-shot-image-classification":["transformers","transformers.js"],"zero-shot-object-detection":["transformers","transformers.js"],"text-to-3d":["diffusers"],"image-to-3d":["diffusers"],"any-to-any":["transformers"],"visual-document-retrieval":["transformers"]};function L1(n,a=pa){return{...a,id:n,label:dl[n].name,libraries:p7[n]}}L1("any-to-any",pa),L1("audio-classification",Tf),L1("audio-to-audio",Cf),L1("audio-text-to-text",pa),L1("automatic-speech-recognition",Mf),L1("depth-estimation",Hf),L1("document-question-answering",Of),L1("visual-document-retrieval",pa),L1("feature-extraction",Df),L1("fill-mask",Lf),L1("image-classification",Rf),L1("image-feature-extraction",Uf),L1("image-segmentation",jf),L1("image-to-image",zf),L1("image-text-to-text",If),L1("image-to-text",Nf),L1("keypoint-detection",f7),L1("mask-generation",Bf),L1("object-detection",qf),L1("video-classification",a7),L1("question-answering",Ff),L1("reinforcement-learning",Vf),L1("sentence-similarity",$f),L1("summarization",Pf),L1("table-question-answering",Yf),L1("tabular-classification",Qf),L1("tabular-regression",Xf),L1("text-classification",Wf),L1("text-generation",e7),L1("text-ranking",t7),L1("text-to-image",Gf),L1("text-to-speech",Zf),L1("text-to-video",n7),L1("token-classification",Kf),L1("translation",Jf),L1("unconditional-image-generation",i7),L1("video-text-to-text",d7),L1("visual-question-answering",r7),L1("zero-shot-classification",o7),L1("zero-shot-image-classification",l7),L1("zero-shot-object-detection",s7),L1("text-to-3d",c7),L1("image-to-3d",u7);const h7=()=>'"Hi, I recently bought a device from your company but it is not working as advertised and I would like to get reimbursed!"',m7=()=>'"Меня зовут Вольфганг и я живу в Берлине"',g7=()=>'"The tower is 324 metres (1,063 ft) tall, about the same height as an 81-storey building, and the tallest structure in Paris. Its base is square, measuring 125 metres (410 ft) on each side. During its construction, the Eiffel Tower surpassed the Washington Monument to become the tallest man-made structure in the world, a title it held for 41 years until the Chrysler Building in New York City was finished in 1930. It was the first structure to reach a height of 300 metres. Due to the addition of a broadcasting aerial at the top of the tower in 1957, it is now taller than the Chrysler Building by 5.2 metres (17 ft). Excluding transmitters, the Eiffel Tower is the second tallest free-standing structure in France after the Millau Viaduct."',y7=()=>`{
	"query": "How many stars does the transformers repository have?",
	"table": {
		"Repository": ["Transformers", "Datasets", "Tokenizers"],
		"Stars": ["36542", "4512", "3934"],
		"Contributors": ["651", "77", "34"],
		"Programming language": [
			"Python",
			"Python",
			"Rust, Python and NodeJS"
		]
	}
}`,v7=()=>`{
		"image": "cat.png",
		"question": "What is in this image?"
	}`,b7=()=>`{
	"question": "What is my name?",
	"context": "My name is Clara and I live in Berkeley."
}`,_7=()=>'"I like you. I love you"',w7=()=>'"My name is Sarah Jessica Parker but you can call me Jessica"',K9=n=>n.tags.includes("conversational")?n.pipeline_tag==="text-generation"?[{role:"user",content:"What is the capital of France?"}]:[{role:"user",content:[{type:"text",text:"Describe this image in one sentence."},{type:"image_url",image_url:{url:"https://cdn.britannica.com/61/93061-050-99147DCE/Statue-of-Liberty-Island-New-York-Bay.jpg"}}]}]:'"Can you please let us know more details about your "',x7=()=>'"The answer to the universe is"',S7=n=>`"The answer to the universe is ${n.mask_token}."`,A7=()=>`{
	"source_sentence": "That is a happy person",
	"sentences": [
		"That is a happy dog",
		"That is a very happy person",
		"Today is a sunny day"
	]
}`,k7=()=>'"Today is a sunny day and I will get some ice cream."',E7=()=>'"cats.jpg"',T7=()=>'"cats.jpg"',C7=()=>`{
	"image": "cat.png",
	"prompt": "Turn the cat into a tiger."
}`,M7=()=>'"cats.jpg"',O7=()=>'"cats.jpg"',D7=()=>'"sample1.flac"',L7=()=>'"sample1.flac"',R7=()=>'"Astronaut riding a horse"',U7=()=>'"A young man walking on the street"',z7=()=>'"The answer to the universe is 42"',N7=()=>'"liquid drum and bass, atmospheric synths, airy sounds"',I7=()=>'"sample1.flac"',J9=()=>`'{"Height":[11.52,12.48],"Length1":[23.2,24.0],"Length2":[25.4,26.3],"Species": ["Bream","Bream"]}'`,j7=()=>'"cats.jpg"',B7={"audio-to-audio":D7,"audio-classification":L7,"automatic-speech-recognition":I7,"document-question-answering":v7,"feature-extraction":k7,"fill-mask":S7,"image-classification":E7,"image-to-text":T7,"image-to-image":C7,"image-segmentation":M7,"object-detection":O7,"question-answering":b7,"sentence-similarity":A7,summarization:g7,"table-question-answering":y7,"tabular-regression":J9,"tabular-classification":J9,"text-classification":_7,"text-generation":K9,"image-text-to-text":K9,"text-to-image":R7,"text-to-video":U7,"text-to-speech":z7,"text-to-audio":N7,"text2text-generation":x7,"token-classification":w7,translation:m7,"zero-shot-classification":h7,"zero-shot-image-classification":j7};function ti(n,a=!1,r=!1){if(n.pipeline_tag){const l=B7[n.pipeline_tag];if(l){let s=l(n);if(typeof s=="string"&&(a&&(s=s.replace(/(?:(?:\r?\n|\r)\t*)|\t+/g," ")),r)){const c=/^"(.+)"$/s,d=s.match(c);s=d?d[1]:s}return s}}return"No input example has been defined for this model task."}function q7(n,a){let r=JSON.stringify(n,null,"	");return a!=null&&a.indent&&(r=r.replaceAll(`
`,`
${a.indent}`)),a!=null&&a.attributeKeyQuotes||(r=r.replace(/"([^"]+)":/g,"$1:")),a!=null&&a.customContentEscaper&&(r=a.customContentEscaper(r)),r}const sc="custom_code";function dt(n){const a=n.split("/");return a.length===1?a[0]:a[1]}const H7=n=>JSON.stringify(n).slice(1,-1),V7=n=>{var a,r;return[`from adapters import AutoAdapterModel

model = AutoAdapterModel.from_pretrained("${(r=(a=n.config)==null?void 0:a.adapter_transformers)==null?void 0:r.model_name}")
model.load_adapter("${n.id}", set_active=True)`]},F7=n=>[`import allennlp_models
from allennlp.predictors.predictor import Predictor

predictor = Predictor.from_path("hf://${n.id}")`],$7=n=>[`import allennlp_models
from allennlp.predictors.predictor import Predictor

predictor = Predictor.from_path("hf://${n.id}")
predictor_input = {"passage": "My name is Wolfgang and I live in Berlin", "question": "Where do I live?"}
predictions = predictor.predict_json(predictor_input)`],P7=n=>n.tags.includes("question-answering")?$7(n):F7(n),Y7=n=>[`from araclip import AraClip

model = AraClip.from_pretrained("${n.id}")`],Q7=n=>[`from asteroid.models import BaseModel

model = BaseModel.from_pretrained("${n.id}")`],X7=n=>{const a=`# Watermark Generator
from audioseal import AudioSeal

model = AudioSeal.load_generator("${n.id}")
# pass a tensor (tensor_wav) of shape (batch, channels, samples) and a sample rate
wav, sr = tensor_wav, 16000
	
watermark = model.get_watermark(wav, sr)
watermarked_audio = wav + watermark`,r=`# Watermark Detector
from audioseal import AudioSeal

detector = AudioSeal.load_detector("${n.id}")
	
result, message = detector.detect_watermark(watermarked_audio, sr)`;return[a,r]};function pl(n){var a,r;return((r=(a=n.cardData)==null?void 0:a.base_model)==null?void 0:r.toString())??"fill-in-base-model"}function uc(n){var r,l,s;const a=((l=(r=n.widgetData)==null?void 0:r[0])==null?void 0:l.text)??((s=n.cardData)==null?void 0:s.instance_prompt);if(a)return H7(a)}const G7=n=>[`import requests
from PIL import Image
from ben2 import AutoModel

url = "https://huggingface.co/datasets/mishig/sample_images/resolve/main/teapot.jpg"
image = Image.open(requests.get(url, stream=True).raw)

model = AutoModel.from_pretrained("${n.id}")
model.to("cuda").eval()
foreground = model.inference(image)
`],Z7=n=>[`from bertopic import BERTopic

model = BERTopic.load("${n.id}")`],K7=n=>[`from bm25s.hf import BM25HF

retriever = BM25HF.load_from_hub("${n.id}")`],J7=()=>[`# pip install git+https://github.com/Google-Health/cxr-foundation.git#subdirectory=python

# Load image as grayscale (Stillwaterising, CC0, via Wikimedia Commons)
import requests
from PIL import Image
from io import BytesIO
image_url = "https://upload.wikimedia.org/wikipedia/commons/c/c8/Chest_Xray_PA_3-8-2010.png"
img = Image.open(requests.get(image_url, headers={'User-Agent': 'Demo'}, stream=True).raw).convert('L')

# Run inference
from clientside.clients import make_hugging_face_client
cxr_client = make_hugging_face_client('cxr_model')
print(cxr_client.get_image_embeddings_from_images([img]))`],W7=n=>{let a,r,l;return a="<ENCODER>",r="<NUMBER_OF_FEATURES>",l="<OUT_CHANNELS>",n.id==="depth-anything/Depth-Anything-V2-Small"?(a="vits",r="64",l="[48, 96, 192, 384]"):n.id==="depth-anything/Depth-Anything-V2-Base"?(a="vitb",r="128",l="[96, 192, 384, 768]"):n.id==="depth-anything/Depth-Anything-V2-Large"&&(a="vitl",r="256",l="[256, 512, 1024, 1024"),[`
# Install from https://github.com/DepthAnything/Depth-Anything-V2

# Load the model and infer depth from an image
import cv2
import torch

from depth_anything_v2.dpt import DepthAnythingV2

# instantiate the model
model = DepthAnythingV2(encoder="${a}", features=${r}, out_channels=${l})

# load the weights
filepath = hf_hub_download(repo_id="${n.id}", filename="depth_anything_v2_${a}.pth", repo_type="model")
state_dict = torch.load(filepath, map_location="cpu")
model.load_state_dict(state_dict).eval()

raw_img = cv2.imread("your/image/path")
depth = model.infer_image(raw_img) # HxW raw depth map in numpy
    `]},ed=n=>[`# Download checkpoint
pip install huggingface-hub
huggingface-cli download --local-dir checkpoints ${n.id}`,`import depth_pro

# Load model and preprocessing transform
model, transform = depth_pro.create_model_and_transforms()
model.eval()

# Load and preprocess an image.
image, _, f_px = depth_pro.load_rgb("example.png")
image = transform(image)

# Run inference.
prediction = model.infer(image, f_px=f_px)

# Results: 1. Depth in meters
depth = prediction["depth"]
# Results: 2. Focal length in pixels
focallength_px = prediction["focallength_px"]`],td=()=>[`from huggingface_hub import from_pretrained_keras
import tensorflow as tf, requests

# Load and format input
IMAGE_URL = "https://storage.googleapis.com/dx-scin-public-data/dataset/images/3445096909671059178.png"
input_tensor = tf.train.Example(
    features=tf.train.Features(
        feature={
            "image/encoded": tf.train.Feature(
                bytes_list=tf.train.BytesList(value=[requests.get(IMAGE_URL, stream=True).content])
            )
        }
    )
).SerializeToString()

# Load model and run inference
loaded_model = from_pretrained_keras("google/derm-foundation")
infer = loaded_model.signatures["serving_default"]
print(infer(inputs=tf.constant([input_tensor])))`],cc="Astronaut in a jungle, cold color palette, muted colors, detailed, 8k",nd=n=>[`from diffusers import DiffusionPipeline

pipe = DiffusionPipeline.from_pretrained("${n.id}")

prompt = "${uc(n)??cc}"
image = pipe(prompt).images[0]`],id=n=>[`from diffusers import ControlNetModel, StableDiffusionControlNetPipeline

controlnet = ControlNetModel.from_pretrained("${n.id}")
pipe = StableDiffusionControlNetPipeline.from_pretrained(
	"${pl(n)}", controlnet=controlnet
)`],ad=n=>[`from diffusers import DiffusionPipeline

pipe = DiffusionPipeline.from_pretrained("${pl(n)}")
pipe.load_lora_weights("${n.id}")

prompt = "${uc(n)??cc}"
image = pipe(prompt).images[0]`],rd=n=>[`from diffusers import DiffusionPipeline

pipe = DiffusionPipeline.from_pretrained("${pl(n)}")
pipe.load_textual_inversion("${n.id}")`],od=n=>n.tags.includes("controlnet")?id(n):n.tags.includes("lora")?ad(n):n.tags.includes("textual_inversion")?rd(n):nd(n),ld=n=>{const a=`# Pipeline for Stable Diffusion 3
from diffusionkit.mlx import DiffusionPipeline

pipeline = DiffusionPipeline(
	shift=3.0,
	use_t5=False,
	model_version=${n.id},
	low_memory_mode=True,
	a16=True,
	w16=True,
)`,r=`# Pipeline for Flux
from diffusionkit.mlx import FluxPipeline

pipeline = FluxPipeline(
  shift=1.0,
  model_version=${n.id},
  low_memory_mode=True,
  a16=True,
  w16=True,
)`,l=`# Image Generation
HEIGHT = 512
WIDTH = 512
NUM_STEPS = ${n.tags.includes("flux")?4:50}
CFG_WEIGHT = ${n.tags.includes("flux")?0:5}

image, _ = pipeline.generate_image(
  "a photo of a cat",
  cfg_weight=CFG_WEIGHT,
  num_steps=NUM_STEPS,
  latent_size=(HEIGHT // 8, WIDTH // 8),
)`;return[n.tags.includes("flux")?r:a,l]},sd=n=>[`# pip install --no-binary :all: cartesia-pytorch
from cartesia_pytorch import ReneLMHeadModel
from transformers import AutoTokenizer

model = ReneLMHeadModel.from_pretrained("${n.id}")
tokenizer = AutoTokenizer.from_pretrained("allenai/OLMo-1B-hf")

in_message = ["Rene Descartes was"]
inputs = tokenizer(in_message, return_tensors="pt")

outputs = model.generate(inputs.input_ids, max_length=50, top_k=100, top_p=0.99)
out_message = tokenizer.batch_decode(outputs, skip_special_tokens=True)[0]

print(out_message)
)`],ud=n=>[`import mlx.core as mx
import cartesia_mlx as cmx

model = cmx.from_pretrained("${n.id}")
model.set_dtype(mx.float32)   

prompt = "Rene Descartes was"

for text in model.generate(
    prompt,
    max_tokens=500,
    eval_every_n=5,
    verbose=True,
    top_p=0.99,
    temperature=0.85,
):
    print(text, end="", flush=True)
`],cd=n=>{const a=dt(n.id).replaceAll("-","_");return[`# Load it from the Hub directly
import edsnlp
nlp = edsnlp.load("${n.id}")
`,`# Or install it as a package
!pip install git+https://huggingface.co/${n.id}

# and import it as a module
import ${a}

nlp = ${a}.load()  # or edsnlp.load("${a}")
`]},fd=n=>[`from espnet2.bin.tts_inference import Text2Speech

model = Text2Speech.from_pretrained("${n.id}")

speech, *_ = model("text to generate speech from")`],dd=n=>[`from espnet2.bin.asr_inference import Speech2Text

model = Speech2Text.from_pretrained(
  "${n.id}"
)

speech, rate = soundfile.read("speech.wav")
text, *_ = model(speech)[0]`],pd=()=>["unknown model type (must be text-to-speech or automatic-speech-recognition)"],hd=n=>n.tags.includes("text-to-speech")?fd(n):n.tags.includes("automatic-speech-recognition")?dd(n):pd(),md=n=>[`from fairseq.checkpoint_utils import load_model_ensemble_and_task_from_hf_hub

models, cfg, task = load_model_ensemble_and_task_from_hf_hub(
    "${n.id}"
)`],gd=n=>[`from flair.models import SequenceTagger

tagger = SequenceTagger.load("${n.id}")`],yd=n=>[`from gliner import GLiNER

model = GLiNER.from_pretrained("${n.id}")`],vd=n=>[`# CLI usage
# see docs: https://ai-riksarkivet.github.io/htrflow/latest/getting_started/quick_start.html
htrflow pipeline <path/to/pipeline.yaml> <path/to/image>`,`# Python usage
from htrflow.pipeline.pipeline import Pipeline
from htrflow.pipeline.steps import Task
from htrflow.models.framework.model import ModelClass

pipeline = Pipeline(
    [
        Task(
            ModelClass, {"model": "${n.id}"}, {}
        ),
    ])`],bd=n=>[`# Available backend options are: "jax", "torch", "tensorflow".
import os
os.environ["KERAS_BACKEND"] = "jax"
	
import keras

model = keras.saving.load_model("hf://${n.id}")
`],_d=n=>`
import keras_hub

# Load CausalLM model (optional: use half precision for inference)
causal_lm = keras_hub.models.CausalLM.from_preset("hf://${n}", dtype="bfloat16")
causal_lm.compile(sampler="greedy")  # (optional) specify a sampler

# Generate text
causal_lm.generate("Keras: deep learning for", max_length=64)
`,wd=n=>`
import keras_hub

# Load TextToImage model (optional: use half precision for inference)
text_to_image = keras_hub.models.TextToImage.from_preset("hf://${n}", dtype="bfloat16")

# Generate images with a TextToImage model.
text_to_image.generate("Astronaut in a jungle")
`,xd=n=>`
import keras_hub

# Load TextClassifier model
text_classifier = keras_hub.models.TextClassifier.from_preset(
    "hf://${n}",
    num_classes=2,
)
# Fine-tune
text_classifier.fit(x=["Thilling adventure!", "Total snoozefest."], y=[1, 0])
# Classify text
text_classifier.predict(["Not my cup of tea."])
`,Sd=n=>`
import keras_hub
import keras

# Load ImageClassifier model
image_classifier = keras_hub.models.ImageClassifier.from_preset(
    "hf://${n}",
    num_classes=2,
)
# Fine-tune
image_classifier.fit(
    x=keras.random.randint((32, 64, 64, 3), 0, 256),
    y=keras.random.randint((32, 1), 0, 2),
)
# Classify image
image_classifier.predict(keras.random.randint((1, 64, 64, 3), 0, 256))
`,W9={CausalLM:_d,TextToImage:wd,TextClassifier:xd,ImageClassifier:Sd},Ad=(n,a)=>`
import keras_hub

# Create a ${n} model
task = keras_hub.models.${n}.from_preset("hf://${a}")
`,kd=n=>`
import keras_hub

# Create a Backbone model unspecialized for any task
backbone = keras_hub.models.Backbone.from_preset("hf://${n}")
`,Ed=n=>{var s,c;const a=n.id,r=((c=(s=n.config)==null?void 0:s.keras_hub)==null?void 0:c.tasks)??[],l=[];for(const[d,h]of Object.entries(W9))r.includes(d)&&l.push(h(a));for(const d of r)Object.keys(W9).includes(d)||l.push(Ad(d,a));return l.push(kd(a)),l},Td=n=>{const a=[`from llama_cpp import Llama

llm = Llama.from_pretrained(
	repo_id="${n.id}",
	filename="{{GGUF_FILE}}",
)
`];if(n.tags.includes("conversational")){const r=ti(n);a.push(`llm.create_chat_completion(
	messages = ${q7(r,{attributeKeyQuotes:!0,indent:"	"})}
)`)}else a.push(`output = llm(
	"Once upon a time,",
	max_tokens=512,
	echo=True
)
print(output)`);return a},Cd=n=>[`# Note: 'keras<3.x' or 'tf_keras' must be installed (legacy)
# See https://github.com/keras-team/tf-keras for more details.
from huggingface_hub import from_pretrained_keras

model = from_pretrained_keras("${n.id}")
`],Md=n=>[`from mamba_ssm import MambaLMHeadModel

model = MambaLMHeadModel.from_pretrained("${n.id}")`],Od=n=>[`# Install from https://github.com/Camb-ai/MARS5-TTS

from inference import Mars5TTS
mars5 = Mars5TTS.from_pretrained("${n.id}")`],Dd=n=>[`# Install from https://github.com/pq-yang/MatAnyone.git

from matanyone.model.matanyone import MatAnyone
model = MatAnyone.from_pretrained("${n.id}")`],Ld=()=>[`# Install from https://github.com/buaacyw/MeshAnything.git

from MeshAnything.models.meshanything import MeshAnything

# refer to https://github.com/buaacyw/MeshAnything/blob/main/main.py#L91 on how to define args
# and https://github.com/buaacyw/MeshAnything/blob/main/app.py regarding usage
model = MeshAnything(args)`],Rd=n=>[`import open_clip

model, preprocess_train, preprocess_val = open_clip.create_model_and_transforms('hf-hub:${n.id}')
tokenizer = open_clip.get_tokenizer('hf-hub:${n.id}')`],Ud=n=>{var a,r;if((r=(a=n.config)==null?void 0:a.architectures)!=null&&r[0]){const l=n.config.architectures[0];return[[`from paddlenlp.transformers import AutoTokenizer, ${l}`,"",`tokenizer = AutoTokenizer.from_pretrained("${n.id}", from_hf_hub=True)`,`model = ${l}.from_pretrained("${n.id}", from_hf_hub=True)`].join(`
`)]}else return[["# ⚠️ Type of model unknown","from paddlenlp.transformers import AutoTokenizer, AutoModel","",`tokenizer = AutoTokenizer.from_pretrained("${n.id}", from_hf_hub=True)`,`model = AutoModel.from_pretrained("${n.id}", from_hf_hub=True)`].join(`
`)]},zd=n=>[`from pyannote.audio import Pipeline
  
pipeline = Pipeline.from_pretrained("${n.id}")

# inference on the whole file
pipeline("file.wav")

# inference on an excerpt
from pyannote.core import Segment
excerpt = Segment(start=2.0, end=5.0)

from pyannote.audio import Audio
waveform, sample_rate = Audio().crop("file.wav", excerpt)
pipeline({"waveform": waveform, "sample_rate": sample_rate})`],Nd=n=>[`from pyannote.audio import Model, Inference

model = Model.from_pretrained("${n.id}")
inference = Inference(model)

# inference on the whole file
inference("file.wav")

# inference on an excerpt
from pyannote.core import Segment
excerpt = Segment(start=2.0, end=5.0)
inference.crop("file.wav", excerpt)`],Id=n=>n.tags.includes("pyannote-audio-pipeline")?zd(n):Nd(n),jd=n=>[`from relik import Relik
 
relik = Relik.from_pretrained("${n.id}")`],Bd=n=>[`from tensorflow_tts.inference import AutoProcessor, TFAutoModel

processor = AutoProcessor.from_pretrained("${n.id}")
model = TFAutoModel.from_pretrained("${n.id}")
`],qd=n=>[`from tensorflow_tts.inference import TFAutoModel

model = TFAutoModel.from_pretrained("${n.id}")
audios = model.inference(mels)
`],Hd=n=>[`from tensorflow_tts.inference import TFAutoModel

model = TFAutoModel.from_pretrained("${n.id}")
`],Vd=n=>n.tags.includes("text-to-mel")?Bd(n):n.tags.includes("mel-to-wav")?qd(n):Hd(n),Fd=n=>[`import timm

model = timm.create_model("hf_hub:${n.id}", pretrained=True)`],$d=()=>[`# pip install sae-lens
from sae_lens import SAE

sae, cfg_dict, sparsity = SAE.from_pretrained(
    release = "RELEASE_ID", # e.g., "gpt2-small-res-jb". See other options in https://github.com/jbloomAus/SAELens/blob/main/sae_lens/pretrained_saes.yaml
    sae_id = "SAE_ID", # e.g., "blocks.8.hook_resid_pre". Won't always be a hook point
)`],Pd=()=>[`# seed_story_cfg_path refers to 'https://github.com/TencentARC/SEED-Story/blob/master/configs/clm_models/agent_7b_sft.yaml'
# llm_cfg_path refers to 'https://github.com/TencentARC/SEED-Story/blob/master/configs/clm_models/llama2chat7b_lora.yaml'
from omegaconf import OmegaConf
import hydra

# load Llama2
llm_cfg = OmegaConf.load(llm_cfg_path)
llm = hydra.utils.instantiate(llm_cfg, torch_dtype="fp16")

# initialize seed_story
seed_story_cfg = OmegaConf.load(seed_story_cfg_path)
seed_story = hydra.utils.instantiate(seed_story_cfg, llm=llm) `],Yd=(n,a)=>[`import joblib
from skops.hub_utils import download
download("${n.id}", "path_to_folder")
model = joblib.load(
	"${a}"
)
# only load pickle files from sources you trust
# read more about it here https://skops.readthedocs.io/en/stable/persistence.html`],Qd=(n,a)=>[`from skops.hub_utils import download
from skops.io import load
download("${n.id}", "path_to_folder")
# make sure model file is in skops format
# if model is a pickle file, make sure it's from a source you trust
model = load("path_to_folder/${a}")`],Xd=n=>[`from huggingface_hub import hf_hub_download
import joblib
model = joblib.load(
	hf_hub_download("${n.id}", "sklearn_model.joblib")
)
# only load pickle files from sources you trust
# read more about it here https://skops.readthedocs.io/en/stable/persistence.html`],Gd=n=>{var a,r,l,s,c;if(n.tags.includes("skops")){const d=(l=(r=(a=n.config)==null?void 0:a.sklearn)==null?void 0:r.model)==null?void 0:l.file,h=(c=(s=n.config)==null?void 0:s.sklearn)==null?void 0:c.model_format;return d?h==="pickle"?Yd(n,d):Qd(n,d):["# ⚠️ Model filename not specified in config.json"]}else return Xd(n)},Zd=n=>[`import torch
import torchaudio
from einops import rearrange
from stable_audio_tools import get_pretrained_model
from stable_audio_tools.inference.generation import generate_diffusion_cond

device = "cuda" if torch.cuda.is_available() else "cpu"

# Download model
model, model_config = get_pretrained_model("${n.id}")
sample_rate = model_config["sample_rate"]
sample_size = model_config["sample_size"]

model = model.to(device)

# Set up text and timing conditioning
conditioning = [{
	"prompt": "128 BPM tech house drum loop",
}]

# Generate stereo audio
output = generate_diffusion_cond(
	model,
	conditioning=conditioning,
	sample_size=sample_size,
	device=device
)

# Rearrange audio batch to a single sequence
output = rearrange(output, "b d n -> d (b n)")

# Peak normalize, clip, convert to int16, and save to file
output = output.to(torch.float32).div(torch.max(torch.abs(output))).clamp(-1, 1).mul(32767).to(torch.int16).cpu()
torchaudio.save("output.wav", output, sample_rate)`],Kd=n=>[`from huggingface_hub import from_pretrained_fastai

learn = from_pretrained_fastai("${n.id}")`],Jd=n=>{const a=`# Use SAM2 with images
import torch
from sam2.sam2_image_predictor import SAM2ImagePredictor

predictor = SAM2ImagePredictor.from_pretrained(${n.id})

with torch.inference_mode(), torch.autocast("cuda", dtype=torch.bfloat16):
    predictor.set_image(<your_image>)
    masks, _, _ = predictor.predict(<input_prompts>)`,r=`# Use SAM2 with videos
import torch
from sam2.sam2_video_predictor import SAM2VideoPredictor
	
predictor = SAM2VideoPredictor.from_pretrained(${n.id})

with torch.inference_mode(), torch.autocast("cuda", dtype=torch.bfloat16):
    state = predictor.init_state(<your_video>)

    # add new prompts and instantly get the output on the same frame
    frame_idx, object_ids, masks = predictor.add_new_points(state, <your_prompts>):

    # propagate the prompts to get masklets throughout the video
    for frame_idx, object_ids, masks in predictor.propagate_in_video(state):
        ...`;return[a,r]},Wd=n=>[`python -m sample_factory.huggingface.load_from_hub -r ${n.id} -d ./train_dir`];function ep(n){var r;const a=(r=n.widgetData)==null?void 0:r[0];if(a)return[a.source_sentence,...a.sentences]}const tp=n=>{const a=n.tags.includes(sc)?", trust_remote_code=True":"",r=ep(n)??["The weather is lovely today.","It's so sunny outside!","He drove to the stadium."];return[`from sentence_transformers import SentenceTransformer

model = SentenceTransformer("${n.id}"${a})

sentences = ${JSON.stringify(r,null,4)}
embeddings = model.encode(sentences)

similarities = model.similarity(embeddings, embeddings)
print(similarities.shape)
# [${r.length}, ${r.length}]`]},np=n=>[`from setfit import SetFitModel

model = SetFitModel.from_pretrained("${n.id}")`],ip=n=>[`!pip install https://huggingface.co/${n.id}/resolve/main/${dt(n.id)}-any-py3-none-any.whl

# Using spacy.load().
import spacy
nlp = spacy.load("${dt(n.id)}")

# Importing as module.
import ${dt(n.id)}
nlp = ${dt(n.id)}.load()`],ap=n=>[`from span_marker import SpanMarkerModel

model = SpanMarkerModel.from_pretrained("${n.id}")`],rp=n=>[`import stanza

stanza.download("${dt(n.id).replace("stanza-","")}")
nlp = stanza.Pipeline("${dt(n.id).replace("stanza-","")}")`],op=n=>{switch(n){case"EncoderClassifier":return"classify_file";case"EncoderDecoderASR":case"EncoderASR":return"transcribe_file";case"SpectralMaskEnhancement":return"enhance_file";case"SepformerSeparation":return"separate_file";default:return}},lp=n=>{var l,s;const a=(s=(l=n.config)==null?void 0:l.speechbrain)==null?void 0:s.speechbrain_interface;if(a===void 0)return["# interface not specified in config.json"];const r=op(a);return r===void 0?["# interface in config.json invalid"]:[`from speechbrain.pretrained import ${a}
model = ${a}.from_hparams(
  "${n.id}"
)
model.${r}("file.wav")`]},sp=n=>[`from terratorch.registry import BACKBONE_REGISTRY

model = BACKBONE_REGISTRY.build("${n.id}")`],up=n=>{var s,c,d,h,v;const a=n.transformersInfo;if(!a)return["# ⚠️ Type of model unknown"];const r=n.tags.includes(sc)?", trust_remote_code=True":"";let l;if(a.processor){const p=a.processor==="AutoTokenizer"?"tokenizer":a.processor==="AutoFeatureExtractor"?"extractor":"processor";l=["# Load model directly",`from transformers import ${a.processor}, ${a.auto_model}`,"",`${p} = ${a.processor}.from_pretrained("${n.id}"`+r+")",`model = ${a.auto_model}.from_pretrained("${n.id}"`+r+")"].join(`
`)}else l=["# Load model directly",`from transformers import ${a.auto_model}`,`model = ${a.auto_model}.from_pretrained("${n.id}"`+r+")"].join(`
`);if(n.pipeline_tag&&((s=kf.transformers)!=null&&s.includes(n.pipeline_tag))){const p=["# Use a pipeline as a high-level helper","from transformers import pipeline",""];return n.tags.includes("conversational")&&((d=(c=n.config)==null?void 0:c.tokenizer_config)!=null&&d.chat_template)&&p.push("messages = [",'    {"role": "user", "content": "Who are you?"},',"]"),p.push(`pipe = pipeline("${n.pipeline_tag}", model="${n.id}"`+r+")"),n.tags.includes("conversational")&&((v=(h=n.config)==null?void 0:h.tokenizer_config)!=null&&v.chat_template)&&p.push("pipe(messages)"),[p.join(`
`),l]}return[l]},cp=n=>{if(!n.pipeline_tag)return["// ⚠️ Unknown pipeline tag"];const a="@huggingface/transformers";return[`// npm i ${a}
import { pipeline } from '${a}';

// Allocate pipeline
const pipe = await pipeline('${n.pipeline_tag}', '${n.id}');`]},fp=n=>{switch(n){case"CAUSAL_LM":return"CausalLM";case"SEQ_2_SEQ_LM":return"Seq2SeqLM";case"TOKEN_CLS":return"TokenClassification";case"SEQ_CLS":return"SequenceClassification";default:return}},dp=n=>{var s;const{base_model_name_or_path:a,task_type:r}=((s=n.config)==null?void 0:s.peft)??{},l=fp(r);return l?a?[`from peft import PeftModel
from transformers import AutoModelFor${l}

base_model = AutoModelFor${l}.from_pretrained("${a}")
model = PeftModel.from_pretrained(base_model, "${n.id}")`]:["Base model is not found."]:["Task type is invalid."]},pp=n=>[`from huggingface_hub import hf_hub_download
import fasttext

model = fasttext.load_model(hf_hub_download("${n.id}", "model.bin"))`],hp=n=>[`from huggingface_sb3 import load_from_hub
checkpoint = load_from_hub(
	repo_id="${n.id}",
	filename="{MODEL FILENAME}.zip",
)`],mp=(n,a)=>{switch(n){case"ASR":return[`import nemo.collections.asr as nemo_asr
asr_model = nemo_asr.models.ASRModel.from_pretrained("${a.id}")

transcriptions = asr_model.transcribe(["file.wav"])`];default:return}},gp=n=>[`mlagents-load-from-hf --repo-id="${n.id}" --local-dir="./download: string[]s"`],yp=()=>[`string modelName = "[Your model name here].sentis";
Model model = ModelLoader.Load(Application.streamingAssetsPath + "/" + modelName);
IWorker engine = WorkerFactory.CreateWorker(BackendType.GPUCompute, model);
// Please see provided C# file for more details
`],vp=n=>[`
# Load the model and infer image from text
import torch
from app.sana_pipeline import SanaPipeline
from torchvision.utils import save_image

sana = SanaPipeline("configs/sana_config/1024ms/Sana_1600M_img1024.yaml")
sana.from_pretrained("hf://${n.id}")

image = sana(
    prompt='a cyberpunk cat with a neon sign that says "Sana"',
    height=1024,
    width=1024,
    guidance_scale=5.0,
    pag_guidance_scale=2.0,
    num_inference_steps=18,
) `],bp=n=>[`from Trainer_finetune import Model

model = Model.from_pretrained("${n.id}")`],_p=n=>[`from voicecraft import VoiceCraft

model = VoiceCraft.from_pretrained("${n.id}")`],wp=()=>[`import ChatTTS
import torchaudio

chat = ChatTTS.Chat()
chat.load_models(compile=False) # Set to True for better performance

texts = ["PUT YOUR TEXT HERE",]

wavs = chat.infer(texts, )

torchaudio.save("output1.wav", torch.from_numpy(wavs[0]), 24000)`],eu=n=>{const a=n.tags.find(s=>s.match(/^yolov\d+$/)),r=a?`YOLOv${a.slice(4)}`:"YOLOvXX";return[(a?"":`# Couldn't find a valid YOLO version tag.
# Replace XX with the correct version.
`)+`from ultralytics import ${r}

model = ${r}.from_pretrained("${n.id}")
source = 'http://images.cocodataset.org/val2017/000000039769.jpg'
model.predict(source=source, save=True)`]},xp=n=>[`# Option 1: use with transformers

from transformers import AutoModelForImageSegmentation
birefnet = AutoModelForImageSegmentation.from_pretrained("${n.id}", trust_remote_code=True)
`,`# Option 2: use with BiRefNet

# Install from https://github.com/ZhengPeng7/BiRefNet

from models.birefnet import BiRefNet
model = BiRefNet.from_pretrained("${n.id}")`],Sp=n=>[`from swarmformer import SwarmFormerModel

model = SwarmFormerModel.from_pretrained("${n.id}")
`],Ap=n=>[`pip install huggingface_hub hf_transfer

export HF_HUB_ENABLE_HF_TRANSFER=1
huggingface-cli download --local-dir ${dt(n.id)} ${n.id}`],kp=n=>[`from mlxim.model import create_model

model = create_model(${n.id})`],Ep=n=>[`from model2vec import StaticModel

model = StaticModel.from_pretrained("${n.id}")`],Tp=n=>{let a;return n.tags.includes("automatic-speech-recognition")&&(a=mp("ASR",n)),a??["# tag did not correspond to a valid NeMo domain."]},Cp=n=>[`from pxia import AutoModel

model = AutoModel.from_pretrained("${n.id}")`],Mp=n=>[`from pythae.models import AutoModel

model = AutoModel.load_from_hf_hub("${n.id}")`],Op=n=>[`from audiocraft.models import MusicGen

model = MusicGen.get_pretrained("${n.id}")

descriptions = ['happy rock', 'energetic EDM', 'sad jazz']
wav = model.generate(descriptions)  # generates 3 samples.`],Dp=n=>[`from audiocraft.models import MAGNeT
	
model = MAGNeT.get_pretrained("${n.id}")

descriptions = ['disco beat', 'energetic EDM', 'funky groove']
wav = model.generate(descriptions)  # generates 3 samples.`],Lp=n=>[`from audiocraft.models import AudioGen
	
model = AudioGen.get_pretrained("${n.id}")
model.set_generation_params(duration=5)  # generate 5 seconds.
descriptions = ['dog barking', 'sirene of an emergency vehicle', 'footsteps in a corridor']
wav = model.generate(descriptions)  # generates 3 samples.`],Rp=n=>[`from anemoi.inference.runners.default import DefaultRunner
from anemoi.inference.config import Configuration
# Create Configuration
config = Configuration(checkpoint = {"huggingface":{"repo_id":"${n.id}"}})
# Load Runner
runner = DefaultRunner(config)`],Up=n=>n.tags.includes("musicgen")?Op(n):n.tags.includes("audiogen")?Lp(n):n.tags.includes("magnet")?Dp(n):["# Type of model unknown."],zp=()=>[`# Install CLI with Homebrew on macOS device
brew install whisperkit-cli

# View all available inference options
whisperkit-cli transcribe --help
	
# Download and run inference using whisper base model
whisperkit-cli transcribe --audio-path /path/to/audio.mp3

# Or use your preferred model variant
whisperkit-cli transcribe --model "large-v3" --model-prefix "distil" --audio-path /path/to/audio.mp3 --verbose`],Np=n=>[`from threedtopia_xl.models import threedtopia_xl

model = threedtopia_xl.from_pretrained("${n.id}")
model.generate(cond="path/to/image.png")`],Ip={"adapter-transformers":{prettyLabel:"Adapters",repoName:"adapters",repoUrl:"https://github.com/Adapter-Hub/adapters",docsUrl:"https://huggingface.co/docs/hub/adapters",snippets:V7,filter:!0,countDownloads:'path:"adapter_config.json"'},allennlp:{prettyLabel:"AllenNLP",repoName:"AllenNLP",repoUrl:"https://github.com/allenai/allennlp",docsUrl:"https://huggingface.co/docs/hub/allennlp",snippets:P7,filter:!0},anemoi:{prettyLabel:"AnemoI",repoName:"AnemoI",repoUrl:"https://github.com/ecmwf/anemoi-inference",docsUrl:"https://anemoi-docs.readthedocs.io/en/latest/",filter:!1,countDownloads:'path_extension:"ckpt"',snippets:Rp},araclip:{prettyLabel:"AraClip",repoName:"AraClip",repoUrl:"https://huggingface.co/Arabic-Clip/araclip",filter:!1,snippets:Y7},asteroid:{prettyLabel:"Asteroid",repoName:"Asteroid",repoUrl:"https://github.com/asteroid-team/asteroid",docsUrl:"https://huggingface.co/docs/hub/asteroid",snippets:Q7,filter:!0,countDownloads:'path:"pytorch_model.bin"'},audiocraft:{prettyLabel:"Audiocraft",repoName:"audiocraft",repoUrl:"https://github.com/facebookresearch/audiocraft",snippets:Up,filter:!1,countDownloads:'path:"state_dict.bin"'},audioseal:{prettyLabel:"AudioSeal",repoName:"audioseal",repoUrl:"https://github.com/facebookresearch/audioseal",filter:!1,countDownloads:'path_extension:"pth"',snippets:X7},ben2:{prettyLabel:"BEN2",repoName:"BEN2",repoUrl:"https://github.com/PramaLLC/BEN2",snippets:G7,filter:!1},bertopic:{prettyLabel:"BERTopic",repoName:"BERTopic",repoUrl:"https://github.com/MaartenGr/BERTopic",snippets:Z7,filter:!0},big_vision:{prettyLabel:"Big Vision",repoName:"big_vision",repoUrl:"https://github.com/google-research/big_vision",filter:!1,countDownloads:'path_extension:"npz"'},birder:{prettyLabel:"Birder",repoName:"Birder",repoUrl:"https://gitlab.com/birder/birder",filter:!1,countDownloads:'path_extension:"pt"'},birefnet:{prettyLabel:"BiRefNet",repoName:"BiRefNet",repoUrl:"https://github.com/ZhengPeng7/BiRefNet",snippets:xp,filter:!1},bm25s:{prettyLabel:"BM25S",repoName:"bm25s",repoUrl:"https://github.com/xhluca/bm25s",snippets:K7,filter:!1,countDownloads:'path:"params.index.json"'},champ:{prettyLabel:"Champ",repoName:"Champ",repoUrl:"https://github.com/fudan-generative-vision/champ",countDownloads:'path:"champ/motion_module.pth"'},chat_tts:{prettyLabel:"ChatTTS",repoName:"ChatTTS",repoUrl:"https://github.com/2noise/ChatTTS.git",snippets:wp,filter:!1,countDownloads:'path:"asset/GPT.pt"'},colpali:{prettyLabel:"ColPali",repoName:"ColPali",repoUrl:"https://github.com/ManuelFay/colpali",filter:!1,countDownloads:'path:"adapter_config.json"'},comet:{prettyLabel:"COMET",repoName:"COMET",repoUrl:"https://github.com/Unbabel/COMET/",countDownloads:'path:"hparams.yaml"'},cosmos:{prettyLabel:"Cosmos",repoName:"Cosmos",repoUrl:"https://github.com/NVIDIA/Cosmos",countDownloads:'path:"config.json" OR path_extension:"pt"'},"cxr-foundation":{prettyLabel:"CXR Foundation",repoName:"cxr-foundation",repoUrl:"https://github.com/google-health/cxr-foundation",snippets:J7,filter:!1,countDownloads:'path:"precomputed_embeddings/embeddings.npz" OR path:"pax-elixr-b-text/saved_model.pb"'},deepforest:{prettyLabel:"DeepForest",repoName:"deepforest",docsUrl:"https://deepforest.readthedocs.io/en/latest/",repoUrl:"https://github.com/weecology/DeepForest"},"depth-anything-v2":{prettyLabel:"DepthAnythingV2",repoName:"Depth Anything V2",repoUrl:"https://github.com/DepthAnything/Depth-Anything-V2",snippets:W7,filter:!1,countDownloads:'path_extension:"pth"'},"depth-pro":{prettyLabel:"Depth Pro",repoName:"Depth Pro",repoUrl:"https://github.com/apple/ml-depth-pro",countDownloads:'path_extension:"pt"',snippets:ed,filter:!1},"derm-foundation":{prettyLabel:"Derm Foundation",repoName:"derm-foundation",repoUrl:"https://github.com/google-health/derm-foundation",snippets:td,filter:!1,countDownloads:'path:"scin_dataset_precomputed_embeddings.npz" OR path:"saved_model.pb"'},diffree:{prettyLabel:"Diffree",repoName:"Diffree",repoUrl:"https://github.com/OpenGVLab/Diffree",filter:!1,countDownloads:'path:"diffree-step=000010999.ckpt"'},diffusers:{prettyLabel:"Diffusers",repoName:"🤗/diffusers",repoUrl:"https://github.com/huggingface/diffusers",docsUrl:"https://huggingface.co/docs/hub/diffusers",snippets:od,filter:!0},diffusionkit:{prettyLabel:"DiffusionKit",repoName:"DiffusionKit",repoUrl:"https://github.com/argmaxinc/DiffusionKit",snippets:ld},doctr:{prettyLabel:"docTR",repoName:"doctr",repoUrl:"https://github.com/mindee/doctr"},cartesia_pytorch:{prettyLabel:"Cartesia Pytorch",repoName:"Cartesia Pytorch",repoUrl:"https://github.com/cartesia-ai/cartesia_pytorch",snippets:sd},cartesia_mlx:{prettyLabel:"Cartesia MLX",repoName:"Cartesia MLX",repoUrl:"https://github.com/cartesia-ai/cartesia_mlx",snippets:ud},clipscope:{prettyLabel:"clipscope",repoName:"clipscope",repoUrl:"https://github.com/Lewington-pitsos/clipscope",filter:!1,countDownloads:'path_extension:"pt"'},cosyvoice:{prettyLabel:"CosyVoice",repoName:"CosyVoice",repoUrl:"https://github.com/FunAudioLLM/CosyVoice",filter:!1,countDownloads:'path_extension:"onnx" OR path_extension:"pt"'},cotracker:{prettyLabel:"CoTracker",repoName:"CoTracker",repoUrl:"https://github.com/facebookresearch/co-tracker",filter:!1,countDownloads:'path_extension:"pth"'},edsnlp:{prettyLabel:"EDS-NLP",repoName:"edsnlp",repoUrl:"https://github.com/aphp/edsnlp",docsUrl:"https://aphp.github.io/edsnlp/latest/",filter:!1,snippets:cd,countDownloads:'path_filename:"config" AND path_extension:"cfg"'},elm:{prettyLabel:"ELM",repoName:"elm",repoUrl:"https://github.com/slicex-ai/elm",filter:!1,countDownloads:'path_filename:"slicex_elm_config" AND path_extension:"json"'},espnet:{prettyLabel:"ESPnet",repoName:"ESPnet",repoUrl:"https://github.com/espnet/espnet",docsUrl:"https://huggingface.co/docs/hub/espnet",snippets:hd,filter:!0},fairseq:{prettyLabel:"Fairseq",repoName:"fairseq",repoUrl:"https://github.com/pytorch/fairseq",snippets:md,filter:!0},fastai:{prettyLabel:"fastai",repoName:"fastai",repoUrl:"https://github.com/fastai/fastai",docsUrl:"https://huggingface.co/docs/hub/fastai",snippets:Kd,filter:!0},fasttext:{prettyLabel:"fastText",repoName:"fastText",repoUrl:"https://fasttext.cc/",snippets:pp,filter:!0,countDownloads:'path_extension:"bin"'},flair:{prettyLabel:"Flair",repoName:"Flair",repoUrl:"https://github.com/flairNLP/flair",docsUrl:"https://huggingface.co/docs/hub/flair",snippets:gd,filter:!0,countDownloads:'path:"pytorch_model.bin"'},"gemma.cpp":{prettyLabel:"gemma.cpp",repoName:"gemma.cpp",repoUrl:"https://github.com/google/gemma.cpp",filter:!1,countDownloads:'path_extension:"sbs"'},gliner:{prettyLabel:"GLiNER",repoName:"GLiNER",repoUrl:"https://github.com/urchade/GLiNER",snippets:yd,filter:!1,countDownloads:'path:"gliner_config.json"'},"glyph-byt5":{prettyLabel:"Glyph-ByT5",repoName:"Glyph-ByT5",repoUrl:"https://github.com/AIGText/Glyph-ByT5",filter:!1,countDownloads:'path:"checkpoints/byt5_model.pt"'},grok:{prettyLabel:"Grok",repoName:"Grok",repoUrl:"https://github.com/xai-org/grok-1",filter:!1,countDownloads:'path:"ckpt/tensor00000_000" OR path:"ckpt-0/tensor00000_000"'},hallo:{prettyLabel:"Hallo",repoName:"Hallo",repoUrl:"https://github.com/fudan-generative-vision/hallo",countDownloads:'path:"hallo/net.pth"'},hezar:{prettyLabel:"Hezar",repoName:"Hezar",repoUrl:"https://github.com/hezarai/hezar",docsUrl:"https://hezarai.github.io/hezar",countDownloads:'path:"model_config.yaml" OR path:"embedding/embedding_config.yaml"'},htrflow:{prettyLabel:"HTRflow",repoName:"HTRflow",repoUrl:"https://github.com/AI-Riksarkivet/htrflow",docsUrl:"https://ai-riksarkivet.github.io/htrflow",snippets:vd},"hunyuan-dit":{prettyLabel:"HunyuanDiT",repoName:"HunyuanDiT",repoUrl:"https://github.com/Tencent/HunyuanDiT",countDownloads:'path:"pytorch_model_ema.pt" OR path:"pytorch_model_distill.pt"'},"hunyuan3d-2":{prettyLabel:"Hunyuan3D-2",repoName:"Hunyuan3D-2",repoUrl:"https://github.com/Tencent/Hunyuan3D-2",countDownloads:'path_filename:"model_index" OR path_filename:"config"'},imstoucan:{prettyLabel:"IMS Toucan",repoName:"IMS-Toucan",repoUrl:"https://github.com/DigitalPhonetics/IMS-Toucan",countDownloads:'path:"embedding_gan.pt" OR path:"Vocoder.pt" OR path:"ToucanTTS.pt"'},keras:{prettyLabel:"Keras",repoName:"Keras",repoUrl:"https://github.com/keras-team/keras",docsUrl:"https://huggingface.co/docs/hub/keras",snippets:bd,filter:!0,countDownloads:'path:"config.json" OR path_extension:"keras"'},"tf-keras":{prettyLabel:"TF-Keras",repoName:"TF-Keras",repoUrl:"https://github.com/keras-team/tf-keras",docsUrl:"https://huggingface.co/docs/hub/tf-keras",snippets:Cd,countDownloads:'path:"saved_model.pb"'},"keras-hub":{prettyLabel:"KerasHub",repoName:"KerasHub",repoUrl:"https://github.com/keras-team/keras-hub",docsUrl:"https://keras.io/keras_hub/",snippets:Ed,filter:!0},k2:{prettyLabel:"K2",repoName:"k2",repoUrl:"https://github.com/k2-fsa/k2"},liveportrait:{prettyLabel:"LivePortrait",repoName:"LivePortrait",repoUrl:"https://github.com/KwaiVGI/LivePortrait",filter:!1,countDownloads:'path:"liveportrait/landmark.onnx"'},"llama-cpp-python":{prettyLabel:"llama-cpp-python",repoName:"llama-cpp-python",repoUrl:"https://github.com/abetlen/llama-cpp-python",snippets:Td},"mini-omni2":{prettyLabel:"Mini-Omni2",repoName:"Mini-Omni2",repoUrl:"https://github.com/gpt-omni/mini-omni2",countDownloads:'path:"model_config.yaml"'},mindspore:{prettyLabel:"MindSpore",repoName:"mindspore",repoUrl:"https://github.com/mindspore-ai/mindspore"},"mamba-ssm":{prettyLabel:"MambaSSM",repoName:"MambaSSM",repoUrl:"https://github.com/state-spaces/mamba",filter:!1,snippets:Md},"mars5-tts":{prettyLabel:"MARS5-TTS",repoName:"MARS5-TTS",repoUrl:"https://github.com/Camb-ai/MARS5-TTS",filter:!1,countDownloads:'path:"mars5_ar.safetensors"',snippets:Od},matanyone:{prettyLabel:"MatAnyone",repoName:"MatAnyone",repoUrl:"https://github.com/pq-yang/MatAnyone",snippets:Dd,filter:!1},"mesh-anything":{prettyLabel:"MeshAnything",repoName:"MeshAnything",repoUrl:"https://github.com/buaacyw/MeshAnything",filter:!1,countDownloads:'path:"MeshAnything_350m.pth"',snippets:Ld},merlin:{prettyLabel:"Merlin",repoName:"Merlin",repoUrl:"https://github.com/StanfordMIMI/Merlin",filter:!1,countDownloads:'path_extension:"pt"'},medvae:{prettyLabel:"MedVAE",repoName:"MedVAE",repoUrl:"https://github.com/StanfordMIMI/MedVAE",filter:!1,countDownloads:'path_extension:"ckpt"'},mitie:{prettyLabel:"MITIE",repoName:"MITIE",repoUrl:"https://github.com/mit-nlp/MITIE",countDownloads:'path_filename:"total_word_feature_extractor"'},"ml-agents":{prettyLabel:"ml-agents",repoName:"ml-agents",repoUrl:"https://github.com/Unity-Technologies/ml-agents",docsUrl:"https://huggingface.co/docs/hub/ml-agents",snippets:gp,filter:!0,countDownloads:'path_extension:"onnx"'},mlx:{prettyLabel:"MLX",repoName:"MLX",repoUrl:"https://github.com/ml-explore/mlx-examples/tree/main",snippets:Ap,filter:!0},"mlx-image":{prettyLabel:"mlx-image",repoName:"mlx-image",repoUrl:"https://github.com/riccardomusmeci/mlx-image",docsUrl:"https://huggingface.co/docs/hub/mlx-image",snippets:kp,filter:!1,countDownloads:'path:"model.safetensors"'},"mlc-llm":{prettyLabel:"MLC-LLM",repoName:"MLC-LLM",repoUrl:"https://github.com/mlc-ai/mlc-llm",docsUrl:"https://llm.mlc.ai/docs/",filter:!1,countDownloads:'path:"mlc-chat-config.json"'},model2vec:{prettyLabel:"Model2Vec",repoName:"model2vec",repoUrl:"https://github.com/MinishLab/model2vec",snippets:Ep,filter:!1},moshi:{prettyLabel:"Moshi",repoName:"Moshi",repoUrl:"https://github.com/kyutai-labs/moshi",filter:!1,countDownloads:'path:"tokenizer-e351c8d8-checkpoint125.safetensors"'},nemo:{prettyLabel:"NeMo",repoName:"NeMo",repoUrl:"https://github.com/NVIDIA/NeMo",snippets:Tp,filter:!0,countDownloads:'path_extension:"nemo" OR path:"model_config.yaml"'},"open-oasis":{prettyLabel:"open-oasis",repoName:"open-oasis",repoUrl:"https://github.com/etched-ai/open-oasis",countDownloads:'path:"oasis500m.safetensors"'},open_clip:{prettyLabel:"OpenCLIP",repoName:"OpenCLIP",repoUrl:"https://github.com/mlfoundations/open_clip",snippets:Rd,filter:!0,countDownloads:`path:"open_clip_model.safetensors"
			OR path:"model.safetensors"
			OR path:"open_clip_pytorch_model.bin"
			OR path:"pytorch_model.bin"`},"open-sora":{prettyLabel:"Open-Sora",repoName:"Open-Sora",repoUrl:"https://github.com/hpcaitech/Open-Sora",filter:!1,countDownloads:'path:"Open_Sora_v2.safetensors"'},paddlenlp:{prettyLabel:"paddlenlp",repoName:"PaddleNLP",repoUrl:"https://github.com/PaddlePaddle/PaddleNLP",docsUrl:"https://huggingface.co/docs/hub/paddlenlp",snippets:Ud,filter:!0,countDownloads:'path:"model_config.json"'},peft:{prettyLabel:"PEFT",repoName:"PEFT",repoUrl:"https://github.com/huggingface/peft",snippets:dp,filter:!0,countDownloads:'path:"adapter_config.json"'},pxia:{prettyLabel:"pxia",repoName:"pxia",repoUrl:"https://github.com/not-lain/pxia",snippets:Cp,filter:!1},"pyannote-audio":{prettyLabel:"pyannote.audio",repoName:"pyannote-audio",repoUrl:"https://github.com/pyannote/pyannote-audio",snippets:Id,filter:!0},"py-feat":{prettyLabel:"Py-Feat",repoName:"Py-Feat",repoUrl:"https://github.com/cosanlab/py-feat",docsUrl:"https://py-feat.org/",filter:!1},pythae:{prettyLabel:"pythae",repoName:"pythae",repoUrl:"https://github.com/clementchadebec/benchmark_VAE",snippets:Mp,filter:!1},recurrentgemma:{prettyLabel:"RecurrentGemma",repoName:"recurrentgemma",repoUrl:"https://github.com/google-deepmind/recurrentgemma",filter:!1,countDownloads:'path:"tokenizer.model"'},relik:{prettyLabel:"Relik",repoName:"Relik",repoUrl:"https://github.com/SapienzaNLP/relik",snippets:jd,filter:!1},refiners:{prettyLabel:"Refiners",repoName:"Refiners",repoUrl:"https://github.com/finegrain-ai/refiners",docsUrl:"https://refine.rs/",filter:!1,countDownloads:'path:"model.safetensors"'},reverb:{prettyLabel:"Reverb",repoName:"Reverb",repoUrl:"https://github.com/revdotcom/reverb",filter:!1},saelens:{prettyLabel:"SAELens",repoName:"SAELens",repoUrl:"https://github.com/jbloomAus/SAELens",snippets:$d,filter:!1},sam2:{prettyLabel:"sam2",repoName:"sam2",repoUrl:"https://github.com/facebookresearch/segment-anything-2",filter:!1,snippets:Jd,countDownloads:'path_extension:"pt"'},"sample-factory":{prettyLabel:"sample-factory",repoName:"sample-factory",repoUrl:"https://github.com/alex-petrenko/sample-factory",docsUrl:"https://huggingface.co/docs/hub/sample-factory",snippets:Wd,filter:!0,countDownloads:'path:"cfg.json"'},sapiens:{prettyLabel:"sapiens",repoName:"sapiens",repoUrl:"https://github.com/facebookresearch/sapiens",filter:!1,countDownloads:'path_extension:"pt2" OR path_extension:"pth" OR path_extension:"onnx"'},"sentence-transformers":{prettyLabel:"sentence-transformers",repoName:"sentence-transformers",repoUrl:"https://github.com/UKPLab/sentence-transformers",docsUrl:"https://huggingface.co/docs/hub/sentence-transformers",snippets:tp,filter:!0},setfit:{prettyLabel:"setfit",repoName:"setfit",repoUrl:"https://github.com/huggingface/setfit",docsUrl:"https://huggingface.co/docs/hub/setfit",snippets:np,filter:!0},sklearn:{prettyLabel:"Scikit-learn",repoName:"Scikit-learn",repoUrl:"https://github.com/scikit-learn/scikit-learn",snippets:Gd,filter:!0,countDownloads:'path:"sklearn_model.joblib"'},spacy:{prettyLabel:"spaCy",repoName:"spaCy",repoUrl:"https://github.com/explosion/spaCy",docsUrl:"https://huggingface.co/docs/hub/spacy",snippets:ip,filter:!0,countDownloads:'path_extension:"whl"'},"span-marker":{prettyLabel:"SpanMarker",repoName:"SpanMarkerNER",repoUrl:"https://github.com/tomaarsen/SpanMarkerNER",docsUrl:"https://huggingface.co/docs/hub/span_marker",snippets:ap,filter:!0},speechbrain:{prettyLabel:"speechbrain",repoName:"speechbrain",repoUrl:"https://github.com/speechbrain/speechbrain",docsUrl:"https://huggingface.co/docs/hub/speechbrain",snippets:lp,filter:!0,countDownloads:'path:"hyperparams.yaml"'},"ssr-speech":{prettyLabel:"SSR-Speech",repoName:"SSR-Speech",repoUrl:"https://github.com/WangHelin1997/SSR-Speech",filter:!1,countDownloads:'path_extension:".pth"'},"stable-audio-tools":{prettyLabel:"Stable Audio Tools",repoName:"stable-audio-tools",repoUrl:"https://github.com/Stability-AI/stable-audio-tools.git",filter:!1,countDownloads:'path:"model.safetensors"',snippets:Zd},"diffusion-single-file":{prettyLabel:"Diffusion Single File",repoName:"diffusion-single-file",repoUrl:"https://github.com/comfyanonymous/ComfyUI",filter:!1,countDownloads:'path_extension:"safetensors"'},"seed-story":{prettyLabel:"SEED-Story",repoName:"SEED-Story",repoUrl:"https://github.com/TencentARC/SEED-Story",filter:!1,countDownloads:'path:"cvlm_llama2_tokenizer/tokenizer.model"',snippets:Pd},soloaudio:{prettyLabel:"SoloAudio",repoName:"SoloAudio",repoUrl:"https://github.com/WangHelin1997/SoloAudio",filter:!1,countDownloads:'path:"soloaudio_v2.pt"'},"stable-baselines3":{prettyLabel:"stable-baselines3",repoName:"stable-baselines3",repoUrl:"https://github.com/huggingface/huggingface_sb3",docsUrl:"https://huggingface.co/docs/hub/stable-baselines3",snippets:hp,filter:!0,countDownloads:'path_extension:"zip"'},stanza:{prettyLabel:"Stanza",repoName:"stanza",repoUrl:"https://github.com/stanfordnlp/stanza",docsUrl:"https://huggingface.co/docs/hub/stanza",snippets:rp,filter:!0,countDownloads:'path:"models/default.zip"'},swarmformer:{prettyLabel:"SwarmFormer",repoName:"SwarmFormer",repoUrl:"https://github.com/takara-ai/SwarmFormer",snippets:Sp,filter:!1},"f5-tts":{prettyLabel:"F5-TTS",repoName:"F5-TTS",repoUrl:"https://github.com/SWivid/F5-TTS",filter:!1,countDownloads:'path_extension:"safetensors" OR path_extension:"pt"'},genmo:{prettyLabel:"Genmo",repoName:"Genmo",repoUrl:"https://github.com/genmoai/models",filter:!1,countDownloads:'path:"vae_stats.json"'},tensorflowtts:{prettyLabel:"TensorFlowTTS",repoName:"TensorFlowTTS",repoUrl:"https://github.com/TensorSpeech/TensorFlowTTS",snippets:Vd},tabpfn:{prettyLabel:"TabPFN",repoName:"TabPFN",repoUrl:"https://github.com/PriorLabs/TabPFN"},terratorch:{prettyLabel:"TerraTorch",repoName:"TerraTorch",repoUrl:"https://github.com/IBM/terratorch",docsUrl:"https://ibm.github.io/terratorch/",filter:!1,countDownloads:'path_extension:"pt"',snippets:sp},"tic-clip":{prettyLabel:"TiC-CLIP",repoName:"TiC-CLIP",repoUrl:"https://github.com/apple/ml-tic-clip",filter:!1,countDownloads:'path_extension:"pt" AND path_prefix:"checkpoints/"'},timesfm:{prettyLabel:"TimesFM",repoName:"timesfm",repoUrl:"https://github.com/google-research/timesfm",filter:!1,countDownloads:'path:"checkpoints/checkpoint_1100000/state/checkpoint"'},timm:{prettyLabel:"timm",repoName:"pytorch-image-models",repoUrl:"https://github.com/rwightman/pytorch-image-models",docsUrl:"https://huggingface.co/docs/hub/timm",snippets:Fd,filter:!0,countDownloads:'path:"pytorch_model.bin" OR path:"model.safetensors"'},transformers:{prettyLabel:"Transformers",repoName:"🤗/transformers",repoUrl:"https://github.com/huggingface/transformers",docsUrl:"https://huggingface.co/docs/hub/transformers",snippets:up,filter:!0},"transformers.js":{prettyLabel:"Transformers.js",repoName:"transformers.js",repoUrl:"https://github.com/huggingface/transformers.js",docsUrl:"https://huggingface.co/docs/hub/transformers-js",snippets:cp,filter:!0},trellis:{prettyLabel:"Trellis",repoName:"Trellis",repoUrl:"https://github.com/microsoft/TRELLIS",countDownloads:'path_extension:"safetensors"'},ultralytics:{prettyLabel:"ultralytics",repoName:"ultralytics",repoUrl:"https://github.com/ultralytics/ultralytics",docsUrl:"https://github.com/ultralytics/ultralytics",filter:!1,countDownloads:'path_extension:"pt"',snippets:eu},"unity-sentis":{prettyLabel:"unity-sentis",repoName:"unity-sentis",repoUrl:"https://github.com/Unity-Technologies/sentis-samples",snippets:yp,filter:!0,countDownloads:'path_extension:"sentis"'},sana:{prettyLabel:"Sana",repoName:"Sana",repoUrl:"https://github.com/NVlabs/Sana",countDownloads:'path_extension:"pth"',snippets:vp},"vfi-mamba":{prettyLabel:"VFIMamba",repoName:"VFIMamba",repoUrl:"https://github.com/MCG-NJU/VFIMamba",countDownloads:'path_extension:"pkl"',snippets:bp},voicecraft:{prettyLabel:"VoiceCraft",repoName:"VoiceCraft",repoUrl:"https://github.com/jasonppy/VoiceCraft",docsUrl:"https://github.com/jasonppy/VoiceCraft",snippets:_p},wham:{prettyLabel:"WHAM",repoName:"wham",repoUrl:"https://huggingface.co/microsoft/wham",docsUrl:"https://huggingface.co/microsoft/wham/blob/main/README.md",countDownloads:'path_extension:"ckpt"'},whisperkit:{prettyLabel:"WhisperKit",repoName:"WhisperKit",repoUrl:"https://github.com/argmaxinc/WhisperKit",docsUrl:"https://github.com/argmaxinc/WhisperKit?tab=readme-ov-file#homebrew",snippets:zp,countDownloads:'path_filename:"model" AND path_extension:"mil" AND _exists_:"path_prefix"'},yolov10:{prettyLabel:"YOLOv10",repoName:"YOLOv10",repoUrl:"https://github.com/THU-MIG/yolov10",docsUrl:"https://github.com/THU-MIG/yolov10",countDownloads:'path_extension:"pt" OR path_extension:"safetensors"',snippets:eu},"3dtopia-xl":{prettyLabel:"3DTopia-XL",repoName:"3DTopia-XL",repoUrl:"https://github.com/3DTopia/3DTopia-XL",filter:!1,countDownloads:'path:"model_vae_fp16.pt"',snippets:Np}};Object.entries(Ip).filter(([n,a])=>a.filter).map(([n])=>n);var Jo;(function(n){n[n.F32=0]="F32",n[n.F16=1]="F16",n[n.Q4_0=2]="Q4_0",n[n.Q4_1=3]="Q4_1",n[n.Q5_0=6]="Q5_0",n[n.Q5_1=7]="Q5_1",n[n.Q8_0=8]="Q8_0",n[n.Q8_1=9]="Q8_1",n[n.Q2_K=10]="Q2_K",n[n.Q3_K=11]="Q3_K",n[n.Q4_K=12]="Q4_K",n[n.Q5_K=13]="Q5_K",n[n.Q6_K=14]="Q6_K",n[n.Q8_K=15]="Q8_K",n[n.IQ2_XXS=16]="IQ2_XXS",n[n.IQ2_XS=17]="IQ2_XS",n[n.IQ3_XXS=18]="IQ3_XXS",n[n.IQ1_S=19]="IQ1_S",n[n.IQ4_NL=20]="IQ4_NL",n[n.IQ3_S=21]="IQ3_S",n[n.IQ2_S=22]="IQ2_S",n[n.IQ4_XS=23]="IQ4_XS",n[n.I8=24]="I8",n[n.I16=25]="I16",n[n.I32=26]="I32",n[n.I64=27]="I64",n[n.F64=28]="F64",n[n.IQ1_M=29]="IQ1_M",n[n.BF16=30]="BF16"})(Jo||(Jo={}));const jp=Object.values(Jo).filter(n=>typeof n=="string");new RegExp(`(?<quant>${jp.join("|")})(_(?<sizeVariation>[A-Z]+))?`);const Bp=["python","js","sh"];var z=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),tu=Object.freeze({set:z.Set,for:z.For,in:z.In,is:z.Is,if:z.If,else:z.Else,endif:z.EndIf,elif:z.ElseIf,endfor:z.EndFor,and:z.And,or:z.Or,not:z.Not,"not in":z.NotIn,macro:z.Macro,endmacro:z.EndMacro,true:z.BooleanLiteral,false:z.BooleanLiteral,none:z.NullLiteral,True:z.BooleanLiteral,False:z.BooleanLiteral,None:z.NullLiteral}),qt=class{constructor(n,a){this.value=n,this.type=a}};function nu(n){return/\w/.test(n)}function Ro(n){return/[0-9]/.test(n)}var qp=[["{%",z.OpenStatement],["%}",z.CloseStatement],["{{",z.OpenExpression],["}}",z.CloseExpression],["(",z.OpenParen],[")",z.CloseParen],["{",z.OpenCurlyBracket],["}",z.CloseCurlyBracket],["[",z.OpenSquareBracket],["]",z.CloseSquareBracket],[",",z.Comma],[".",z.Dot],[":",z.Colon],["|",z.Pipe],["<=",z.ComparisonBinaryOperator],[">=",z.ComparisonBinaryOperator],["==",z.ComparisonBinaryOperator],["!=",z.ComparisonBinaryOperator],["<",z.ComparisonBinaryOperator],[">",z.ComparisonBinaryOperator],["+",z.AdditiveBinaryOperator],["-",z.AdditiveBinaryOperator],["*",z.MultiplicativeBinaryOperator],["/",z.MultiplicativeBinaryOperator],["%",z.MultiplicativeBinaryOperator],["=",z.Equals]],Hp=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function Vp(n,a={}){return n.endsWith(`
`)&&(n=n.slice(0,-1)),n=n.replace(/{#.*?#}/gs,"{##}"),a.lstrip_blocks&&(n=n.replace(/^[ \t]*({[#%])/gm,"$1")),a.trim_blocks&&(n=n.replace(/([#%]})\n/g,"$1")),n.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}function Fp(n,a={}){var d,h,v;const r=[],l=Vp(n,a);let s=0;const c=p=>{let _="";for(;p(l[s]);){if(l[s]==="\\"){if(++s,s>=l.length)throw new SyntaxError("Unexpected end of input");const w=l[s++],k=Hp.get(w);if(k===void 0)throw new SyntaxError(`Unexpected escaped character: ${w}`);_+=k;continue}if(_+=l[s++],s>=l.length)throw new SyntaxError("Unexpected end of input")}return _};e:for(;s<l.length;){const p=(d=r.at(-1))==null?void 0:d.type;if(p===void 0||p===z.CloseStatement||p===z.CloseExpression){let w="";for(;s<l.length&&!(l[s]==="{"&&(l[s+1]==="%"||l[s+1]==="{"));)w+=l[s++];if(w.length>0){r.push(new qt(w,z.Text));continue}}c(w=>/\s/.test(w));const _=l[s];if(_==="-"||_==="+"){const w=(h=r.at(-1))==null?void 0:h.type;if(w===z.Text||w===void 0)throw new SyntaxError(`Unexpected character: ${_}`);switch(w){case z.Identifier:case z.NumericLiteral:case z.BooleanLiteral:case z.NullLiteral:case z.StringLiteral:case z.CloseParen:case z.CloseSquareBracket:break;default:{++s;const k=c(Ro);r.push(new qt(`${_}${k}`,k.length>0?z.NumericLiteral:z.UnaryOperator));continue}}}for(const[w,k]of qp)if(l.slice(s,s+w.length)===w){r.push(new qt(w,k)),s+=w.length;continue e}if(_==="'"||_==='"'){++s;const w=c(k=>k!==_);r.push(new qt(w,z.StringLiteral)),++s;continue}if(Ro(_)){const w=c(Ro);r.push(new qt(w,z.NumericLiteral));continue}if(nu(_)){const w=c(nu),k=Object.hasOwn(tu,w)?tu[w]:z.Identifier;k===z.In&&((v=r.at(-1))==null?void 0:v.type)===z.Not?(r.pop(),r.push(new qt("not in",z.NotIn))):r.push(new qt(w,k));continue}throw new SyntaxError(`Unexpected character: ${_}`)}return r}var I0=class{constructor(){C1(this,"type","Statement")}},$p=class extends I0{constructor(a){super();C1(this,"type","Program");this.body=a}},iu=class extends I0{constructor(a,r,l){super();C1(this,"type","If");this.test=a,this.body=r,this.alternate=l}},Pp=class extends I0{constructor(a,r,l,s){super();C1(this,"type","For");this.loopvar=a,this.iterable=r,this.body=l,this.defaultBlock=s}},Yp=class extends I0{constructor(a,r){super();C1(this,"type","Set");this.assignee=a,this.value=r}},Qp=class extends I0{constructor(a,r,l){super();C1(this,"type","Macro");this.name=a,this.args=r,this.body=l}},oe=class extends I0{constructor(){super(...arguments);C1(this,"type","Expression")}},Xp=class extends oe{constructor(a,r,l){super();C1(this,"type","MemberExpression");this.object=a,this.property=r,this.computed=l}},Gp=class extends oe{constructor(a,r){super();C1(this,"type","CallExpression");this.callee=a,this.args=r}},Ht=class extends oe{constructor(a){super();C1(this,"type","Identifier");this.value=a}},$t=class extends oe{constructor(a){super();C1(this,"type","Literal");this.value=a}},Zp=class extends $t{constructor(){super(...arguments);C1(this,"type","NumericLiteral")}},au=class extends $t{constructor(){super(...arguments);C1(this,"type","StringLiteral")}},ru=class extends $t{constructor(){super(...arguments);C1(this,"type","BooleanLiteral")}},ou=class extends $t{constructor(){super(...arguments);C1(this,"type","NullLiteral")}},Kp=class extends $t{constructor(){super(...arguments);C1(this,"type","ArrayLiteral")}},lu=class extends $t{constructor(){super(...arguments);C1(this,"type","TupleLiteral")}},Jp=class extends $t{constructor(){super(...arguments);C1(this,"type","ObjectLiteral")}},Pn=class extends oe{constructor(a,r,l){super();C1(this,"type","BinaryExpression");this.operator=a,this.left=r,this.right=l}},Wp=class extends oe{constructor(a,r){super();C1(this,"type","FilterExpression");this.operand=a,this.filter=r}},eh=class extends oe{constructor(a,r){super();C1(this,"type","SelectExpression");this.iterable=a,this.test=r}},th=class extends oe{constructor(a,r,l){super();C1(this,"type","TestExpression");this.operand=a,this.negate=r,this.test=l}},nh=class extends oe{constructor(a,r){super();C1(this,"type","UnaryExpression");this.operator=a,this.argument=r}},ih=class extends oe{constructor(a=void 0,r=void 0,l=void 0){super();C1(this,"type","SliceExpression");this.start=a,this.stop=r,this.step=l}},ah=class extends oe{constructor(a,r){super();C1(this,"type","KeywordArgumentExpression");this.key=a,this.value=r}};function rh(n){const a=new $p([]);let r=0;function l(M,q){const P=n[r++];if(!P||P.type!==M)throw new Error(`Parser Error: ${q}. ${P.type} !== ${M}.`);return P}function s(){switch(n[r].type){case z.Text:return h();case z.OpenStatement:return v();case z.OpenExpression:return p();default:throw new SyntaxError(`Unexpected token type: ${n[r].type}`)}}function c(...M){return r+M.length<=n.length&&M.some((q,P)=>q!==n[r+P].type)}function d(...M){return r+M.length<=n.length&&M.every((q,P)=>q===n[r+P].type)}function h(){return new au(l(z.Text,"Expected text token").value)}function v(){l(z.OpenStatement,"Expected opening statement token");let M;switch(n[r].type){case z.Set:++r,M=_(),l(z.CloseStatement,"Expected closing statement token");break;case z.If:++r,M=w(),l(z.OpenStatement,"Expected {% token"),l(z.EndIf,"Expected endif token"),l(z.CloseStatement,"Expected %} token");break;case z.Macro:++r,M=k(),l(z.OpenStatement,"Expected {% token"),l(z.EndMacro,"Expected endmacro token"),l(z.CloseStatement,"Expected %} token");break;case z.For:++r,M=B(),l(z.OpenStatement,"Expected {% token"),l(z.EndFor,"Expected endfor token"),l(z.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${n[r].type}`)}return M}function p(){l(z.OpenExpression,"Expected opening expression token");const M=V();return l(z.CloseExpression,"Expected closing expression token"),M}function _(){const M=V();if(d(z.Equals)){++r;const q=_();return new Yp(M,q)}return M}function w(){var x1,b,Z,h1,T,a1,E1,g1;const M=V();l(z.CloseStatement,"Expected closing statement token");const q=[],P=[];for(;!(((x1=n[r])==null?void 0:x1.type)===z.OpenStatement&&(((b=n[r+1])==null?void 0:b.type)===z.ElseIf||((Z=n[r+1])==null?void 0:Z.type)===z.Else||((h1=n[r+1])==null?void 0:h1.type)===z.EndIf));)q.push(s());if(((T=n[r])==null?void 0:T.type)===z.OpenStatement&&((a1=n[r+1])==null?void 0:a1.type)!==z.EndIf)if(++r,d(z.ElseIf))l(z.ElseIf,"Expected elseif token"),P.push(w());else for(l(z.Else,"Expected else token"),l(z.CloseStatement,"Expected closing statement token");!(((E1=n[r])==null?void 0:E1.type)===z.OpenStatement&&((g1=n[r+1])==null?void 0:g1.type)===z.EndIf);)P.push(s());return new iu(M,q,P)}function k(){const M=s1();if(M.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const q=_1();l(z.CloseStatement,"Expected closing statement token");const P=[];for(;c(z.OpenStatement,z.EndMacro);)P.push(s());return new Qp(M,q,P)}function S(M=!1){const q=M?s1:V,P=[q()],x1=d(z.Comma);for(;x1&&(++r,P.push(q()),!!d(z.Comma)););return x1?new lu(P):P[0]}function B(){const M=S(!0);if(!(M instanceof Ht||M instanceof lu))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${M.type} instead`);l(z.In,"Expected `in` keyword following loop variable");const q=V();l(z.CloseStatement,"Expected closing statement token");const P=[];for(;c(z.OpenStatement,z.EndFor)&&c(z.OpenStatement,z.Else);)P.push(s());const x1=[];if(d(z.OpenStatement,z.Else))for(++r,++r,l(z.CloseStatement,"Expected closing statement token");c(z.OpenStatement,z.EndFor);)x1.push(s());return new Pp(M,q,P,x1)}function V(){return e1()}function e1(){const M=$();if(d(z.If)){++r;const q=$();if(d(z.Else)){++r;const P=$();return new iu(q,[M],[P])}else return new eh(M,q)}return M}function $(){let M=n1();for(;d(z.Or);){const q=n[r];++r;const P=n1();M=new Pn(q,M,P)}return M}function n1(){let M=o1();for(;d(z.And);){const q=n[r];++r;const P=o1();M=new Pn(q,M,P)}return M}function o1(){let M;for(;d(z.Not);){const q=n[r];++r;const P=o1();M=new nh(q,P)}return M??A1()}function A1(){let M=i1();for(;d(z.ComparisonBinaryOperator)||d(z.In)||d(z.NotIn);){const q=n[r];++r;const P=i1();M=new Pn(q,M,P)}return M}function i1(){let M=c1();for(;d(z.AdditiveBinaryOperator);){const q=n[r];++r;const P=c1();M=new Pn(q,M,P)}return M}function I(){const M=u1(s1());return d(z.OpenParen)?v1(M):M}function v1(M){let q=new Gp(M,_1());return q=u1(q),d(z.OpenParen)&&(q=v1(q)),q}function _1(){l(z.OpenParen,"Expected opening parenthesis for arguments list");const M=t1();return l(z.CloseParen,"Expected closing parenthesis for arguments list"),M}function t1(){const M=[];for(;!d(z.CloseParen);){let q=V();if(d(z.Equals)){if(++r,!(q instanceof Ht))throw new SyntaxError("Expected identifier for keyword argument");const P=V();q=new ah(q,P)}M.push(q),d(z.Comma)&&++r}return M}function f1(){const M=[];let q=!1;for(;!d(z.CloseSquareBracket);)d(z.Colon)?(M.push(void 0),++r,q=!0):(M.push(V()),d(z.Colon)&&(++r,q=!0));if(M.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(q){if(M.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new ih(...M)}return M[0]}function u1(M){for(;d(z.Dot)||d(z.OpenSquareBracket);){const q=n[r];++r;let P;const x1=q.type!==z.Dot;if(x1)P=f1(),l(z.CloseSquareBracket,"Expected closing square bracket");else if(P=s1(),P.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");M=new Xp(M,P,x1)}return M}function c1(){let M=Q();for(;d(z.MultiplicativeBinaryOperator);){const q=n[r];++r;const P=Q();M=new Pn(q,M,P)}return M}function Q(){let M=l1();for(;d(z.Is);){++r;const q=d(z.Not);q&&++r;let P=s1();if(P instanceof ru?P=new Ht(P.value.toString()):P instanceof ou&&(P=new Ht("none")),!(P instanceof Ht))throw new SyntaxError("Expected identifier for the test");M=new th(M,q,P)}return M}function l1(){let M=I();for(;d(z.Pipe);){++r;let q=s1();if(!(q instanceof Ht))throw new SyntaxError("Expected identifier for the filter");d(z.OpenParen)&&(q=v1(q)),M=new Wp(M,q)}return M}function s1(){const M=n[r];switch(M.type){case z.NumericLiteral:return++r,new Zp(Number(M.value));case z.StringLiteral:return++r,new au(M.value);case z.BooleanLiteral:return++r,new ru(M.value.toLowerCase()==="true");case z.NullLiteral:return++r,new ou(null);case z.Identifier:return++r,new Ht(M.value);case z.OpenParen:{++r;const q=S();if(n[r].type!==z.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${n[r].type} instead`);return++r,q}case z.OpenSquareBracket:{++r;const q=[];for(;!d(z.CloseSquareBracket);)q.push(V()),d(z.Comma)&&++r;return++r,new Kp(q)}case z.OpenCurlyBracket:{++r;const q=new Map;for(;!d(z.CloseCurlyBracket);){const P=V();l(z.Colon,"Expected colon between key and value in object literal");const x1=V();q.set(P,x1),d(z.Comma)&&++r}return++r,new Jp(q)}default:throw new SyntaxError(`Unexpected token: ${M.type}`)}}for(;r<n.length;)a.body.push(s());return a}function oh(n,a,r=1){a===void 0&&(a=n,n=0);const l=[];for(let s=n;s<a;s+=r)l.push(s);return l}function su(n,a,r,l=1){const s=Math.sign(l);s>=0?(a=(a??(a=0))<0?Math.max(n.length+a,0):Math.min(a,n.length),r=(r??(r=n.length))<0?Math.max(n.length+r,0):Math.min(r,n.length)):(a=(a??(a=n.length-1))<0?Math.max(n.length+a,-1):Math.min(a,n.length-1),r=(r??(r=-1))<-1?Math.max(n.length+r,-1):Math.min(r,n.length-1));const c=[];for(let d=a;s*d<s*r;d+=l)c.push(n[d]);return c}function fc(n){return n.replace(/\b\w/g,a=>a.toUpperCase())}var qe=class{constructor(n=void 0){C1(this,"type","RuntimeValue");C1(this,"value");C1(this,"builtins",new Map);this.value=n}__bool__(){return new w2(!!this.value)}},t2=class extends qe{constructor(){super(...arguments);C1(this,"type","NumericValue")}},M1=class extends qe{constructor(){super(...arguments);C1(this,"type","StringValue");C1(this,"builtins",new Map([["upper",new R3(()=>new M1(this.value.toUpperCase()))],["lower",new R3(()=>new M1(this.value.toLowerCase()))],["strip",new R3(()=>new M1(this.value.trim()))],["title",new R3(()=>new M1(fc(this.value)))],["length",new t2(this.value.length)],["rstrip",new R3(()=>new M1(this.value.trimEnd()))],["lstrip",new R3(()=>new M1(this.value.trimStart()))],["split",new R3(a=>{const r=a[0]??new X3;if(!(r instanceof M1||r instanceof X3))throw new Error("sep argument must be a string or null");const l=a[1]??new t2(-1);if(!(l instanceof t2))throw new Error("maxsplit argument must be a number");let s=[];if(r instanceof X3){const c=this.value.trimStart();for(const{0:d,index:h}of c.matchAll(/\S+/g)){if(l.value!==-1&&s.length>=l.value&&h!==void 0){s.push(d+c.slice(h+d.length));break}s.push(d)}}else{if(r.value==="")throw new Error("empty separator");s=this.value.split(r.value),l.value!==-1&&s.length>l.value&&s.push(s.splice(l.value).join(r.value))}return new v2(s.map(c=>new M1(c)))})]]))}},w2=class extends qe{constructor(){super(...arguments);C1(this,"type","BooleanValue")}},Q3=class extends qe{constructor(){super(...arguments);C1(this,"type","ObjectValue");C1(this,"builtins",new Map([["get",new R3(([a,r])=>{if(!(a instanceof M1))throw new Error(`Object key must be a string: got ${a.type}`);return this.value.get(a.value)??r??new X3})],["items",new R3(()=>new v2(Array.from(this.value.entries()).map(([a,r])=>new v2([new M1(a),r]))))]]))}__bool__(){return new w2(this.value.size>0)}},lh=class extends Q3{constructor(){super(...arguments);C1(this,"type","KeywordArgumentsValue")}},v2=class extends qe{constructor(){super(...arguments);C1(this,"type","ArrayValue");C1(this,"builtins",new Map([["length",new t2(this.value.length)]]))}__bool__(){return new w2(this.value.length>0)}},sh=class extends v2{constructor(){super(...arguments);C1(this,"type","TupleValue")}},R3=class extends qe{constructor(){super(...arguments);C1(this,"type","FunctionValue")}},X3=class extends qe{constructor(){super(...arguments);C1(this,"type","NullValue")}},L3=class extends qe{constructor(){super(...arguments);C1(this,"type","UndefinedValue")}},Zn=class{constructor(n){C1(this,"variables",new Map([["namespace",new R3(n=>{if(n.length===0)return new Q3(new Map);if(n.length!==1||!(n[0]instanceof Q3))throw new Error("`namespace` expects either zero arguments or a single object argument");return n[0]})]]));C1(this,"tests",new Map([["boolean",n=>n.type==="BooleanValue"],["callable",n=>n instanceof R3],["odd",n=>{if(n.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${n.type}`);return n.value%2!==0}],["even",n=>{if(n.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${n.type}`);return n.value%2===0}],["false",n=>n.type==="BooleanValue"&&!n.value],["true",n=>n.type==="BooleanValue"&&n.value],["none",n=>n.type==="NullValue"],["string",n=>n.type==="StringValue"],["number",n=>n.type==="NumericValue"],["integer",n=>n.type==="NumericValue"&&Number.isInteger(n.value)],["iterable",n=>n.type==="ArrayValue"||n.type==="StringValue"],["mapping",n=>n.type==="ObjectValue"],["lower",n=>{const a=n.value;return n.type==="StringValue"&&a===a.toLowerCase()}],["upper",n=>{const a=n.value;return n.type==="StringValue"&&a===a.toUpperCase()}],["none",n=>n.type==="NullValue"],["defined",n=>n.type!=="UndefinedValue"],["undefined",n=>n.type==="UndefinedValue"],["equalto",(n,a)=>n.value===a.value],["eq",(n,a)=>n.value===a.value]]));this.parent=n}set(n,a){return this.declareVariable(n,ha(a))}declareVariable(n,a){if(this.variables.has(n))throw new SyntaxError(`Variable already declared: ${n}`);return this.variables.set(n,a),a}setVariable(n,a){return this.variables.set(n,a),a}resolve(n){if(this.variables.has(n))return this;if(this.parent)return this.parent.resolve(n);throw new Error(`Unknown variable: ${n}`)}lookupVariable(n){try{return this.resolve(n).variables.get(n)??new L3}catch{return new L3}}},uh=class{constructor(n){C1(this,"global");this.global=n??new Zn}run(n){return this.evaluate(n,this.global)}evaluateBinaryExpression(n,a){const r=this.evaluate(n.left,a);switch(n.operator.value){case"and":return r.__bool__().value?this.evaluate(n.right,a):r;case"or":return r.__bool__().value?r:this.evaluate(n.right,a)}const l=this.evaluate(n.right,a);switch(n.operator.value){case"==":return new w2(r.value==l.value);case"!=":return new w2(r.value!=l.value)}if(r instanceof L3||l instanceof L3)throw new Error("Cannot perform operation on undefined values");if(r instanceof X3||l instanceof X3)throw new Error("Cannot perform operation on null values");if(r instanceof t2&&l instanceof t2)switch(n.operator.value){case"+":return new t2(r.value+l.value);case"-":return new t2(r.value-l.value);case"*":return new t2(r.value*l.value);case"/":return new t2(r.value/l.value);case"%":return new t2(r.value%l.value);case"<":return new w2(r.value<l.value);case">":return new w2(r.value>l.value);case">=":return new w2(r.value>=l.value);case"<=":return new w2(r.value<=l.value)}else if(r instanceof v2&&l instanceof v2)switch(n.operator.value){case"+":return new v2(r.value.concat(l.value))}else if(l instanceof v2){const s=l.value.find(c=>c.value===r.value)!==void 0;switch(n.operator.value){case"in":return new w2(s);case"not in":return new w2(!s)}}if(r instanceof M1||l instanceof M1)switch(n.operator.value){case"+":return new M1(r.value.toString()+l.value.toString())}if(r instanceof M1&&l instanceof M1)switch(n.operator.value){case"in":return new w2(l.value.includes(r.value));case"not in":return new w2(!l.value.includes(r.value))}if(r instanceof M1&&l instanceof Q3)switch(n.operator.value){case"in":return new w2(l.value.has(r.value));case"not in":return new w2(!l.value.has(r.value))}throw new SyntaxError(`Unknown operator "${n.operator.value}" between ${r.type} and ${l.type}`)}evaluateArguments(n,a){const r=[],l=new Map;for(const s of n)if(s.type==="KeywordArgumentExpression"){const c=s;l.set(c.key.value,this.evaluate(c.value,a))}else{if(l.size>0)throw new Error("Positional arguments must come before keyword arguments");r.push(this.evaluate(s,a))}return[r,l]}evaluateFilterExpression(n,a){const r=this.evaluate(n.operand,a);if(n.filter.type==="Identifier"){const l=n.filter;if(l.value==="tojson")return new M1(ya(r));if(r instanceof v2)switch(l.value){case"list":return r;case"first":return r.value[0];case"last":return r.value[r.value.length-1];case"length":return new t2(r.value.length);case"reverse":return new v2(r.value.reverse());case"sort":return new v2(r.value.sort((s,c)=>{if(s.type!==c.type)throw new Error(`Cannot compare different types: ${s.type} and ${c.type}`);switch(s.type){case"NumericValue":return s.value-c.value;case"StringValue":return s.value.localeCompare(c.value);default:throw new Error(`Cannot compare type: ${s.type}`)}}));case"join":return new M1(r.value.map(s=>s.value).join(""));default:throw new Error(`Unknown ArrayValue filter: ${l.value}`)}else if(r instanceof M1)switch(l.value){case"length":return new t2(r.value.length);case"upper":return new M1(r.value.toUpperCase());case"lower":return new M1(r.value.toLowerCase());case"title":return new M1(fc(r.value));case"capitalize":return new M1(r.value.charAt(0).toUpperCase()+r.value.slice(1));case"trim":return new M1(r.value.trim());case"indent":return new M1(r.value.split(`
`).map((s,c)=>c===0||s.length===0?s:"    "+s).join(`
`));case"join":case"string":return r;default:throw new Error(`Unknown StringValue filter: ${l.value}`)}else if(r instanceof t2)switch(l.value){case"abs":return new t2(Math.abs(r.value));default:throw new Error(`Unknown NumericValue filter: ${l.value}`)}else if(r instanceof Q3)switch(l.value){case"items":return new v2(Array.from(r.value.entries()).map(([s,c])=>new v2([new M1(s),c])));case"length":return new t2(r.value.size);default:throw new Error(`Unknown ObjectValue filter: ${l.value}`)}throw new Error(`Cannot apply filter "${l.value}" to type: ${r.type}`)}else if(n.filter.type==="CallExpression"){const l=n.filter;if(l.callee.type!=="Identifier")throw new Error(`Unknown filter: ${l.callee.type}`);const s=l.callee.value;if(s==="tojson"){const[,c]=this.evaluateArguments(l.args,a),d=c.get("indent")??new X3;if(!(d instanceof t2||d instanceof X3))throw new Error("If set, indent must be a number");return new M1(ya(r,d.value))}else if(s==="join"){let c;if(r instanceof M1)c=Array.from(r.value);else if(r instanceof v2)c=r.value.map(p=>p.value);else throw new Error(`Cannot apply filter "${s}" to type: ${r.type}`);const[d,h]=this.evaluateArguments(l.args,a),v=d.at(0)??h.get("separator")??new M1("");if(!(v instanceof M1))throw new Error("separator must be a string");return new M1(c.join(v.value))}if(r instanceof v2){switch(s){case"selectattr":case"rejectattr":{const c=s==="selectattr";if(r.value.some(w=>!(w instanceof Q3)))throw new Error(`\`${s}\` can only be applied to array of objects`);if(l.args.some(w=>w.type!=="StringLiteral"))throw new Error(`arguments of \`${s}\` must be strings`);const[d,h,v]=l.args.map(w=>this.evaluate(w,a));let p;if(h){const w=a.tests.get(h.value);if(!w)throw new Error(`Unknown test: ${h.value}`);p=w}else p=(...w)=>w[0].__bool__().value;const _=r.value.filter(w=>{const k=w.value.get(d.value),S=k?p(k,v):!1;return c?S:!S});return new v2(_)}case"map":{const[,c]=this.evaluateArguments(l.args,a);if(c.has("attribute")){const d=c.get("attribute");if(!(d instanceof M1))throw new Error("attribute must be a string");const h=c.get("default"),v=r.value.map(p=>{if(!(p instanceof Q3))throw new Error("items in map must be an object");return p.value.get(d.value)??h??new L3});return new v2(v)}else throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${s}`)}else if(r instanceof M1){switch(s){case"indent":{const[c,d]=this.evaluateArguments(l.args,a),h=c.at(0)??d.get("width")??new t2(4);if(!(h instanceof t2))throw new Error("width must be a number");const v=c.at(1)??d.get("first")??new w2(!1),p=c.at(2)??d.get("blank")??new w2(!1),_=r.value.split(`
`),w=" ".repeat(h.value),k=_.map((S,B)=>!v.value&&B===0||!p.value&&S.length===0?S:w+S);return new M1(k.join(`
`))}}throw new Error(`Unknown StringValue filter: ${s}`)}else throw new Error(`Cannot apply filter "${s}" to type: ${r.type}`)}throw new Error(`Unknown filter: ${n.filter.type}`)}evaluateTestExpression(n,a){const r=this.evaluate(n.operand,a),l=a.tests.get(n.test.value);if(!l)throw new Error(`Unknown test: ${n.test.value}`);const s=l(r);return new w2(n.negate?!s:s)}evaluateUnaryExpression(n,a){const r=this.evaluate(n.argument,a);switch(n.operator.value){case"not":return new w2(!r.value);default:throw new SyntaxError(`Unknown operator: ${n.operator.value}`)}}evalProgram(n,a){return this.evaluateBlock(n.body,a)}evaluateBlock(n,a){let r="";for(const l of n){const s=this.evaluate(l,a);s.type!=="NullValue"&&s.type!=="UndefinedValue"&&(r+=s.value)}return new M1(r)}evaluateIdentifier(n,a){return a.lookupVariable(n.value)}evaluateCallExpression(n,a){const[r,l]=this.evaluateArguments(n.args,a);l.size>0&&r.push(new lh(l));const s=this.evaluate(n.callee,a);if(s.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${s.type}`);return s.value(r,a)}evaluateSliceExpression(n,a,r){if(!(n instanceof v2||n instanceof M1))throw new Error("Slice object must be an array or string");const l=this.evaluate(a.start,r),s=this.evaluate(a.stop,r),c=this.evaluate(a.step,r);if(!(l instanceof t2||l instanceof L3))throw new Error("Slice start must be numeric or undefined");if(!(s instanceof t2||s instanceof L3))throw new Error("Slice stop must be numeric or undefined");if(!(c instanceof t2||c instanceof L3))throw new Error("Slice step must be numeric or undefined");return n instanceof v2?new v2(su(n.value,l.value,s.value,c.value)):new M1(su(Array.from(n.value),l.value,s.value,c.value).join(""))}evaluateMemberExpression(n,a){const r=this.evaluate(n.object,a);let l;if(n.computed){if(n.property.type==="SliceExpression")return this.evaluateSliceExpression(r,n.property,a);l=this.evaluate(n.property,a)}else l=new M1(n.property.value);let s;if(r instanceof Q3){if(!(l instanceof M1))throw new Error(`Cannot access property with non-string: got ${l.type}`);s=r.value.get(l.value)??r.builtins.get(l.value)}else if(r instanceof v2||r instanceof M1)if(l instanceof t2)s=r.value.at(l.value),r instanceof M1&&(s=new M1(r.value.at(l.value)));else if(l instanceof M1)s=r.builtins.get(l.value);else throw new Error(`Cannot access property with non-string/non-number: got ${l.type}`);else{if(!(l instanceof M1))throw new Error(`Cannot access property with non-string: got ${l.type}`);s=r.builtins.get(l.value)}return s instanceof qe?s:new L3}evaluateSet(n,a){const r=this.evaluate(n.value,a);if(n.assignee.type==="Identifier"){const l=n.assignee.value;a.setVariable(l,r)}else if(n.assignee.type==="MemberExpression"){const l=n.assignee,s=this.evaluate(l.object,a);if(!(s instanceof Q3))throw new Error("Cannot assign to member of non-object");if(l.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");s.value.set(l.property.value,r)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(n.assignee)}`);return new X3}evaluateIf(n,a){const r=this.evaluate(n.test,a);return this.evaluateBlock(r.__bool__().value?n.body:n.alternate,a)}evaluateFor(n,a){const r=new Zn(a);let l,s;if(n.iterable.type==="SelectExpression"){const p=n.iterable;s=this.evaluate(p.iterable,r),l=p.test}else s=this.evaluate(n.iterable,r);if(!(s instanceof v2))throw new Error(`Expected iterable type in for loop: got ${s.type}`);const c=[],d=[];for(let p=0;p<s.value.length;++p){const _=new Zn(r),w=s.value[p];let k;if(n.loopvar.type==="Identifier")k=S=>S.setVariable(n.loopvar.value,w);else if(n.loopvar.type==="TupleLiteral"){const S=n.loopvar;if(w.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${w.type}`);const B=w;if(S.value.length!==B.value.length)throw new Error(`Too ${S.value.length>B.value.length?"few":"many"} items to unpack`);k=V=>{for(let e1=0;e1<S.value.length;++e1){if(S.value[e1].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${S.value[e1].type}`);V.setVariable(S.value[e1].value,B.value[e1])}}}else throw new Error(`Invalid loop variable(s): ${n.loopvar.type}`);l&&(k(_),!this.evaluate(l,_).__bool__().value)||(c.push(w),d.push(k))}let h="",v=!0;for(let p=0;p<c.length;++p){const _=new Map([["index",new t2(p+1)],["index0",new t2(p)],["revindex",new t2(c.length-p)],["revindex0",new t2(c.length-p-1)],["first",new w2(p===0)],["last",new w2(p===c.length-1)],["length",new t2(c.length)],["previtem",p>0?c[p-1]:new L3],["nextitem",p<c.length-1?c[p+1]:new L3]]);r.setVariable("loop",new Q3(_)),d[p](r);const w=this.evaluateBlock(n.body,r);h+=w.value,v=!1}if(v){const p=this.evaluateBlock(n.defaultBlock,r);h+=p.value}return new M1(h)}evaluateMacro(n,a){return a.setVariable(n.name.value,new R3((r,l)=>{var d;const s=new Zn(l);r=r.slice();let c;((d=r.at(-1))==null?void 0:d.type)==="KeywordArgumentsValue"&&(c=r.pop());for(let h=0;h<n.args.length;++h){const v=n.args[h],p=r[h];if(v.type==="Identifier"){const _=v;if(!p)throw new Error(`Missing positional argument: ${_.value}`);s.setVariable(_.value,p)}else if(v.type==="KeywordArgumentExpression"){const _=v,w=p??(c==null?void 0:c.value.get(_.key.value))??this.evaluate(_.value,s);s.setVariable(_.key.value,w)}else throw new Error(`Unknown argument type: ${v.type}`)}return this.evaluateBlock(n.body,s)})),new X3}evaluate(n,a){if(n===void 0)return new L3;switch(n.type){case"Program":return this.evalProgram(n,a);case"Set":return this.evaluateSet(n,a);case"If":return this.evaluateIf(n,a);case"For":return this.evaluateFor(n,a);case"Macro":return this.evaluateMacro(n,a);case"NumericLiteral":return new t2(Number(n.value));case"StringLiteral":return new M1(n.value);case"BooleanLiteral":return new w2(n.value);case"NullLiteral":return new X3(n.value);case"ArrayLiteral":return new v2(n.value.map(r=>this.evaluate(r,a)));case"TupleLiteral":return new sh(n.value.map(r=>this.evaluate(r,a)));case"ObjectLiteral":{const r=new Map;for(const[l,s]of n.value){const c=this.evaluate(l,a);if(!(c instanceof M1))throw new Error(`Object keys must be strings: got ${c.type}`);r.set(c.value,this.evaluate(s,a))}return new Q3(r)}case"Identifier":return this.evaluateIdentifier(n,a);case"CallExpression":return this.evaluateCallExpression(n,a);case"MemberExpression":return this.evaluateMemberExpression(n,a);case"UnaryExpression":return this.evaluateUnaryExpression(n,a);case"BinaryExpression":return this.evaluateBinaryExpression(n,a);case"FilterExpression":return this.evaluateFilterExpression(n,a);case"TestExpression":return this.evaluateTestExpression(n,a);default:throw new SyntaxError(`Unknown node type: ${n.type}`)}}};function ha(n){switch(typeof n){case"number":return new t2(n);case"string":return new M1(n);case"boolean":return new w2(n);case"undefined":return new L3;case"object":return n===null?new X3:Array.isArray(n)?new v2(n.map(ha)):new Q3(new Map(Object.entries(n).map(([a,r])=>[a,ha(r)])));case"function":return new R3((a,r)=>{const l=n(...a.map(s=>s.value))??null;return ha(l)});default:throw new Error(`Cannot convert to runtime value: ${n}`)}}function ya(n,a,r){const l=r??0;switch(n.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(n.value);case"ArrayValue":case"ObjectValue":{const s=a?" ".repeat(a):"",c=`
`+s.repeat(l),d=c+s;if(n.type==="ArrayValue"){const h=n.value.map(v=>ya(v,a,l+1));return a?`[${d}${h.join(`,${d}`)}${c}]`:`[${h.join(", ")}]`}else{const h=Array.from(n.value.entries()).map(([v,p])=>{const _=`"${v}": ${ya(p,a,l+1)}`;return a?`${d}${_}`:_});return a?`{${h.join(",")}${c}}`:`{${h.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${n.type}`)}}var ch=class{constructor(n){C1(this,"parsed");const a=Fp(n,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=rh(a)}render(n){const a=new Zn;if(a.set("false",!1),a.set("true",!0),a.set("raise_exception",s=>{throw new Error(s)}),a.set("range",oh),n)for(const[s,c]of Object.entries(n))a.set(s,c);return new uh(a).run(this.parsed).value}},fh=Object.defineProperty,dc=(n,a)=>{for(var r in a)fh(n,r,{get:a[r],enumerable:!0})},hl={};dc(hl,{audioClassification:()=>Rm,audioToAudio:()=>Im,automaticSpeechRecognition:()=>Um,chatCompletion:()=>c8,chatCompletionStream:()=>f8,documentQuestionAnswering:()=>d8,featureExtraction:()=>Km,fillMask:()=>Jm,imageClassification:()=>Bm,imageSegmentation:()=>qm,imageToImage:()=>Qm,imageToText:()=>Hm,objectDetection:()=>Vm,questionAnswering:()=>Wm,request:()=>J1,sentenceSimilarity:()=>e8,streamingRequest:()=>xa,summarization:()=>n8,tableQuestionAnswering:()=>i8,tabularClassification:()=>m8,tabularRegression:()=>h8,textClassification:()=>a8,textGeneration:()=>r8,textGenerationStream:()=>o8,textToImage:()=>Pm,textToSpeech:()=>Nm,textToVideo:()=>Zm,tokenClassification:()=>l8,translation:()=>s8,visualQuestionAnswering:()=>p8,zeroShotClassification:()=>u8,zeroShotImageClassification:()=>Gm});var pc="https://huggingface.co",hc="https://router.huggingface.co",dh="https://api.us1.bfl.ai",ph=n=>n.args,hh=n=>n.authMethod==="provider-key"?{"X-Key":`${n.accessToken}`}:{Authorization:`Bearer ${n.accessToken}`},mh=n=>`${n.baseUrl}/v1/${n.model}`,gh={baseUrl:dh,makeBody:ph,makeHeaders:hh,makeUrl:mh},yh="https://api.cerebras.ai",vh=n=>({...n.args,model:n.model}),bh=n=>({Authorization:`Bearer ${n.accessToken}`}),_h=n=>`${n.baseUrl}/v1/chat/completions`,wh={baseUrl:yh,makeBody:vh,makeHeaders:bh,makeUrl:_h},xh="https://api.cohere.com",Sh=n=>({...n.args,model:n.model}),Ah=n=>({Authorization:`Bearer ${n.accessToken}`}),kh=n=>`${n.baseUrl}/compatibility/v1/chat/completions`,Eh={baseUrl:xh,makeBody:Sh,makeHeaders:Ah,makeUrl:kh},Th="https://fal.run",Ch=n=>n.args,Mh=n=>({Authorization:n.authMethod==="provider-key"?`Key ${n.accessToken}`:`Bearer ${n.accessToken}`}),Oh=n=>`${n.baseUrl}/${n.model}`,Dh={baseUrl:Th,makeBody:Ch,makeHeaders:Mh,makeUrl:Oh},Lh="https://api.fireworks.ai",Rh=n=>({...n.args,...n.chatCompletion?{model:n.model}:void 0}),Uh=n=>({Authorization:`Bearer ${n.accessToken}`}),zh=n=>n.chatCompletion?`${n.baseUrl}/inference/v1/chat/completions`:`${n.baseUrl}/inference`,Nh={baseUrl:Lh,makeBody:Rh,makeHeaders:Uh,makeUrl:zh},Ih=n=>({...n.args,...n.chatCompletion?{model:n.model}:void 0}),jh=n=>({Authorization:`Bearer ${n.accessToken}`}),Bh=n=>n.task&&["feature-extraction","sentence-similarity"].includes(n.task)?`${n.baseUrl}/pipeline/${n.task}/${n.model}`:n.chatCompletion?`${n.baseUrl}/models/${n.model}/v1/chat/completions`:`${n.baseUrl}/models/${n.model}`,qh={baseUrl:`${hc}/hf-inference`,makeBody:Ih,makeHeaders:jh,makeUrl:Bh},Hh="https://api.hyperbolic.xyz",Vh=n=>({...n.args,...n.task==="text-to-image"?{model_name:n.model}:{model:n.model}}),Fh=n=>({Authorization:`Bearer ${n.accessToken}`}),$h=n=>n.task==="text-to-image"?`${n.baseUrl}/v1/images/generations`:`${n.baseUrl}/v1/chat/completions`,Ph={baseUrl:Hh,makeBody:Vh,makeHeaders:Fh,makeUrl:$h},Yh="https://api.studio.nebius.ai",Qh=n=>({...n.args,model:n.model}),Xh=n=>({Authorization:`Bearer ${n.accessToken}`}),Gh=n=>n.task==="text-to-image"?`${n.baseUrl}/v1/images/generations`:n.chatCompletion?`${n.baseUrl}/v1/chat/completions`:n.task==="text-generation"?`${n.baseUrl}/v1/completions`:n.baseUrl,Zh={baseUrl:Yh,makeBody:Qh,makeHeaders:Xh,makeUrl:Gh},Kh="https://api.novita.ai",Jh=n=>({...n.args,...n.chatCompletion?{model:n.model}:void 0}),Wh=n=>({Authorization:`Bearer ${n.accessToken}`}),em=n=>n.chatCompletion?`${n.baseUrl}/v3/openai/chat/completions`:n.task==="text-generation"?`${n.baseUrl}/v3/openai/completions`:n.task==="text-to-video"?`${n.baseUrl}/v3/hf/${n.model}`:n.baseUrl,tm={baseUrl:Kh,makeBody:Jh,makeHeaders:Wh,makeUrl:em},nm="https://api.replicate.com",im=n=>({input:n.args,version:n.model.includes(":")?n.model.split(":")[1]:void 0}),am=n=>({Authorization:`Bearer ${n.accessToken}`,Prefer:"wait"}),rm=n=>n.model.includes(":")?`${n.baseUrl}/v1/predictions`:`${n.baseUrl}/v1/models/${n.model}/predictions`,om={baseUrl:nm,makeBody:im,makeHeaders:am,makeUrl:rm},lm="https://api.sambanova.ai",sm=n=>({...n.args,...n.chatCompletion?{model:n.model}:void 0}),um=n=>({Authorization:`Bearer ${n.accessToken}`}),cm=n=>n.chatCompletion?`${n.baseUrl}/v1/chat/completions`:n.baseUrl,fm={baseUrl:lm,makeBody:sm,makeHeaders:um,makeUrl:cm},dm="https://api.together.xyz",pm=n=>({...n.args,model:n.model}),hm=n=>({Authorization:`Bearer ${n.accessToken}`}),mm=n=>n.task==="text-to-image"?`${n.baseUrl}/v1/images/generations`:n.chatCompletion?`${n.baseUrl}/v1/chat/completions`:n.task==="text-generation"?`${n.baseUrl}/v1/completions`:n.baseUrl,gm={baseUrl:dm,makeBody:pm,makeHeaders:hm,makeUrl:mm},ym="https://api.openai.com",vm=n=>{if(!n.chatCompletion)throw new Error("OpenAI only supports chat completions.");return{...n.args,model:n.model}},bm=n=>({Authorization:`Bearer ${n.accessToken}`}),_m=n=>{if(!n.chatCompletion)throw new Error("OpenAI only supports chat completions.");return`${n.baseUrl}/v1/chat/completions`},wm={baseUrl:ym,makeBody:vm,makeHeaders:bm,makeUrl:_m,clientSideRoutingOnly:!0};function ma(n){return/^http(s?):/.test(n)||n.startsWith("/")}var xm="@huggingface/inference",Sm="3.6.1",uu={"black-forest-labs":{},cerebras:{},cohere:{},"fal-ai":{},"fireworks-ai":{},"hf-inference":{},hyperbolic:{},nebius:{},novita:{},openai:{},replicate:{},sambanova:{},together:{}},cu=new Map;async function Am(n,a,r={}){var d,h;if(n.provider==="hf-inference")return n.model;if(!r.task)throw new Error("task must be specified when using a third-party provider");const l=r.task==="text-generation"&&r.chatCompletion?"conversational":r.task;if((d=uu[n.provider])!=null&&d[n.model])return uu[n.provider][n.model];let s;if(cu.has(n.model)?s=cu.get(n.model):s=await((r==null?void 0:r.fetch)??fetch)(`${pc}/api/models/${n.model}?expand[]=inferenceProviderMapping`,{headers:(h=a.accessToken)!=null&&h.startsWith("hf_")?{Authorization:`Bearer ${a.accessToken}`}:{}}).then(v=>v.json()).then(v=>v.inferenceProviderMapping).catch(()=>null),!s)throw new Error(`We have not been able to find inference provider information for model ${n.model}.`);const c=s[n.provider];if(c){if(c.task!==l)throw new Error(`Model ${n.model} is not supported for task ${l} and provider ${n.provider}. Supported task: ${c.task}.`);return c.status==="staging"&&console.warn(`Model ${n.model} is in staging mode for provider ${n.provider}. Meant for test purposes only.`),c.providerId}throw new Error(`Model ${n.model} is not supported provider ${n.provider}.`)}var km=`${hc}/{{PROVIDER}}`,Uo=null,mc={"black-forest-labs":gh,cerebras:wh,cohere:Eh,"fal-ai":Dh,"fireworks-ai":Nh,"hf-inference":qh,hyperbolic:Ph,openai:wm,nebius:Zh,novita:tm,replicate:om,sambanova:fm,together:gm};async function gc(n,a){const{provider:r,model:l}=n,s=r??"hf-inference",c=mc[s],{task:d,chatCompletion:h}=a??{};if(n.endpointUrl&&s!=="hf-inference")throw new Error("Cannot use endpointUrl with a third-party provider.");if(l&&ma(l))throw new Error("Model URLs are no longer supported. Use endpointUrl instead.");if(!l&&!d)throw new Error("No model provided, and no task has been specified.");if(!c)throw new Error(`No provider config found for provider ${s}`);if(c.clientSideRoutingOnly&&!l)throw new Error(`Provider ${s} requires a model ID to be passed directly.`);const v=l??await Em(d),p=c.clientSideRoutingOnly?Cm(l,s):await Am({model:v,provider:s},n,{task:d,chatCompletion:h,fetch:a==null?void 0:a.fetch});return yc(p,n,a)}function yc(n,a,r){const{accessToken:l,endpointUrl:s,provider:c,model:d,...h}=a,v=c??"hf-inference",p=mc[v],{includeCredentials:_,task:w,chatCompletion:k,signal:S}=r??{},B=(()=>{if(p.clientSideRoutingOnly){if(l&&l.startsWith("hf_"))throw new Error(`Provider ${v} is closed-source and does not support HF tokens.`);return"provider-key"}return l?l.startsWith("hf_")?"hf-token":"provider-key":_==="include"?"credentials-include":"none"})(),V=s?k?s+"/v1/chat/completions":s:p.makeUrl({baseUrl:B!=="provider-key"?km.replace("{{PROVIDER}}",v):p.baseUrl,model:n,chatCompletion:k,task:w}),e1="data"in a&&!!a.data,$=p.makeHeaders({accessToken:l,authMethod:B});e1||($["Content-Type"]="application/json");const o1=[`${xm}/${Sm}`,typeof navigator<"u"?navigator.userAgent:void 0].filter(v1=>v1!==void 0).join(" ");$["User-Agent"]=o1;const A1=e1?a.data:JSON.stringify(p.makeBody({args:h,model:n,task:w,chatCompletion:k}));let i1;typeof _=="string"?i1=_:_===!0&&(i1="include");const I={headers:$,method:"POST",body:A1,...i1?{credentials:i1}:void 0,signal:S};return{url:V,info:I}}async function Em(n){Uo||(Uo=await Tm());const a=Uo[n];if(((a==null?void 0:a.models.length)??0)<=0)throw new Error(`No default model defined for task ${n}, please define the model explicitly.`);return a.models[0].id}async function Tm(){const n=await fetch(`${pc}/api/tasks`);if(!n.ok)throw new Error("Failed to load tasks definitions from Hugging Face Hub.");return await n.json()}function Cm(n,a){if(!n.startsWith(`${a}/`))throw new Error(`Models from ${a} must be prefixed by "${a}/". Got "${n}".`);return n.slice(a.length+1)}async function J1(n,a){var c;const{url:r,info:l}=await gc(n,a),s=await((a==null?void 0:a.fetch)??fetch)(r,l);if((a==null?void 0:a.retry_on_error)!==!1&&s.status===503)return J1(n,a);if(!s.ok){const d=s.headers.get("Content-Type");if(["application/json","application/problem+json"].some(v=>d==null?void 0:d.startsWith(v))){const v=await s.json();throw[400,422,404,500].includes(s.status)&&(a!=null&&a.chatCompletion)?new Error(`Server ${n.model} does not seem to support chat completion. Error: ${JSON.stringify(v.error)}`):v.error||v.detail?new Error(JSON.stringify(v.error??v.detail)):new Error(v)}const h=d!=null&&d.startsWith("text/plain;")?await s.text():void 0;throw new Error(h??"An error occurred while fetching the blob")}return(c=s.headers.get("Content-Type"))!=null&&c.startsWith("application/json")?await s.json():await s.blob()}function Mm(n){let a,r,l,s=!1;return function(d){a===void 0?(a=d,r=0,l=-1):a=Dm(a,d);const h=a.length;let v=0;for(;r<h;){s&&(a[r]===10&&(v=++r),s=!1);let p=-1;for(;r<h&&p===-1;++r)switch(a[r]){case 58:l===-1&&(l=r-v);break;case 13:s=!0;case 10:p=r;break}if(p===-1)break;n(a.subarray(v,p),l),v=r,l=-1}v===h?a=void 0:v!==0&&(a=a.subarray(v),r-=v)}}function Om(n,a,r){let l=fu();const s=new TextDecoder;return function(d,h){if(d.length===0)r==null||r(l),l=fu();else if(h>0){const v=s.decode(d.subarray(0,h)),p=h+(d[h+1]===32?2:1),_=s.decode(d.subarray(p));switch(v){case"data":l.data=l.data?l.data+`
`+_:_;break;case"event":l.event=_;break;case"id":n(l.id=_);break;case"retry":const w=parseInt(_,10);isNaN(w)||a(l.retry=w);break}}}}function Dm(n,a){const r=new Uint8Array(n.length+a.length);return r.set(n),r.set(a,n.length),r}function fu(){return{data:"",event:"",id:"",retry:void 0}}async function*xa(n,a){var p,_;const{url:r,info:l}=await gc({...n,stream:!0},a),s=await((a==null?void 0:a.fetch)??fetch)(r,l);if((a==null?void 0:a.retry_on_error)!==!1&&s.status===503)return yield*xa(n,a);if(!s.ok){if((p=s.headers.get("Content-Type"))!=null&&p.startsWith("application/json")){const w=await s.json();if([400,422,404,500].includes(s.status)&&(a!=null&&a.chatCompletion))throw new Error(`Server ${n.model} does not seem to support chat completion. Error: ${w.error}`);if(typeof w.error=="string")throw new Error(w.error);if(w.error&&"message"in w.error&&typeof w.error.message=="string")throw new Error(w.error.message)}throw new Error(`Server response contains error: ${s.status}`)}if(!((_=s.headers.get("content-type"))!=null&&_.startsWith("text/event-stream")))throw new Error("Server does not support event stream content type, it returned "+s.headers.get("content-type"));if(!s.body)return;const c=s.body.getReader();let d=[];const v=Mm(Om(()=>{},()=>{},w=>{d.push(w)}));try{for(;;){const{done:w,value:k}=await c.read();if(w)return;v(k);for(const S of d)if(S.data.length>0){if(S.data==="[DONE]")return;const B=JSON.parse(S.data);if(typeof B=="object"&&B!==null&&"error"in B){const V=typeof B.error=="string"?B.error:typeof B.error=="object"&&B.error&&"message"in B.error&&typeof B.error.message=="string"?B.error.message:JSON.stringify(B.error);throw new Error("Error forwarded from backend: "+V)}yield B}d=[]}}finally{c.releaseLock()}}var Q1=class extends TypeError{constructor(n){super(`Invalid inference output: ${n}. Use the 'request' method with the same parameters to do a custom call with no type checking.`),this.name="InferenceOutputError"}};function Lm(n,a){return Object.assign({},...a.map(r=>{if(n[r]!==void 0)return{[r]:n[r]}}))}function vc(n,a){return n.includes(a)}function re(n,a){const r=Array.isArray(a)?a:[a],l=Object.keys(n).filter(s=>!vc(r,s));return Lm(n,l)}function ml(n){return"data"in n?n:{...re(n,"inputs"),data:n.inputs}}async function Rm(n,a){const r=ml(n),l=await J1(r,{...a,task:"audio-classification"});if(!(Array.isArray(l)&&l.every(c=>typeof c.label=="string"&&typeof c.score=="number")))throw new Q1("Expected Array<{label: string, score: number}>");return l}function N0(n){if(globalThis.Buffer)return globalThis.Buffer.from(n).toString("base64");{const a=[];return n.forEach(r=>{a.push(String.fromCharCode(r))}),globalThis.btoa(a.join(""))}}async function Um(n,a){const r=await zm(n),l=await J1(r,{...a,task:"automatic-speech-recognition"});if(!(typeof(l==null?void 0:l.text)=="string"))throw new Q1("Expected {text: string}");return l}var du=["audio/mpeg","audio/mp4","audio/wav","audio/x-wav"];async function zm(n){if(n.provider==="fal-ai"){const a="data"in n&&n.data instanceof Blob?n.data:"inputs"in n?n.inputs:void 0,r=a==null?void 0:a.type;if(!r)throw new Error("Unable to determine the input's content-type. Make sure your are passing a Blob when using provider fal-ai.");if(!du.includes(r))throw new Error(`Provider fal-ai does not support blob type ${r} - supported content types are: ${du.join(", ")}`);const l=N0(new Uint8Array(await a.arrayBuffer()));return{..."data"in n?re(n,"data"):re(n,"inputs"),audio_url:`data:${r};base64,${l}`}}else return ml(n)}async function Nm(n,a){const r=n.provider==="replicate"?{...re(n,["inputs","parameters"]),...n.parameters,text:n.inputs}:n,l=await J1(r,{...a,task:"text-to-speech"});if(l instanceof Blob)return l;if(l&&typeof l=="object"&&"output"in l){if(typeof l.output=="string")return await(await fetch(l.output)).blob();if(Array.isArray(l.output))return await(await fetch(l.output[0])).blob()}throw new Q1("Expected Blob or object with output")}async function Im(n,a){const r=ml(n),l=await J1(r,{...a,task:"audio-to-audio"});return jm(l)}function jm(n){if(!Array.isArray(n))throw new Q1("Expected Array");if(!n.every(a=>typeof a=="object"&&a&&"label"in a&&typeof a.label=="string"&&"content-type"in a&&typeof a["content-type"]=="string"&&"blob"in a&&typeof a.blob=="string"))throw new Q1("Expected Array<{label: string, audio: Blob}>");return n}function Sa(n){return"data"in n?n:{...re(n,"inputs"),data:n.inputs}}async function Bm(n,a){const r=Sa(n),l=await J1(r,{...a,task:"image-classification"});if(!(Array.isArray(l)&&l.every(c=>typeof c.label=="string"&&typeof c.score=="number")))throw new Q1("Expected Array<{label: string, score: number}>");return l}async function qm(n,a){const r=Sa(n),l=await J1(r,{...a,task:"image-segmentation"});if(!(Array.isArray(l)&&l.every(c=>typeof c.label=="string"&&typeof c.mask=="string"&&typeof c.score=="number")))throw new Q1("Expected Array<{label: string, mask: string, score: number}>");return l}async function Hm(n,a){var s;const r=Sa(n),l=(s=await J1(r,{...a,task:"image-to-text"}))==null?void 0:s[0];if(typeof(l==null?void 0:l.generated_text)!="string")throw new Q1("Expected {generated_text: string}");return l}async function Vm(n,a){const r=Sa(n),l=await J1(r,{...a,task:"object-detection"});if(!(Array.isArray(l)&&l.every(c=>typeof c.label=="string"&&typeof c.score=="number"&&typeof c.box.xmin=="number"&&typeof c.box.ymin=="number"&&typeof c.box.xmax=="number"&&typeof c.box.ymax=="number")))throw new Q1("Expected Array<{label:string; score:number; box:{xmin:number; ymin:number; xmax:number; ymax:number}}>");return l}function Fm(n){return new Promise(a=>{setTimeout(()=>a(),n)})}function $m(n){switch(n){case"fal-ai":return{sync_mode:!0};case"nebius":return{response_format:"b64_json"};case"replicate":return;case"together":return{response_format:"base64"};default:return}}async function Pm(n,a){const r=!n.provider||n.provider==="hf-inference"||n.provider==="sambanova"?n:{...re(n,["inputs","parameters"]),...n.parameters,...$m(n.provider),prompt:n.inputs},l=await J1(r,{...a,task:"text-to-image"});if(l&&typeof l=="object"){if(n.provider==="black-forest-labs"&&"polling_url"in l&&typeof l.polling_url=="string")return await Ym(l.polling_url,a==null?void 0:a.outputType);if(n.provider==="fal-ai"&&"images"in l&&Array.isArray(l.images)&&l.images[0].url)return(a==null?void 0:a.outputType)==="url"?l.images[0].url:await(await fetch(l.images[0].url)).blob();if(n.provider==="hyperbolic"&&"images"in l&&Array.isArray(l.images)&&l.images[0]&&typeof l.images[0].image=="string")return(a==null?void 0:a.outputType)==="url"?`data:image/jpeg;base64,${l.images[0].image}`:await(await fetch(`data:image/jpeg;base64,${l.images[0].image}`)).blob();if("data"in l&&Array.isArray(l.data)&&l.data[0].b64_json){const c=l.data[0].b64_json;return(a==null?void 0:a.outputType)==="url"?`data:image/jpeg;base64,${c}`:await(await fetch(`data:image/jpeg;base64,${c}`)).blob()}if("output"in l&&Array.isArray(l.output))return(a==null?void 0:a.outputType)==="url"?l.output[0]:await(await fetch(l.output[0])).blob()}if(!(l&&l instanceof Blob))throw new Q1("Expected Blob");return(a==null?void 0:a.outputType)==="url"?`data:image/jpeg;base64,${await l.arrayBuffer().then(d=>Buffer.from(d).toString("base64"))}`:l}async function Ym(n,a){const r=new URL(n);for(let l=0;l<5;l++){await Fm(1e3),console.debug(`Polling Black Forest Labs API for the result... ${l+1}/5`),r.searchParams.set("attempt",l.toString(10));const s=await fetch(r,{headers:{"Content-Type":"application/json"}});if(!s.ok)throw new Q1("Failed to fetch result from black forest labs API");const c=await s.json();if(typeof c=="object"&&c&&"status"in c&&typeof c.status=="string"&&c.status==="Ready"&&"result"in c&&typeof c.result=="object"&&c.result&&"sample"in c.result&&typeof c.result.sample=="string")return a==="url"?c.result.sample:await(await fetch(c.result.sample)).blob()}throw new Q1("Failed to fetch result from black forest labs API")}async function Qm(n,a){let r;n.parameters?r={...n,inputs:N0(new Uint8Array(n.inputs instanceof ArrayBuffer?n.inputs:await n.inputs.arrayBuffer()))}:r={accessToken:n.accessToken,model:n.model,data:n.inputs};const l=await J1(r,{...a,task:"image-to-image"});if(!(l&&l instanceof Blob))throw new Q1("Expected Blob");return l}async function Xm(n){return n.inputs instanceof Blob?{...n,inputs:{image:N0(new Uint8Array(await n.inputs.arrayBuffer()))}}:{...n,inputs:{image:N0(new Uint8Array(n.inputs.image instanceof ArrayBuffer?n.inputs.image:await n.inputs.image.arrayBuffer()))}}}async function Gm(n,a){const r=await Xm(n),l=await J1(r,{...a,task:"zero-shot-image-classification"});if(!(Array.isArray(l)&&l.every(c=>typeof c.label=="string"&&typeof c.score=="number")))throw new Q1("Expected Array<{label: string, score: number}>");return l}var pu=["fal-ai","novita","replicate"];async function Zm(n,a){if(!n.provider||!vc(pu,n.provider))throw new Error(`textToVideo inference is only supported for the following providers: ${pu.join(", ")}`);const r=n.provider==="fal-ai"||n.provider==="replicate"||n.provider==="novita"?{...re(n,["inputs","parameters"]),...n.parameters,prompt:n.inputs}:n,l=await J1(r,{...a,task:"text-to-video"});if(n.provider==="fal-ai"){if(!(typeof l=="object"&&!!l&&"video"in l&&typeof l.video=="object"&&!!l.video&&"url"in l.video&&typeof l.video.url=="string"&&ma(l.video.url)))throw new Q1("Expected { video: { url: string } }");return await(await fetch(l.video.url)).blob()}else if(n.provider==="novita"){if(!(typeof l=="object"&&!!l&&"video"in l&&typeof l.video=="object"&&!!l.video&&"video_url"in l.video&&typeof l.video.video_url=="string"&&ma(l.video.video_url)))throw new Q1("Expected { video: { video_url: string } }");return await(await fetch(l.video.video_url)).blob()}else{if(!(typeof l=="object"&&!!l&&"output"in l&&typeof l.output=="string"&&ma(l.output)))throw new Q1("Expected { output: string }");return await(await fetch(l.output)).blob()}}async function Km(n,a){const r=await J1(n,{...a,task:"feature-extraction"});let l=!0;const s=(c,d,h=0)=>h>d?!1:c.every(v=>Array.isArray(v))?c.every(v=>s(v,d,h+1)):c.every(v=>typeof v=="number");if(l=Array.isArray(r)&&s(r,3,0),!l)throw new Q1("Expected Array<number[][][] | number[][] | number[] | number>");return r}async function Jm(n,a){const r=await J1(n,{...a,task:"fill-mask"});if(!(Array.isArray(r)&&r.every(s=>typeof s.score=="number"&&typeof s.sequence=="string"&&typeof s.token=="number"&&typeof s.token_str=="string")))throw new Q1("Expected Array<{score: number, sequence: string, token: number, token_str: string}>");return r}async function Wm(n,a){const r=await J1(n,{...a,task:"question-answering"});if(!(Array.isArray(r)?r.every(s=>typeof s=="object"&&!!s&&typeof s.answer=="string"&&typeof s.end=="number"&&typeof s.score=="number"&&typeof s.start=="number"):typeof r=="object"&&!!r&&typeof r.answer=="string"&&typeof r.end=="number"&&typeof r.score=="number"&&typeof r.start=="number"))throw new Q1("Expected Array<{answer: string, end: number, score: number, start: number}>");return Array.isArray(r)?r[0]:r}async function e8(n,a){const r=await J1(t8(n),{...a,task:"sentence-similarity"});if(!(Array.isArray(r)&&r.every(s=>typeof s=="number")))throw new Q1("Expected number[]");return r}function t8(n){return{...re(n,["inputs","parameters"]),inputs:{...re(n.inputs,"sourceSentence")},parameters:{source_sentence:n.inputs.sourceSentence,...n.parameters}}}async function n8(n,a){const r=await J1(n,{...a,task:"summarization"});if(!(Array.isArray(r)&&r.every(s=>typeof(s==null?void 0:s.summary_text)=="string")))throw new Q1("Expected Array<{summary_text: string}>");return r==null?void 0:r[0]}async function i8(n,a){const r=await J1(n,{...a,task:"table-question-answering"});if(!(Array.isArray(r)?r.every(s=>hu(s)):hu(r)))throw new Q1("Expected {aggregator: string, answer: string, cells: string[], coordinates: number[][]}");return Array.isArray(r)?r[0]:r}function hu(n){return typeof n=="object"&&!!n&&"aggregator"in n&&typeof n.aggregator=="string"&&"answer"in n&&typeof n.answer=="string"&&"cells"in n&&Array.isArray(n.cells)&&n.cells.every(a=>typeof a=="string")&&"coordinates"in n&&Array.isArray(n.coordinates)&&n.coordinates.every(a=>Array.isArray(a)&&a.every(r=>typeof r=="number"))}async function a8(n,a){var s;const r=(s=await J1(n,{...a,task:"text-classification"}))==null?void 0:s[0];if(!(Array.isArray(r)&&r.every(c=>typeof(c==null?void 0:c.label)=="string"&&typeof c.score=="number")))throw new Q1("Expected Array<{label: string, score: number}>");return r}function Aa(n){return Array.isArray(n)?n:[n]}async function r8(n,a){if(n.provider==="together"){n.prompt=n.inputs;const r=await J1(n,{...a,task:"text-generation"});if(!(typeof r=="object"&&"choices"in r&&Array.isArray(r==null?void 0:r.choices)&&typeof(r==null?void 0:r.model)=="string"))throw new Q1("Expected ChatCompletionOutput");return{generated_text:r.choices[0].text}}else if(n.provider==="hyperbolic"){const r={messages:[{content:n.inputs,role:"user"}],...n.parameters?{max_tokens:n.parameters.max_new_tokens,...re(n.parameters,"max_new_tokens")}:void 0,...re(n,["inputs","parameters"])},l=await J1(r,{...a,task:"text-generation"});if(!(typeof l=="object"&&"choices"in l&&Array.isArray(l==null?void 0:l.choices)&&typeof(l==null?void 0:l.model)=="string"))throw new Q1("Expected ChatCompletionOutput");return{generated_text:l.choices[0].message.content}}else{const r=Aa(await J1(n,{...a,task:"text-generation"}));if(!(Array.isArray(r)&&r.every(s=>"generated_text"in s&&typeof(s==null?void 0:s.generated_text)=="string")))throw new Q1("Expected Array<{generated_text: string}>");return r==null?void 0:r[0]}}async function*o8(n,a){yield*xa(n,{...a,task:"text-generation"})}async function l8(n,a){const r=Aa(await J1(n,{...a,task:"token-classification"}));if(!(Array.isArray(r)&&r.every(s=>typeof s.end=="number"&&typeof s.entity_group=="string"&&typeof s.score=="number"&&typeof s.start=="number"&&typeof s.word=="string")))throw new Q1("Expected Array<{end: number, entity_group: string, score: number, start: number, word: string}>");return r}async function s8(n,a){const r=await J1(n,{...a,task:"translation"});if(!(Array.isArray(r)&&r.every(s=>typeof(s==null?void 0:s.translation_text)=="string")))throw new Q1("Expected type Array<{translation_text: string}>");return(r==null?void 0:r.length)===1?r==null?void 0:r[0]:r}async function u8(n,a){const r=Aa(await J1(n,{...a,task:"zero-shot-classification"}));if(!(Array.isArray(r)&&r.every(s=>Array.isArray(s.labels)&&s.labels.every(c=>typeof c=="string")&&Array.isArray(s.scores)&&s.scores.every(c=>typeof c=="number")&&typeof s.sequence=="string")))throw new Q1("Expected Array<{labels: string[], scores: number[], sequence: string}>");return r}async function c8(n,a){const r=await J1(n,{...a,task:"text-generation",chatCompletion:!0});if(!(typeof r=="object"&&Array.isArray(r==null?void 0:r.choices)&&typeof(r==null?void 0:r.created)=="number"&&typeof(r==null?void 0:r.id)=="string"&&typeof(r==null?void 0:r.model)=="string"&&(r.system_fingerprint===void 0||r.system_fingerprint===null||typeof r.system_fingerprint=="string")&&typeof(r==null?void 0:r.usage)=="object"))throw new Q1("Expected ChatCompletionOutput");return r}async function*f8(n,a){yield*xa(n,{...a,task:"text-generation",chatCompletion:!0})}async function d8(n,a){const r={...n,inputs:{question:n.inputs.question,image:N0(new Uint8Array(await n.inputs.image.arrayBuffer()))}},l=Aa(await J1(r,{...a,task:"document-question-answering"}));if(!(Array.isArray(l)&&l.every(c=>typeof c=="object"&&!!c&&typeof(c==null?void 0:c.answer)=="string"&&(typeof c.end=="number"||typeof c.end>"u")&&(typeof c.score=="number"||typeof c.score>"u")&&(typeof c.start=="number"||typeof c.start>"u"))))throw new Q1("Expected Array<{answer: string, end?: number, score?: number, start?: number}>");return l[0]}async function p8(n,a){const r={...n,inputs:{question:n.inputs.question,image:N0(new Uint8Array(await n.inputs.image.arrayBuffer()))}},l=await J1(r,{...a,task:"visual-question-answering"});if(!(Array.isArray(l)&&l.every(c=>typeof c=="object"&&!!c&&typeof(c==null?void 0:c.answer)=="string"&&typeof c.score=="number")))throw new Q1("Expected Array<{answer: string, score: number}>");return l[0]}async function h8(n,a){const r=await J1(n,{...a,task:"tabular-regression"});if(!(Array.isArray(r)&&r.every(s=>typeof s=="number")))throw new Q1("Expected number[]");return r}async function m8(n,a){const r=await J1(n,{...a,task:"tabular-classification"});if(!(Array.isArray(r)&&r.every(s=>typeof s=="number")))throw new Q1("Expected number[]");return r}var g8=class{constructor(n="",a={}){C1(this,"accessToken");C1(this,"defaultOptions");this.accessToken=n,this.defaultOptions=a;for(const[r,l]of Object.entries(hl))Object.defineProperty(this,r,{enumerable:!1,value:(s,c)=>l({...s,accessToken:n},{...a,...c})})}endpoint(n){return new y8(n,this.accessToken,this.defaultOptions)}},y8=class{constructor(n,a="",r={}){for(const[l,s]of Object.entries(hl))Object.defineProperty(this,l,{enumerable:!1,value:(c,d)=>s({...c,accessToken:a,endpointUrl:n},{...r,...d})})}},v8=class extends g8{},b8={};dc(b8,{getInferenceSnippets:()=>O8});var bc={js:{fetch:{basic:`async function query(data) {
	const response = await fetch(
		"{{ fullUrl }}",
		{
			headers: {
				Authorization: "{{ authorizationHeader }}",
				"Content-Type": "application/json",
			},
			method: "POST",
			body: JSON.stringify(data),
		}
	);
	const result = await response.json();
	return result;
}

query({ inputs: {{ providerInputs.asObj.inputs }} }).then((response) => {
    console.log(JSON.stringify(response));
});`,basicAudio:`async function query(data) {
	const response = await fetch(
		"{{ fullUrl }}",
		{
			headers: {
				Authorization: "{{ authorizationHeader }}",
				"Content-Type": "audio/flac"
			},
			method: "POST",
			body: JSON.stringify(data),
		}
	);
	const result = await response.json();
	return result;
}

query({ inputs: {{ providerInputs.asObj.inputs }} }).then((response) => {
    console.log(JSON.stringify(response));
});`,basicImage:`async function query(data) {
	const response = await fetch(
		"{{ fullUrl }}",
		{
			headers: {
				Authorization: "{{ authorizationHeader }}",
				"Content-Type": "image/jpeg"
			},
			method: "POST",
			body: JSON.stringify(data),
		}
	);
	const result = await response.json();
	return result;
}

query({ inputs: {{ providerInputs.asObj.inputs }} }).then((response) => {
    console.log(JSON.stringify(response));
});`,textToAudio:`{% if model.library_name == "transformers" %}
async function query(data) {
	const response = await fetch(
		"{{ fullUrl }}",
		{
			headers: {
				Authorization: "{{ authorizationHeader }}",
				"Content-Type": "application/json",
			},
			method: "POST",
			body: JSON.stringify(data),
		}
	);
	const result = await response.blob();
    return result;
}

query({ inputs: {{ providerInputs.asObj.inputs }} }).then((response) => {
    // Returns a byte object of the Audio wavform. Use it directly!
});
{% else %}
async function query(data) {
	const response = await fetch(
		"{{ fullUrl }}",
		{
			headers: {
				Authorization: "{{ authorizationHeader }}",
				"Content-Type": "application/json",
			},
			method: "POST",
			body: JSON.stringify(data),
		}
	);
    const result = await response.json();
    return result;
}

query({ inputs: {{ providerInputs.asObj.inputs }} }).then((response) => {
    console.log(JSON.stringify(response));
});
{% endif %} `,textToImage:`async function query(data) {
	const response = await fetch(
		"{{ fullUrl }}",
		{
			headers: {
				Authorization: "{{ authorizationHeader }}",
				"Content-Type": "application/json",
			},
			method: "POST",
			body: JSON.stringify(data),
		}
	);
	const result = await response.blob();
	return result;
}

query({ inputs: {{ providerInputs.asObj.inputs }} }).then((response) => {
    // Use image
});`,zeroShotClassification:`async function query(data) {
    const response = await fetch(
		"{{ fullUrl }}",
        {
            headers: {
				Authorization: "{{ authorizationHeader }}",
                "Content-Type": "application/json",
            },
            method: "POST",
            body: JSON.stringify(data),
        }
    );
    const result = await response.json();
    return result;
}

query({
    inputs: {{ providerInputs.asObj.inputs }},
    parameters: { candidate_labels: ["refund", "legal", "faq"] }
}).then((response) => {
    console.log(JSON.stringify(response));
});`},"huggingface.js":{basic:`import { InferenceClient } from "@huggingface/inference";

const client = new InferenceClient("{{ accessToken }}");

const output = await client.{{ methodName }}({
	model: "{{ model.id }}",
	inputs: {{ inputs.asObj.inputs }},
	provider: "{{ provider }}",
});

console.log(output);`,basicAudio:`import { InferenceClient } from "@huggingface/inference";

const client = new InferenceClient("{{ accessToken }}");

const data = fs.readFileSync({{inputs.asObj.inputs}});

const output = await client.{{ methodName }}({
	data,
	model: "{{ model.id }}",
	provider: "{{ provider }}",
});

console.log(output);`,basicImage:`import { InferenceClient } from "@huggingface/inference";

const client = new InferenceClient("{{ accessToken }}");

const data = fs.readFileSync({{inputs.asObj.inputs}});

const output = await client.{{ methodName }}({
	data,
	model: "{{ model.id }}",
	provider: "{{ provider }}",
});

console.log(output);`,conversational:`import { InferenceClient } from "@huggingface/inference";

const client = new InferenceClient("{{ accessToken }}");

const chatCompletion = await client.chatCompletion({
    provider: "{{ provider }}",
    model: "{{ model.id }}",
{{ inputs.asTsString }}
});

console.log(chatCompletion.choices[0].message);`,conversationalStream:`import { InferenceClient } from "@huggingface/inference";

const client = new InferenceClient("{{ accessToken }}");

let out = "";

const stream = await client.chatCompletionStream({
    provider: "{{ provider }}",
    model: "{{ model.id }}",
{{ inputs.asTsString }}
});

for await (const chunk of stream) {
	if (chunk.choices && chunk.choices.length > 0) {
		const newContent = chunk.choices[0].delta.content;
		out += newContent;
		console.log(newContent);
	}  
}`,textToImage:`import { InferenceClient } from "@huggingface/inference";

const client = new InferenceClient("{{ accessToken }}");

const image = await client.textToImage({
    provider: "{{ provider }}",
    model: "{{ model.id }}",
	inputs: {{ inputs.asObj.inputs }},
	parameters: { num_inference_steps: 5 },
});
/// Use the generated image (it's a Blob)`,textToVideo:`import { InferenceClient } from "@huggingface/inference";

const client = new InferenceClient("{{ accessToken }}");

const image = await client.textToVideo({
    provider: "{{ provider }}",
    model: "{{ model.id }}",
	inputs: {{ inputs.asObj.inputs }},
});
// Use the generated video (it's a Blob)`},openai:{conversational:`import { OpenAI } from "openai";

const client = new OpenAI({
	baseURL: "{{ baseUrl }}",
	apiKey: "{{ accessToken }}",
});

const chatCompletion = await client.chat.completions.create({
	model: "{{ providerModelId }}",
{{ inputs.asTsString }}
});

console.log(chatCompletion.choices[0].message);`,conversationalStream:`import { OpenAI } from "openai";

const client = new OpenAI({
	baseURL: "{{ baseUrl }}",
	apiKey: "{{ accessToken }}",
});

let out = "";

const stream = await client.chat.completions.create({
    provider: "{{ provider }}",
    model: "{{ model.id }}",
{{ inputs.asTsString }}
});

for await (const chunk of stream) {
	if (chunk.choices && chunk.choices.length > 0) {
		const newContent = chunk.choices[0].delta.content;
		out += newContent;
		console.log(newContent);
	}  
}`}},python:{fal_client:{textToImage:`{% if provider == "fal-ai" %}
import fal_client

result = fal_client.subscribe(
    "{{ providerModelId }}",
    arguments={
        "prompt": {{ inputs.asObj.inputs }},
    },
)
print(result)
{% endif %} `},huggingface_hub:{basic:`result = client.{{ methodName }}(
    inputs={{ inputs.asObj.inputs }},
    model="{{ model.id }}",
)`,basicAudio:'output = client.{{ methodName }}({{ inputs.asObj.inputs }}, model="{{ model.id }}")',basicImage:'output = client.{{ methodName }}({{ inputs.asObj.inputs }}, model="{{ model.id }}")',conversational:`completion = client.chat.completions.create(
    model="{{ model.id }}",
{{ inputs.asPythonString }}
)

print(completion.choices[0].message) `,conversationalStream:`stream = client.chat.completions.create(
    model="{{ model.id }}",
{{ inputs.asPythonString }}
    stream=True,
)

for chunk in stream:
    print(chunk.choices[0].delta.content, end="") `,documentQuestionAnswering:`output = client.document_question_answering(
    "{{ inputs.asObj.image }}",
    question="{{ inputs.asObj.question }}",
    model="{{ model.id }}",
) `,imageToImage:`# output is a PIL.Image object
image = client.image_to_image(
    "{{ inputs.asObj.inputs }}",
    prompt="{{ inputs.asObj.parameters.prompt }}",
    model="{{ model.id }}",
) `,importInferenceClient:`from huggingface_hub import InferenceClient

client = InferenceClient(
    provider="{{ provider }}",
    api_key="{{ accessToken }}",
)`,textToImage:`# output is a PIL.Image object
image = client.text_to_image(
    {{ inputs.asObj.inputs }},
    model="{{ model.id }}",
) `,textToVideo:`video = client.text_to_video(
    {{ inputs.asObj.inputs }},
    model="{{ model.id }}",
) `},openai:{conversational:`from openai import OpenAI

client = OpenAI(
    base_url="{{ baseUrl }}",
    api_key="{{ accessToken }}"
)

completion = client.chat.completions.create(
    model="{{ providerModelId }}",
{{ inputs.asPythonString }}
)

print(completion.choices[0].message) `,conversationalStream:`from openai import OpenAI

client = OpenAI(
    base_url="{{ baseUrl }}",
    api_key="{{ accessToken }}"
)

stream = client.chat.completions.create(
    model="{{ providerModelId }}",
{{ inputs.asPythonString }}
    stream=True,
)

for chunk in stream:
    print(chunk.choices[0].delta.content, end="")`},requests:{basic:`def query(payload):
    response = requests.post(API_URL, headers=headers, json=payload)
    return response.json()

output = query({
    "inputs": {{ providerInputs.asObj.inputs }},
}) `,basicAudio:`def query(filename):
    with open(filename, "rb") as f:
        data = f.read()
    response = requests.post(API_URL, headers={"Content-Type": "audio/flac", **headers}, data=data)
    return response.json()

output = query({{ providerInputs.asObj.inputs }})`,basicImage:`def query(filename):
    with open(filename, "rb") as f:
        data = f.read()
    response = requests.post(API_URL, headers={"Content-Type": "image/jpeg", **headers}, data=data)
    return response.json()

output = query({{ providerInputs.asObj.inputs }})`,conversational:`def query(payload):
    response = requests.post(API_URL, headers=headers, json=payload)
    return response.json()

response = query({
{{ providerInputs.asJsonString }}
})

print(response["choices"][0]["message"])`,conversationalStream:`def query(payload):
    response = requests.post(API_URL, headers=headers, json=payload, stream=True)
    for line in response.iter_lines():
        if not line.startswith(b"data:"):
            continue
        if line.strip() == b"data: [DONE]":
            return
        yield json.loads(line.decode("utf-8").lstrip("data:").rstrip("/n"))

chunks = query({
{{ providerInputs.asJsonString }},
    "stream": True,
})

for chunk in chunks:
    print(chunk["choices"][0]["delta"]["content"], end="")`,documentQuestionAnswering:`def query(payload):
    with open(payload["image"], "rb") as f:
        img = f.read()
        payload["image"] = base64.b64encode(img).decode("utf-8")
    response = requests.post(API_URL, headers=headers, json=payload)
    return response.json()

output = query({
    "inputs": {
        "image": "{{ inputs.asObj.image }}",
        "question": "{{ inputs.asObj.question }}",
    },
}) `,imageToImage:`def query(payload):
    with open(payload["inputs"], "rb") as f:
        img = f.read()
        payload["inputs"] = base64.b64encode(img).decode("utf-8")
    response = requests.post(API_URL, headers=headers, json=payload)
    return response.content

image_bytes = query({
{{ providerInputs.asJsonString }}
})

# You can access the image with PIL.Image for example
import io
from PIL import Image
image = Image.open(io.BytesIO(image_bytes)) `,importRequests:`{% if importBase64 %}
import base64
{% endif %}
{% if importJson %}
import json
{% endif %}
import requests

API_URL = "{{ fullUrl }}"
headers = {"Authorization": "{{ authorizationHeader }}"}`,tabular:`def query(payload):
    response = requests.post(API_URL, headers=headers, json=payload)
    return response.content

response = query({
    "inputs": {
        "data": {{ providerInputs.asObj.inputs }}
    },
}) `,textToAudio:`{% if model.library_name == "transformers" %}
def query(payload):
    response = requests.post(API_URL, headers=headers, json=payload)
    return response.content

audio_bytes = query({
    "inputs": {{ providerInputs.asObj.inputs }},
})
# You can access the audio with IPython.display for example
from IPython.display import Audio
Audio(audio_bytes)
{% else %}
def query(payload):
    response = requests.post(API_URL, headers=headers, json=payload)
    return response.json()

audio, sampling_rate = query({
    "inputs": {{ providerInputs.asObj.inputs }},
})
# You can access the audio with IPython.display for example
from IPython.display import Audio
Audio(audio, rate=sampling_rate)
{% endif %} `,textToImage:`{% if provider == "hf-inference" %}
def query(payload):
    response = requests.post(API_URL, headers=headers, json=payload)
    return response.content

image_bytes = query({
    "inputs": {{ providerInputs.asObj.inputs }},
})

# You can access the image with PIL.Image for example
import io
from PIL import Image
image = Image.open(io.BytesIO(image_bytes))
{% endif %}`,zeroShotClassification:`def query(payload):
    response = requests.post(API_URL, headers=headers, json=payload)
    return response.json()

output = query({
    "inputs": {{ providerInputs.asObj.inputs }},
    "parameters": {"candidate_labels": ["refund", "legal", "faq"]},
}) `,zeroShotImageClassification:`def query(data):
    with open(data["image_path"], "rb") as f:
        img = f.read()
    payload={
        "parameters": data["parameters"],
        "inputs": base64.b64encode(img).decode("utf-8")
    }
    response = requests.post(API_URL, headers=headers, json=payload)
    return response.json()

output = query({
    "image_path": {{ providerInputs.asObj.inputs }},
    "parameters": {"candidate_labels": ["cat", "dog", "llama"]},
}) `}},sh:{curl:{basic:`curl {{ fullUrl }} \\
    -X POST \\
    -H 'Authorization: {{ authorizationHeader }}' \\
    -H 'Content-Type: application/json' \\
    -d '{
{{ providerInputs.asCurlString }}
    }'`,basicAudio:`curl {{ fullUrl }} \\
    -X POST \\
    -H 'Authorization: {{ authorizationHeader }}' \\
    -H 'Content-Type: audio/flac' \\
    --data-binary @{{ providerInputs.asObj.inputs }}`,basicImage:`curl {{ fullUrl }} \\
    -X POST \\
    -H 'Authorization: {{ authorizationHeader }}' \\
    -H 'Content-Type: image/jpeg' \\
    --data-binary @{{ providerInputs.asObj.inputs }}`,conversational:`curl {{ fullUrl }} \\
    -H 'Authorization: {{ authorizationHeader }}' \\
    -H 'Content-Type: application/json' \\
    -d '{
{{ providerInputs.asCurlString }},
        "stream": false
    }'`,conversationalStream:`curl {{ fullUrl }} \\
    -H 'Authorization: {{ authorizationHeader }}' \\
    -H 'Content-Type: application/json' \\
    -d '{
{{ providerInputs.asCurlString }},
        "stream": true
    }'`,zeroShotClassification:`curl {{ fullUrl }} \\
    -X POST \\
    -d '{"inputs": {{ providerInputs.asObj.inputs }}, "parameters": {"candidate_labels": ["refund", "legal", "faq"]}}' \\
    -H 'Content-Type: application/json' \\
    -H 'Authorization: {{ authorizationHeader }}'`}}},_8=["huggingface_hub","fal_client","requests","openai"],w8=["fetch","huggingface.js","openai"],x8=["curl"],S8={js:[...w8],python:[..._8],sh:[...x8]},A8=(n,a,r)=>{var l,s;return((s=(l=bc[n])==null?void 0:l[a])==null?void 0:s[r])!==void 0},gl=(n,a,r)=>{var s,c;const l=(c=(s=bc[n])==null?void 0:s[a])==null?void 0:c[r];if(!l)throw new Error(`Template not found: ${n}/${a}/${r}`);return d=>new ch(l).render({...d})},k8=gl("python","huggingface_hub","importInferenceClient"),E8=gl("python","requests","importRequests"),mu={"audio-classification":"audio_classification","audio-to-audio":"audio_to_audio","automatic-speech-recognition":"automatic_speech_recognition","document-question-answering":"document_question_answering","feature-extraction":"feature_extraction","fill-mask":"fill_mask","image-classification":"image_classification","image-segmentation":"image_segmentation","image-to-image":"image_to_image","image-to-text":"image_to_text","object-detection":"object_detection","question-answering":"question_answering","sentence-similarity":"sentence_similarity",summarization:"summarization","table-question-answering":"table_question_answering","tabular-classification":"tabular_classification","tabular-regression":"tabular_regression","text-classification":"text_classification","text-generation":"text_generation","text-to-image":"text_to_image","text-to-speech":"text_to_speech","text-to-video":"text_to_video","token-classification":"token_classification",translation:"translation","visual-question-answering":"visual_question_answering","zero-shot-classification":"zero_shot_classification","zero-shot-image-classification":"zero_shot_image_classification"},gu={"automatic-speech-recognition":"automaticSpeechRecognition","feature-extraction":"featureExtraction","fill-mask":"fillMask","image-classification":"imageClassification","question-answering":"questionAnswering","sentence-similarity":"sentenceSimilarity",summarization:"summarization","table-question-answering":"tableQuestionAnswering","text-classification":"textClassification","text-generation":"textGeneration","text2text-generation":"textGeneration","token-classification":"tokenClassification",translation:"translation"},n2=(n,a)=>(r,l,s,c,d)=>{var k;r.pipeline_tag&&["text-generation","image-text-to-text"].includes(r.pipeline_tag)&&r.tags.includes("conversational")&&(n=d!=null&&d.streaming?"conversationalStream":"conversational",a=M8);const h=a?a(r,d):{inputs:ti(r)},v=yc(c??r.id,{accessToken:l,provider:s,...h},{chatCompletion:n.includes("conversational"),task:r.pipeline_tag});let p=h;const _=v.info.body;if(typeof _=="string")try{p=JSON.parse(_)}catch(S){console.error("Failed to parse body as JSON",S)}const w={accessToken:l,authorizationHeader:(k=v.info.headers)==null?void 0:k.Authorization,baseUrl:D8(v.url,"/chat/completions"),fullUrl:v.url,inputs:{asObj:h,asCurlString:Be(h,"curl"),asJsonString:Be(h,"json"),asPythonString:Be(h,"python"),asTsString:Be(h,"ts")},providerInputs:{asObj:p,asCurlString:Be(p,"curl"),asJsonString:Be(p,"json"),asPythonString:Be(p,"python"),asTsString:Be(p,"ts")},model:r,provider:s,providerModelId:c??r.id};return Bp.map(S=>S8[S].map(B=>{if(!A8(S,B,n))return;const V=gl(S,B,n);if(B==="huggingface_hub"&&n.includes("basic")){if(!(r.pipeline_tag&&r.pipeline_tag in mu))return;w.methodName=mu[r.pipeline_tag]}if(B==="huggingface.js"&&n.includes("basic")){if(!(r.pipeline_tag&&r.pipeline_tag in gu))return;w.methodName=gu[r.pipeline_tag]}let e1=V(w).trim();if(e1)return B==="huggingface_hub"?e1=`${k8({...w})}

${e1}`:B==="requests"&&(e1=`${E8({...w,importBase64:e1.includes("base64"),importJson:e1.includes("json.")})}

${e1}`),{language:S,client:B,content:e1}}).filter(B=>B!==void 0)).flat()},T8=n=>JSON.parse(ti(n)),C8=n=>{const a=JSON.parse(ti(n));return{inputs:a.image,parameters:{prompt:a.prompt}}},M8=(n,a)=>({messages:(a==null?void 0:a.messages)??ti(n),...a!=null&&a.temperature?{temperature:a==null?void 0:a.temperature}:void 0,max_tokens:(a==null?void 0:a.max_tokens)??500,...a!=null&&a.top_p?{top_p:a==null?void 0:a.top_p}:void 0}),ua={"audio-classification":n2("basicAudio"),"audio-to-audio":n2("basicAudio"),"automatic-speech-recognition":n2("basicAudio"),"document-question-answering":n2("documentQuestionAnswering",T8),"feature-extraction":n2("basic"),"fill-mask":n2("basic"),"image-classification":n2("basicImage"),"image-segmentation":n2("basicImage"),"image-text-to-text":n2("conversational"),"image-to-image":n2("imageToImage",C8),"image-to-text":n2("basicImage"),"object-detection":n2("basicImage"),"question-answering":n2("basic"),"sentence-similarity":n2("basic"),summarization:n2("basic"),"tabular-classification":n2("tabular"),"tabular-regression":n2("tabular"),"table-question-answering":n2("basic"),"text-classification":n2("basic"),"text-generation":n2("basic"),"text-to-audio":n2("textToAudio"),"text-to-image":n2("textToImage"),"text-to-speech":n2("textToAudio"),"text-to-video":n2("textToVideo"),"text2text-generation":n2("basic"),"token-classification":n2("basic"),translation:n2("basic"),"zero-shot-classification":n2("zeroShotClassification"),"zero-shot-image-classification":n2("zeroShotImageClassification")};function O8(n,a,r,l,s){var c;return n.pipeline_tag&&n.pipeline_tag in ua?((c=ua[n.pipeline_tag])==null?void 0:c.call(ua,n,a,r,l,s))??[]:[]}function Be(n,a){switch(a){case"curl":return yu(Be(n,"json"));case"json":return JSON.stringify(n,null,4).split(`
`).slice(1,-1).join(`
`);case"python":return yu(Object.entries(n).map(([r,l])=>{const s=JSON.stringify(l,null,4).replace(/"/g,'"');return`${r}=${s},`}).join(`
`));case"ts":return Wo(n).split(`
`).slice(1,-1).join(`
`);default:throw new Error(`Unsupported format: ${a}`)}}function Wo(n,a){return a=a??0,typeof n!="object"||n===null?JSON.stringify(n):Array.isArray(n)?`[
${n.map(c=>{const d=Wo(c,a+1);return`${" ".repeat(4*(a+1))}${d},`}).join(`
`)}
${" ".repeat(4*a)}]`:`{
${Object.entries(n).map(([s,c])=>{const d=Wo(c,a+1),h=/^[a-zA-Z_$][a-zA-Z0-9_$]*$/.test(s)?s:`"${s}"`;return`${" ".repeat(4*(a+1))}${h}: ${d},`}).join(`
`)}
${" ".repeat(4*a)}}`}function yu(n){return n.split(`
`).map(a=>" ".repeat(4)+a).join(`
`)}function D8(n,a){return n.endsWith(a)?n.slice(0,-a.length):n}const L8=`
You are an assistant that receives a list of ingredients that a user has and suggests a recipe they could make with some or all of those ingredients. You don't need to use every ingredients they mention in your recipe. The recipe can include additional ingredients they didn't mention, but try not to include too many extra ingredients. Format your response in markdown to make it easier to render to a web page. Do not include opening remark. Directly mention name of the suggested dish in within h3 tags with css class of "orange-text". Underneath that h3 tag, 
add 2 h2 tags for ingredients and instructions. Under ingredients heading, list all ingredients the user needs in unordered list. Under instructions heading, list out the step by step guide to prepare the dish in ordered list.
`,R8=new v8(void 0);async function U8(n){const a=n.join(", ");try{return(await R8.chatCompletion({model:"mistralai/Mixtral-8x7B-Instruct-v0.1",messages:[{role:"system",content:L8},{role:"user",content:`I have ${a}. Please give me a recipe you'd recommend I make!`}],max_tokens:1024})).choices[0].message.content}catch(r){console.error(r.message)}}function z8(n){const{ingredients:a}=n,r=a.map(c=>T1.jsx("li",{children:c},c));console.log("ingredientList",r);const l=T1.jsx("p",{className:"orange-text",children:"Enter available ingredients to get recipe ideas ..."}),s=T1.jsxs("section",{className:"ingredients-list",children:[T1.jsx("h2",{children:"Ingredients on hand:"}),T1.jsx("ul",{children:r})]});return T1.jsx(T1.Fragment,{children:r.length>0?s:l})}var N8=Object.defineProperty,I8=Object.defineProperties,j8=Object.getOwnPropertyDescriptors,va=Object.getOwnPropertySymbols,_c=Object.prototype.hasOwnProperty,wc=Object.prototype.propertyIsEnumerable,el=(n,a,r)=>a in n?N8(n,a,{enumerable:!0,configurable:!0,writable:!0,value:r}):n[a]=r,J2=(n,a)=>{for(var r in a||(a={}))_c.call(a,r)&&el(n,r,a[r]);if(va)for(var r of va(a))wc.call(a,r)&&el(n,r,a[r]);return n},y3=(n,a)=>I8(n,j8(a)),xc=(n,a)=>{var r={};for(var l in n)_c.call(n,l)&&a.indexOf(l)<0&&(r[l]=n[l]);if(n!=null&&va)for(var l of va(n))a.indexOf(l)<0&&wc.call(n,l)&&(r[l]=n[l]);return r},j1=(n,a,r)=>el(n,typeof a!="symbol"?a+"":a,r),$1=(n,a,r)=>new Promise((l,s)=>{var c=v=>{try{h(r.next(v))}catch(p){s(p)}},d=v=>{try{h(r.throw(v))}catch(p){s(p)}},h=v=>v.done?l(v.value):Promise.resolve(v.value).then(c,d);h((r=r.apply(n,a)).next())}),B8=class{requestAnimationFrame(n){return requestAnimationFrame(n)}cancelAnimationFrame(n){cancelAnimationFrame(n)}},q8=class{constructor(){j1(this,"_lastHandleId",0),j1(this,"_lastImmediate",null)}requestAnimationFrame(n){return this._lastHandleId>=Number.MAX_SAFE_INTEGER&&(this._lastHandleId=0),this._lastHandleId+=1,this._lastImmediate=setImmediate(()=>{n(Date.now())}),this._lastHandleId}cancelAnimationFrame(n){this._lastImmediate&&clearImmediate(this._lastImmediate)}},H8=class{constructor(){j1(this,"_strategy"),this._strategy=typeof requestAnimationFrame=="function"?new B8:new q8}requestAnimationFrame(n){return this._strategy.requestAnimationFrame(n)}cancelAnimationFrame(n){this._strategy.cancelAnimationFrame(n)}},r3=typeof window<"u"&&typeof window.document<"u",zo=new Uint8Array([80,75,3,4]),V8=["v","ip","op","layers","fr","w","h"],Sc="0.41.0",Ac="@lottiefiles/dotlottie-web",F8=.75,$8=(()=>{var n,a=typeof document<"u"?(n=document.currentScript)==null?void 0:n.src:void 0;return function(r={}){var l,s=r,c,d,h=new Promise((m,y)=>{c=m,d=y}),v=Object.assign({},s),p="./this.program",_="",w;typeof document<"u"&&document.currentScript&&(_=document.currentScript.src),a&&(_=a),_.startsWith("blob:")?_="":_=_.substr(0,_.replace(/[?#].*/,"").lastIndexOf("/")+1),w=m=>fetch(m,{credentials:"same-origin"}).then(y=>y.ok?y.arrayBuffer():Promise.reject(Error(y.status+" : "+y.url)));var k=s.printErr||console.error.bind(console);Object.assign(s,v),v=null,s.thisProgram&&(p=s.thisProgram);var S=s.wasmBinary,B,V=!1,e1,$,n1,o1,A1,i1,I,v1,_1;function t1(){var m=B.buffer;s.HEAP8=$=new Int8Array(m),s.HEAP16=o1=new Int16Array(m),s.HEAPU8=n1=new Uint8Array(m),s.HEAPU16=A1=new Uint16Array(m),s.HEAP32=i1=new Int32Array(m),s.HEAPU32=I=new Uint32Array(m),s.HEAPF32=v1=new Float32Array(m),s.HEAPF64=_1=new Float64Array(m)}var f1=[],u1=[],c1=[];function Q(){var m=s.preRun.shift();f1.unshift(m)}var l1=0,s1=null;function M(m){var y;throw(y=s.onAbort)==null||y.call(s,m),m="Aborted("+m+")",k(m),V=!0,m=new WebAssembly.RuntimeError(m+". Build with -sASSERTIONS for more info."),d(m),m}var q=m=>m.startsWith("data:application/octet-stream;base64,"),P;function x1(m){if(m==P&&S)return new Uint8Array(S);throw"both async and sync fetching of the wasm failed"}function b(m){return S?Promise.resolve().then(()=>x1(m)):w(m).then(y=>new Uint8Array(y),()=>x1(m))}function Z(m,y,A){return b(m).then(E=>WebAssembly.instantiate(E,y)).then(A,E=>{k(`failed to asynchronously prepare wasm: ${E}`),M(E)})}function h1(m,y){var A=P;return S||typeof WebAssembly.instantiateStreaming!="function"||q(A)||typeof fetch!="function"?Z(A,m,y):fetch(A,{credentials:"same-origin"}).then(E=>WebAssembly.instantiateStreaming(E,m).then(y,function(O){return k(`wasm streaming compile failed: ${O}`),k("falling back to ArrayBuffer instantiation"),Z(A,m,y)}))}class T{constructor(y){j1(this,"name","ExitStatus"),this.message=`Program terminated with exit(${y})`,this.status=y}}var a1=m=>{for(;0<m.length;)m.shift()(s)},E1=s.noExitRuntime||!0,g1=typeof TextDecoder<"u"?new TextDecoder:void 0,o2=(m=0,y=NaN)=>{var A=n1,E=m+y;for(y=m;A[y]&&!(y>=E);)++y;if(16<y-m&&A.buffer&&g1)return g1.decode(A.subarray(m,y));for(E="";m<y;){var O=A[m++];if(O&128){var j=A[m++]&63;if((O&224)==192)E+=String.fromCharCode((O&31)<<6|j);else{var J=A[m++]&63;O=(O&240)==224?(O&15)<<12|j<<6|J:(O&7)<<18|j<<12|J<<6|A[m++]&63,65536>O?E+=String.fromCharCode(O):(O-=65536,E+=String.fromCharCode(55296|O>>10,56320|O&1023))}}else E+=String.fromCharCode(O)}return E};class N1{constructor(y){this.va=y-24}}var e2=0,V1=(m,y,A)=>{var E=n1;if(0<A){A=y+A-1;for(var O=0;O<m.length;++O){var j=m.charCodeAt(O);if(55296<=j&&57343>=j){var J=m.charCodeAt(++O);j=65536+((j&1023)<<10)|J&1023}if(127>=j){if(y>=A)break;E[y++]=j}else{if(2047>=j){if(y+1>=A)break;E[y++]=192|j>>6}else{if(65535>=j){if(y+2>=A)break;E[y++]=224|j>>12}else{if(y+3>=A)break;E[y++]=240|j>>18,E[y++]=128|j>>12&63}E[y++]=128|j>>6&63}E[y++]=128|j&63}}E[y]=0}},M2={},Z3=m=>{for(;m.length;){var y=m.pop();m.pop()(y)}};function W2(m){return this.fromWireType(I[m>>2])}var _3={},l3={},p3={},z3,s3=(m,y,A)=>{function E(X){if(X=A(X),X.length!==m.length)throw new z3("Mismatched type converter count");for(var d1=0;d1<m.length;++d1)u3(m[d1],X[d1])}m.forEach(X=>p3[X]=y);var O=Array(y.length),j=[],J=0;y.forEach((X,d1)=>{l3.hasOwnProperty(X)?O[d1]=l3[X]:(j.push(X),_3.hasOwnProperty(X)||(_3[X]=[]),_3[X].push(()=>{O[d1]=l3[X],++J,J===j.length&&E(O)}))}),j.length===0&&E(O)},be,g2=m=>{for(var y="";n1[m];)y+=be[n1[m++]];return y},R1;function q0(m,y,A={}){var E=y.name;if(!m)throw new R1(`type "${E}" must have a positive integer typeid pointer`);if(l3.hasOwnProperty(m)){if(A.$a)return;throw new R1(`Cannot register type '${E}' twice`)}l3[m]=y,delete p3[m],_3.hasOwnProperty(m)&&(y=_3[m],delete _3[m],y.forEach(O=>O()))}function u3(m,y,A={}){return q0(m,y,A)}var e3=m=>{throw new R1(m.ta.wa.ua.name+" instance already deleted")},ht=!1,F=()=>{},r1=(m,y,A)=>y===A?m:A.za===void 0?null:(m=r1(m,y,A.za),m===null?null:A.Ta(m)),S1={},B1={},G1=(m,y)=>{if(y===void 0)throw new R1("ptr should not be undefined");for(;m.za;)y=m.Ja(y),m=m.za;return B1[y]},B2=(m,y)=>{if(!y.wa||!y.va)throw new z3("makeClassHandle requires ptr and ptrType");if(!!y.Aa!=!!y.ya)throw new z3("Both smartPtrType and smartPtr must be specified");return y.count={value:1},c3(Object.create(m,{ta:{value:y,writable:!0}}))},c3=m=>typeof FinalizationRegistry>"u"?(c3=y=>y,m):(ht=new FinalizationRegistry(y=>{y=y.ta,--y.count.value,y.count.value===0&&(y.ya?y.Aa.Da(y.ya):y.wa.ua.Da(y.va))}),c3=y=>{var A=y.ta;return A.ya&&ht.register(y,{ta:A},y),y},F=y=>{ht.unregister(y)},c3(m));function O2(){}var m2=(m,y)=>Object.defineProperty(y,"name",{value:m}),le=(m,y,A)=>{if(m[y].xa===void 0){var E=m[y];m[y]=function(...O){if(!m[y].xa.hasOwnProperty(O.length))throw new R1(`Function '${A}' called with an invalid number of arguments (${O.length}) - expects one of (${m[y].xa})!`);return m[y].xa[O.length].apply(this,O)},m[y].xa=[],m[y].xa[E.Ga]=E}},l2=(m,y,A)=>{if(s.hasOwnProperty(m)){if(A===void 0||s[m].xa!==void 0&&s[m].xa[A]!==void 0)throw new R1(`Cannot register public name '${m}' twice`);if(le(s,m,m),s[m].xa.hasOwnProperty(A))throw new R1(`Cannot register multiple overloads of a function with the same number of arguments (${A})!`);s[m].xa[A]=y}else s[m]=y,s[m].Ga=A},x2=m=>{m=m.replace(/[^a-zA-Z0-9_]/g,"$");var y=m.charCodeAt(0);return 48<=y&&57>=y?`_${m}`:m};function w3(m,y,A,E,O,j,J,X){this.name=m,this.constructor=y,this.Fa=A,this.Da=E,this.za=O,this.Va=j,this.Ja=J,this.Ta=X,this.bb=[]}var H0=(m,y,A)=>{for(;y!==A;){if(!y.Ja)throw new R1(`Expected null or instance of ${A.name}, got an instance of ${y.name}`);m=y.Ja(m),y=y.za}return m};function Ca(m,y){if(y===null){if(this.Ma)throw new R1(`null is not a valid ${this.name}`);return 0}if(!y.ta)throw new R1(`Cannot pass "${Wt(y)}" as a ${this.name}`);if(!y.ta.va)throw new R1(`Cannot pass deleted object as a pointer of type ${this.name}`);return H0(y.ta.va,y.ta.wa.ua,this.ua)}function Yt(m,y){if(y===null){if(this.Ma)throw new R1(`null is not a valid ${this.name}`);if(this.La){var A=this.Na();return m!==null&&m.push(this.Da,A),A}return 0}if(!y||!y.ta)throw new R1(`Cannot pass "${Wt(y)}" as a ${this.name}`);if(!y.ta.va)throw new R1(`Cannot pass deleted object as a pointer of type ${this.name}`);if(!this.Ka&&y.ta.wa.Ka)throw new R1(`Cannot convert argument of type ${y.ta.Aa?y.ta.Aa.name:y.ta.wa.name} to parameter type ${this.name}`);if(A=H0(y.ta.va,y.ta.wa.ua,this.ua),this.La){if(y.ta.ya===void 0)throw new R1("Passing raw pointer to smart pointer is illegal");switch(this.hb){case 0:if(y.ta.Aa===this)A=y.ta.ya;else throw new R1(`Cannot convert argument of type ${y.ta.Aa?y.ta.Aa.name:y.ta.wa.name} to parameter type ${this.name}`);break;case 1:A=y.ta.ya;break;case 2:if(y.ta.Aa===this)A=y.ta.ya;else{var E=y.clone();A=this.cb(A,K3(()=>E.delete())),m!==null&&m.push(this.Da,A)}break;default:throw new R1("Unsupporting sharing policy")}}return A}function Qt(m,y){if(y===null){if(this.Ma)throw new R1(`null is not a valid ${this.name}`);return 0}if(!y.ta)throw new R1(`Cannot pass "${Wt(y)}" as a ${this.name}`);if(!y.ta.va)throw new R1(`Cannot pass deleted object as a pointer of type ${this.name}`);if(y.ta.wa.Ka)throw new R1(`Cannot convert argument of type ${y.ta.wa.name} to parameter type ${this.name}`);return H0(y.ta.va,y.ta.wa.ua,this.ua)}function x3(m,y,A,E,O,j,J,X,d1,p1,b1){this.name=m,this.ua=y,this.Ma=A,this.Ka=E,this.La=O,this.ab=j,this.hb=J,this.Ra=X,this.Na=d1,this.cb=p1,this.Da=b1,O||y.za!==void 0?this.toWireType=Yt:(this.toWireType=E?Ca:Qt,this.Ca=null)}var mt=(m,y,A)=>{if(!s.hasOwnProperty(m))throw new z3("Replacing nonexistent public symbol");s[m].xa!==void 0&&A!==void 0?s[m].xa[A]=y:(s[m]=y,s[m].Ga=A)},q2,Ma=(m,y,A=[])=>(m.includes("j")?(m=m.replace(/p/g,"i"),y=(0,s["dynCall_"+m])(y,...A)):y=q2.get(y)(...A),y),ai=(m,y)=>(...A)=>Ma(m,y,A),H2=(m,y)=>{m=g2(m);var A=m.includes("j")?ai(m,y):q2.get(y);if(typeof A!="function")throw new R1(`unknown function pointer with signature ${m}: ${y}`);return A},Xt,He=m=>{m=i0(m);var y=g2(m);return n3(m),y},Gt=(m,y)=>{function A(j){O[j]||l3[j]||(p3[j]?p3[j].forEach(A):(E.push(j),O[j]=!0))}var E=[],O={};throw y.forEach(A),new Xt(`${m}: `+E.map(He).join([", "]))},Zt=(m,y)=>{for(var A=[],E=0;E<m;E++)A.push(I[y+4*E>>2]);return A};function ri(m){for(var y=1;y<m.length;++y)if(m[y]!==null&&m[y].Ca===void 0)return!0;return!1}function Kt(m,y,A,E,O){var j=y.length;if(2>j)throw new R1("argTypes array size mismatch! Must at least get return value and 'this' types!");var J=y[1]!==null&&A!==null,X=ri(y),d1=y[0].name!=="void",p1=j-2,b1=Array(p1),P1=[],U1=[];return m2(m,function(...T2){if(U1.length=0,P1.length=J?2:1,P1[0]=O,J){var s2=y[1].toWireType(U1,this);P1[1]=s2}for(var u2=0;u2<p1;++u2)b1[u2]=y[u2+2].toWireType(U1,T2[u2]),P1.push(b1[u2]);if(T2=E(...P1),X)Z3(U1);else for(u2=J?1:2;u2<y.length;u2++){var k3=u2===1?s2:b1[u2-2];y[u2].Ca!==null&&y[u2].Ca(k3)}return s2=d1?y[0].fromWireType(T2):void 0,s2})}var V0=m=>{m=m.trim();let y=m.indexOf("(");return y!==-1?m.substr(0,y):m},F0=[],V2=[],D2=m=>{9<m&&--V2[m+1]===0&&(V2[m]=void 0,F0.push(m))},F2=m=>{if(!m)throw new R1("Cannot use deleted val. handle = "+m);return V2[m]},K3=m=>{switch(m){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let y=F0.pop()||V2.length;return V2[y]=m,V2[y+1]=1,y}},Jt={name:"emscripten::val",fromWireType:m=>{var y=F2(m);return D2(m),y},toWireType:(m,y)=>K3(y),Ba:8,readValueFromPointer:W2,Ca:null},Oa=(m,y,A)=>{switch(y){case 1:return A?function(E){return this.fromWireType($[E])}:function(E){return this.fromWireType(n1[E])};case 2:return A?function(E){return this.fromWireType(o1[E>>1])}:function(E){return this.fromWireType(A1[E>>1])};case 4:return A?function(E){return this.fromWireType(i1[E>>2])}:function(E){return this.fromWireType(I[E>>2])};default:throw new TypeError(`invalid integer width (${y}): ${m}`)}},$0=(m,y)=>{var A=l3[m];if(A===void 0)throw m=`${y} has unknown type ${He(m)}`,new R1(m);return A},Wt=m=>{if(m===null)return"null";var y=typeof m;return y==="object"||y==="array"||y==="function"?m.toString():""+m},gt=(m,y)=>{switch(y){case 4:return function(A){return this.fromWireType(v1[A>>2])};case 8:return function(A){return this.fromWireType(_1[A>>3])};default:throw new TypeError(`invalid float width (${y}): ${m}`)}},P0=(m,y,A)=>{switch(y){case 1:return A?E=>$[E]:E=>n1[E];case 2:return A?E=>o1[E>>1]:E=>A1[E>>1];case 4:return A?E=>i1[E>>2]:E=>I[E>>2];default:throw new TypeError(`invalid integer width (${y}): ${m}`)}},_e=Object.assign({optional:!0},Jt),we=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,yt=(m,y)=>{for(var A=m>>1,E=A+y/2;!(A>=E)&&A1[A];)++A;if(A<<=1,32<A-m&&we)return we.decode(n1.subarray(m,A));for(A="",E=0;!(E>=y/2);++E){var O=o1[m+2*E>>1];if(O==0)break;A+=String.fromCharCode(O)}return A},Ve=(m,y,A)=>{if(A!=null||(A=2147483647),2>A)return 0;A-=2;var E=y;A=A<2*m.length?A/2:m.length;for(var O=0;O<A;++O)o1[y>>1]=m.charCodeAt(O),y+=2;return o1[y>>1]=0,y-E},L2=m=>2*m.length,oi=(m,y)=>{for(var A=0,E="";!(A>=y/4);){var O=i1[m+4*A>>2];if(O==0)break;++A,65536<=O?(O-=65536,E+=String.fromCharCode(55296|O>>10,56320|O&1023)):E+=String.fromCharCode(O)}return E},li=(m,y,A)=>{if(A!=null||(A=2147483647),4>A)return 0;var E=y;A=E+A-4;for(var O=0;O<m.length;++O){var j=m.charCodeAt(O);if(55296<=j&&57343>=j){var J=m.charCodeAt(++O);j=65536+((j&1023)<<10)|J&1023}if(i1[y>>2]=j,y+=4,y+4>A)break}return i1[y>>2]=0,y-E},xe=m=>{for(var y=0,A=0;A<m.length;++A){var E=m.charCodeAt(A);55296<=E&&57343>=E&&++A,y+=4}return y},se=0,S3=[],Da=m=>{var y=S3.length;return S3.push(m),y},si=(m,y)=>{for(var A=Array(m),E=0;E<m;++E)A[E]=$0(I[y+4*E>>2],"parameter "+E);return A},ui=Reflect.construct,vt={},bt=m=>{if(!(m instanceof T||m=="unwind"))throw m},_t=m=>{var y;throw e1=m,E1||0<se||((y=s.onExit)==null||y.call(s,m),V=!0),new T(m)},J3=m=>{if(!V)try{if(m(),!(E1||0<se))try{e1=m=e1,_t(m)}catch(y){bt(y)}}catch(y){bt(y)}},t3={},Y0=()=>{if(!Q0){var m={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:p||"./this.program"},y;for(y in t3)t3[y]===void 0?delete m[y]:m[y]=t3[y];var A=[];for(y in m)A.push(`${y}=${m[y]}`);Q0=A}return Q0},Q0,e0=()=>{if(typeof crypto=="object"&&typeof crypto.getRandomValues=="function")return m=>crypto.getRandomValues(m);M("initRandomDevice")},X0=m=>(X0=e0())(m);z3=s.InternalError=class extends Error{constructor(m){super(m),this.name="InternalError"}};for(var wt=Array(256),t0=0;256>t0;++t0)wt[t0]=String.fromCharCode(t0);be=wt,R1=s.BindingError=class extends Error{constructor(m){super(m),this.name="BindingError"}},Object.assign(O2.prototype,{isAliasOf:function(m){if(!(this instanceof O2&&m instanceof O2))return!1;var y=this.ta.wa.ua,A=this.ta.va;m.ta=m.ta;var E=m.ta.wa.ua;for(m=m.ta.va;y.za;)A=y.Ja(A),y=y.za;for(;E.za;)m=E.Ja(m),E=E.za;return y===E&&A===m},clone:function(){if(this.ta.va||e3(this),this.ta.Ia)return this.ta.count.value+=1,this;var m=c3,y=Object,A=y.create,E=Object.getPrototypeOf(this),O=this.ta;return m=m(A.call(y,E,{ta:{value:{count:O.count,Ha:O.Ha,Ia:O.Ia,va:O.va,wa:O.wa,ya:O.ya,Aa:O.Aa}}})),m.ta.count.value+=1,m.ta.Ha=!1,m},delete(){if(this.ta.va||e3(this),this.ta.Ha&&!this.ta.Ia)throw new R1("Object already scheduled for deletion");F(this);var m=this.ta;--m.count.value,m.count.value===0&&(m.ya?m.Aa.Da(m.ya):m.wa.ua.Da(m.va)),this.ta.Ia||(this.ta.ya=void 0,this.ta.va=void 0)},isDeleted:function(){return!this.ta.va},deleteLater:function(){if(this.ta.va||e3(this),this.ta.Ha&&!this.ta.Ia)throw new R1("Object already scheduled for deletion");return this.ta.Ha=!0,this}}),Object.assign(x3.prototype,{Wa(m){return this.Ra&&(m=this.Ra(m)),m},Pa(m){var y;(y=this.Da)==null||y.call(this,m)},Ba:8,readValueFromPointer:W2,fromWireType:function(m){function y(){return this.La?B2(this.ua.Fa,{wa:this.ab,va:A,Aa:this,ya:m}):B2(this.ua.Fa,{wa:this,va:m})}var A=this.Wa(m);if(!A)return this.Pa(m),null;var E=G1(this.ua,A);if(E!==void 0)return E.ta.count.value===0?(E.ta.va=A,E.ta.ya=m,E.clone()):(E=E.clone(),this.Pa(m),E);if(E=this.ua.Va(A),E=S1[E],!E)return y.call(this);E=this.Ka?E.Sa:E.pointerType;var O=r1(A,this.ua,E.ua);return O===null?y.call(this):this.La?B2(E.ua.Fa,{wa:E,va:O,Aa:this,ya:m}):B2(E.ua.Fa,{wa:E,va:O})}}),Xt=s.UnboundTypeError=((m,y)=>{var A=m2(y,function(E){this.name=y,this.message=E,E=Error(E).stack,E!==void 0&&(this.stack=this.toString()+`
`+E.replace(/^Error(:[^\n]*)?\n/,""))});return A.prototype=Object.create(m.prototype),A.prototype.constructor=A,A.prototype.toString=function(){return this.message===void 0?this.name:`${this.name}: ${this.message}`},A})(Error,"UnboundTypeError"),V2.push(0,1,void 0,1,null,1,!0,1,!1,1),s.count_emval_handles=()=>V2.length/2-5-F0.length;var h3={c:(m,y,A,E)=>M(`Assertion failed: ${m?o2(m):""}, at: `+[y?y?o2(y):"":"unknown filename",A,E?E?o2(E):"":"unknown function"]),m:(m,y,A)=>{var E=new N1(m);throw I[E.va+16>>2]=0,I[E.va+4>>2]=y,I[E.va+8>>2]=A,e2=m,e2},M:()=>{},J:()=>{},K:()=>{},O:function(){},L:()=>{},Q:()=>M(""),v:m=>{var y=M2[m];delete M2[m];var A=y.Na,E=y.Da,O=y.Qa,j=O.map(J=>J.Za).concat(O.map(J=>J.fb));s3([m],j,J=>{var X={};return O.forEach((d1,p1)=>{var b1=J[p1],P1=d1.Xa,U1=d1.Ya,T2=J[p1+O.length],s2=d1.eb,u2=d1.gb;X[d1.Ua]={read:k3=>b1.fromWireType(P1(U1,k3)),write:(k3,Se)=>{var X2=[];s2(u2,k3,T2.toWireType(X2,Se)),Z3(X2)}}}),[{name:y.name,fromWireType:d1=>{var p1={},b1;for(b1 in X)p1[b1]=X[b1].read(d1);return E(d1),p1},toWireType:(d1,p1)=>{for(var b1 in X)if(!(b1 in p1))throw new TypeError(`Missing field: "${b1}"`);var P1=A();for(b1 in X)X[b1].write(P1,p1[b1]);return d1!==null&&d1.push(E,P1),P1},Ba:8,readValueFromPointer:W2,Ca:E}]})},C:()=>{},V:(m,y,A,E)=>{y=g2(y),u3(m,{name:y,fromWireType:function(O){return!!O},toWireType:function(O,j){return j?A:E},Ba:8,readValueFromPointer:function(O){return this.fromWireType(n1[O])},Ca:null})},r:(m,y,A,E,O,j,J,X,d1,p1,b1,P1,U1)=>{b1=g2(b1),j=H2(O,j),X&&(X=H2(J,X)),p1&&(p1=H2(d1,p1)),U1=H2(P1,U1);var T2=x2(b1);l2(T2,function(){Gt(`Cannot construct ${b1} due to unbound types`,[E])}),s3([m,y,A],E?[E]:[],s2=>{if(s2=s2[0],E)var u2=s2.ua,k3=u2.Fa;else k3=O2.prototype;s2=m2(b1,function(...$e){if(Object.getPrototypeOf(this)!==Se)throw new R1("Use 'new' to construct "+b1);if(X2.Ea===void 0)throw new R1(b1+" has no accessible constructor");var en=X2.Ea[$e.length];if(en===void 0)throw new R1(`Tried to invoke ctor of ${b1} with invalid number of parameters (${$e.length}) - expected (${Object.keys(X2.Ea).toString()}) parameters instead!`);return en.apply(this,$e)});var Se=Object.create(k3,{constructor:{value:s2}});s2.prototype=Se;var X2=new w3(b1,s2,Se,U1,u2,j,X,p1);if(X2.za){var ee;(ee=X2.za).Oa!=null||(ee.Oa=[]),X2.za.Oa.push(X2)}return u2=new x3(b1,X2,!0,!1,!1),ee=new x3(b1+"*",X2,!1,!1,!1),k3=new x3(b1+" const*",X2,!1,!0,!1),S1[m]={pointerType:ee,Sa:k3},mt(T2,s2),[u2,ee,k3]})},q:(m,y,A,E,O,j)=>{var J=Zt(y,A);O=H2(E,O),s3([],[m],X=>{X=X[0];var d1=`constructor ${X.name}`;if(X.ua.Ea===void 0&&(X.ua.Ea=[]),X.ua.Ea[y-1]!==void 0)throw new R1(`Cannot register multiple constructors with identical number of parameters (${y-1}) for class '${X.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`);return X.ua.Ea[y-1]=()=>{Gt(`Cannot construct ${X.name} due to unbound types`,J)},s3([],J,p1=>(p1.splice(1,0,null),X.ua.Ea[y-1]=Kt(d1,p1,null,O,j),[])),[]})},f:(m,y,A,E,O,j,J,X)=>{var d1=Zt(A,E);y=g2(y),y=V0(y),j=H2(O,j),s3([],[m],p1=>{function b1(){Gt(`Cannot call ${P1} due to unbound types`,d1)}p1=p1[0];var P1=`${p1.name}.${y}`;y.startsWith("@@")&&(y=Symbol[y.substring(2)]),X&&p1.ua.bb.push(y);var U1=p1.ua.Fa,T2=U1[y];return T2===void 0||T2.xa===void 0&&T2.className!==p1.name&&T2.Ga===A-2?(b1.Ga=A-2,b1.className=p1.name,U1[y]=b1):(le(U1,y,P1),U1[y].xa[A-2]=b1),s3([],d1,s2=>(s2=Kt(P1,s2,p1,j,J),U1[y].xa===void 0?(s2.Ga=A-2,U1[y]=s2):U1[y].xa[A-2]=s2,[])),[]})},U:m=>u3(m,Jt),x:(m,y,A,E)=>{function O(){}y=g2(y),O.values={},u3(m,{name:y,constructor:O,fromWireType:function(j){return this.constructor.values[j]},toWireType:(j,J)=>J.value,Ba:8,readValueFromPointer:Oa(y,A,E),Ca:null}),l2(y,O)},k:(m,y,A)=>{var E=$0(m,"enum");y=g2(y),m=E.constructor,E=Object.create(E.constructor.prototype,{value:{value:A},constructor:{value:m2(`${E.name}_${y}`,function(){})}}),m.values[A]=E,m[y]=E},z:(m,y,A)=>{y=g2(y),u3(m,{name:y,fromWireType:E=>E,toWireType:(E,O)=>O,Ba:8,readValueFromPointer:gt(y,A),Ca:null})},u:(m,y,A,E,O,j)=>{var J=Zt(y,A);m=g2(m),m=V0(m),O=H2(E,O),l2(m,function(){Gt(`Cannot call ${m} due to unbound types`,J)},y-1),s3([],J,X=>(mt(m,Kt(m,[X[0],null].concat(X.slice(1)),null,O,j),y-1),[]))},l:(m,y,A,E,O)=>{if(y=g2(y),O===-1&&(O=4294967295),O=X=>X,E===0){var j=32-8*A;O=X=>X<<j>>>j}var J=y.includes("unsigned")?function(X,d1){return d1>>>0}:function(X,d1){return d1};u3(m,{name:y,fromWireType:O,toWireType:J,Ba:8,readValueFromPointer:P0(y,A,E!==0),Ca:null})},h:(m,y,A)=>{function E(j){return new O($.buffer,I[j+4>>2],I[j>>2])}var O=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][y];A=g2(A),u3(m,{name:A,fromWireType:E,Ba:8,readValueFromPointer:E},{$a:!0})},t:m=>{u3(m,_e)},$:(m,y,A,E,O,j,J,X,d1,p1,b1,P1)=>{A=g2(A),j=H2(O,j),X=H2(J,X),p1=H2(d1,p1),P1=H2(b1,P1),s3([m],[y],U1=>(U1=U1[0],[new x3(A,U1.ua,!1,!1,!0,U1,E,j,X,p1,P1)]))},A:(m,y)=>{y=g2(y);var A=y==="std::string";u3(m,{name:y,fromWireType:function(E){var O=I[E>>2],j=E+4;if(A)for(var J=j,X=0;X<=O;++X){var d1=j+X;if(X==O||n1[d1]==0){if(J=J?o2(J,d1-J):"",p1===void 0)var p1=J;else p1+="\0",p1+=J;J=d1+1}}else{for(p1=Array(O),X=0;X<O;++X)p1[X]=String.fromCharCode(n1[j+X]);p1=p1.join("")}return n3(E),p1},toWireType:function(E,O){O instanceof ArrayBuffer&&(O=new Uint8Array(O));var j,J=typeof O=="string";if(!(J||O instanceof Uint8Array||O instanceof Uint8ClampedArray||O instanceof Int8Array))throw new R1("Cannot pass non-string to std::string");if(A&&J)for(var X=j=0;X<O.length;++X){var d1=O.charCodeAt(X);127>=d1?j++:2047>=d1?j+=2:55296<=d1&&57343>=d1?(j+=4,++X):j+=3}else j=O.length;if(X=n0(4+j+1),d1=X+4,I[X>>2]=j,A&&J)V1(O,d1,j+1);else if(J)for(J=0;J<j;++J){var p1=O.charCodeAt(J);if(255<p1)throw n3(d1),new R1("String has UTF-16 code units that do not fit in 8 bits");n1[d1+J]=p1}else for(J=0;J<j;++J)n1[d1+J]=O[J];return E!==null&&E.push(n3,X),X},Ba:8,readValueFromPointer:W2,Ca(E){n3(E)}})},s:(m,y,A)=>{if(A=g2(A),y===2)var E=yt,O=Ve,j=L2,J=X=>A1[X>>1];else y===4&&(E=oi,O=li,j=xe,J=X=>I[X>>2]);u3(m,{name:A,fromWireType:X=>{for(var d1=I[X>>2],p1,b1=X+4,P1=0;P1<=d1;++P1){var U1=X+4+P1*y;(P1==d1||J(U1)==0)&&(b1=E(b1,U1-b1),p1===void 0?p1=b1:(p1+="\0",p1+=b1),b1=U1+y)}return n3(X),p1},toWireType:(X,d1)=>{if(typeof d1!="string")throw new R1(`Cannot pass non-string to C++ string type ${A}`);var p1=j(d1),b1=n0(4+p1+y);return I[b1>>2]=p1/y,O(d1,b1+4,p1+y),X!==null&&X.push(n3,b1),b1},Ba:8,readValueFromPointer:W2,Ca(X){n3(X)}})},w:(m,y,A,E,O,j)=>{M2[m]={name:g2(y),Na:H2(A,E),Da:H2(O,j),Qa:[]}},j:(m,y,A,E,O,j,J,X,d1,p1)=>{M2[m].Qa.push({Ua:g2(y),Za:A,Xa:H2(E,O),Ya:j,fb:J,eb:H2(X,d1),gb:p1})},W:(m,y)=>{y=g2(y),u3(m,{ib:!0,name:y,Ba:0,fromWireType:()=>{},toWireType:()=>{}})},H:()=>{E1=!1,se=0},D:()=>{throw 1/0},Z:(m,y,A,E)=>(m=S3[m],y=F2(y),m(null,y,A,E)),B:D2,Y:(m,y,A)=>{var E=si(m,y),O=E.shift();m--;var j=Array(m);return y=`methodCaller<(${E.map(J=>J.name).join(", ")}) => ${O.name}>`,Da(m2(y,(J,X,d1,p1)=>{for(var b1=0,P1=0;P1<m;++P1)j[P1]=E[P1].readValueFromPointer(p1+b1),b1+=E[P1].Ba;return X=A===1?ui(X,j):X.apply(J,j),J=[],X=O.toWireType(J,X),J.length&&(I[d1>>2]=K3(J)),X}))},_:m=>{9<m&&(V2[m+1]+=1)},X:m=>{var y=F2(m);Z3(y),D2(m)},o:(m,y)=>(m=$0(m,"_emval_take_value"),m=m.readValueFromPointer(y),K3(m)),E:(m,y)=>{if(vt[m]&&(clearTimeout(vt[m].id),delete vt[m]),!y)return 0;var A=setTimeout(()=>{delete vt[m],J3(()=>G0(m,performance.now()))},y);return vt[m]={id:A,jb:y},0},F:(m,y,A,E)=>{var O=new Date().getFullYear(),j=new Date(O,0,1).getTimezoneOffset();O=new Date(O,6,1).getTimezoneOffset(),I[m>>2]=60*Math.max(j,O),i1[y>>2]=+(j!=O),y=J=>{var X=Math.abs(J);return`UTC${0<=J?"-":"+"}${String(Math.floor(X/60)).padStart(2,"0")}${String(X%60).padStart(2,"0")}`},m=y(j),y=y(O),O<j?(V1(m,A,17),V1(y,E,17)):(V1(m,E,17),V1(y,A,17))},aa:()=>performance.now(),G:m=>{var y=n1.length;if(m>>>=0,2147483648<m)return!1;for(var A=1;4>=A;A*=2){var E=y*(1+.2/A);E=Math.min(E,m+100663296);e:{E=(Math.min(2147483648,65536*Math.ceil(Math.max(m,E)/65536))-B.buffer.byteLength+65535)/65536|0;try{B.grow(E),t1();var O=1;break e}catch{}O=void 0}if(O)return!0}return!1},S:(m,y)=>{var A=0;return Y0().forEach((E,O)=>{var j=y+A;for(O=I[m+4*O>>2]=j,j=0;j<E.length;++j)$[O++]=E.charCodeAt(j);$[O]=0,A+=E.length+1}),0},T:(m,y)=>{var A=Y0();I[m>>2]=A.length;var E=0;return A.forEach(O=>E+=O.length+1),I[y>>2]=E,0},P:()=>52,N:()=>52,i:Ra,d:La,e:Z0,p:a0,y:Fe,b:fi,a:ci,g:J0,n:K0,R:_t,I:(m,y)=>(X0(n1.subarray(m,m+y)),0)},y2=function(){var m;function y(E){var O;return y2=E.exports,B=y2.ba,t1(),q2=y2.fa,u1.unshift(y2.ca),l1--,(O=s.monitorRunDependencies)==null||O.call(s,l1),l1==0&&s1&&(E=s1,s1=null,E()),y2}l1++,(m=s.monitorRunDependencies)==null||m.call(s,l1);var A={a:h3};if(s.instantiateWasm)try{return s.instantiateWasm(A,y)}catch(E){k(`Module.instantiateWasm callback failed with error: ${E}`),d(E)}return P!=null||(P=q("DotLottiePlayer.wasm")?"DotLottiePlayer.wasm":s.locateFile?s.locateFile("DotLottiePlayer.wasm",_):_+"DotLottiePlayer.wasm"),h1(A,function(E){y(E.instance)}).catch(d),{}}(),n0=m=>(n0=y2.da)(m),i0=m=>(i0=y2.ea)(m),n3=m=>(n3=y2.ga)(m),G0=(m,y)=>(G0=y2.ha)(m,y),A3=(m,y)=>(A3=y2.ia)(m,y),Q2=m=>(Q2=y2.ja)(m),N3=()=>(N3=y2.ka)();s.dynCall_iijj=(m,y,A,E,O,j)=>(s.dynCall_iijj=y2.la)(m,y,A,E,O,j),s.dynCall_vijj=(m,y,A,E,O,j)=>(s.dynCall_vijj=y2.ma)(m,y,A,E,O,j),s.dynCall_jiii=(m,y,A,E)=>(s.dynCall_jiii=y2.na)(m,y,A,E),s.dynCall_jii=(m,y,A)=>(s.dynCall_jii=y2.oa)(m,y,A),s.dynCall_viijii=(m,y,A,E,O,j,J)=>(s.dynCall_viijii=y2.pa)(m,y,A,E,O,j,J),s.dynCall_iiiiij=(m,y,A,E,O,j,J)=>(s.dynCall_iiiiij=y2.qa)(m,y,A,E,O,j,J),s.dynCall_iiiiijj=(m,y,A,E,O,j,J,X,d1)=>(s.dynCall_iiiiijj=y2.ra)(m,y,A,E,O,j,J,X,d1),s.dynCall_iiiiiijj=(m,y,A,E,O,j,J,X,d1,p1)=>(s.dynCall_iiiiiijj=y2.sa)(m,y,A,E,O,j,J,X,d1,p1);function ci(m,y,A){var E=N3();try{q2.get(m)(y,A)}catch(O){if(Q2(E),O!==O+0)throw O;A3(1,0)}}function fi(m,y){var A=N3();try{q2.get(m)(y)}catch(E){if(Q2(A),E!==E+0)throw E;A3(1,0)}}function Z0(m,y,A,E){var O=N3();try{return q2.get(m)(y,A,E)}catch(j){if(Q2(O),j!==j+0)throw j;A3(1,0)}}function La(m,y,A){var E=N3();try{return q2.get(m)(y,A)}catch(O){if(Q2(E),O!==O+0)throw O;A3(1,0)}}function Ra(m,y){var A=N3();try{return q2.get(m)(y)}catch(E){if(Q2(A),E!==E+0)throw E;A3(1,0)}}function a0(m,y,A,E,O,j){var J=N3();try{return q2.get(m)(y,A,E,O,j)}catch(X){if(Q2(J),X!==X+0)throw X;A3(1,0)}}function K0(m,y,A,E,O){var j=N3();try{q2.get(m)(y,A,E,O)}catch(J){if(Q2(j),J!==J+0)throw J;A3(1,0)}}function J0(m,y,A,E){var O=N3();try{q2.get(m)(y,A,E)}catch(j){if(Q2(O),j!==j+0)throw j;A3(1,0)}}function Fe(m){var y=N3();try{q2.get(m)()}catch(A){if(Q2(y),A!==A+0)throw A;A3(1,0)}}var W3;s1=function m(){W3||W0(),W3||(s1=m)};function W0(){function m(){var y;if(!W3&&(W3=!0,s.calledRun=!0,!V)){if(a1(u1),c(s),(y=s.onRuntimeInitialized)==null||y.call(s),s.postRun)for(typeof s.postRun=="function"&&(s.postRun=[s.postRun]);s.postRun.length;){var A=s.postRun.shift();c1.unshift(A)}a1(c1)}}if(!(0<l1)){if(s.preRun)for(typeof s.preRun=="function"&&(s.preRun=[s.preRun]);s.preRun.length;)Q();a1(f1),0<l1||(s.setStatus?(s.setStatus("Running..."),setTimeout(()=>{setTimeout(()=>s.setStatus(""),1),m()},1)):m())}}if(s.preInit)for(typeof s.preInit=="function"&&(s.preInit=[s.preInit]);0<s.preInit.length;)s.preInit.pop()();return W0(),l=h,l}})(),P8=$8,ba=class{constructor(){throw new Error("RendererLoader is a static class and cannot be instantiated.")}static _tryLoad(n){return $1(this,null,function*(){return yield P8({locateFile:()=>n})})}static _loadWithBackup(){return $1(this,null,function*(){return this._ModulePromise||(this._ModulePromise=this._tryLoad(this._wasmURL).catch(n=>$1(this,null,function*(){let a=`https://unpkg.com/${Ac}@${Sc}/dist/dotlottie-player.wasm`;console.warn(`Primary WASM load failed from ${this._wasmURL}. Error: ${n.message}`),console.warn(`Attempting to load WASM from backup URL: ${a}`);try{return yield this._tryLoad(a)}catch(r){throw console.error(`Primary WASM URL failed: ${n.message}`),console.error(`Backup WASM URL failed: ${r.message}`),new Error("WASM loading failed from all sources.")}}))),this._ModulePromise})}static load(){return $1(this,null,function*(){return this._loadWithBackup()})}static setWasmUrl(n){n!==this._wasmURL&&(this._wasmURL=n,this._ModulePromise=null)}};j1(ba,"_ModulePromise",null),j1(ba,"_wasmURL",`https://cdn.jsdelivr.net/npm/${Ac}@${Sc}/dist/dotlottie-player.wasm`);var kc=class{constructor(){j1(this,"_eventListeners",new Map)}addEventListener(n,a){let r=this._eventListeners.get(n);r||(r=new Set,this._eventListeners.set(n,r)),r.add(a)}removeEventListener(n,a){let r=this._eventListeners.get(n);r&&(a?(r.delete(a),r.size===0&&this._eventListeners.delete(n)):this._eventListeners.delete(n))}dispatch(n){let a=this._eventListeners.get(n.type);a==null||a.forEach(r=>r(n))}removeAllEventListeners(){this._eventListeners.clear()}},ge=class{static _initializeObserver(){if(this._observer)return;let n=a=>{a.forEach(r=>{let l=this._observedCanvases.get(r.target);l&&(r.isIntersecting?l.unfreeze():l.freeze())})};this._observer=new IntersectionObserver(n,{threshold:0})}static observe(n,a){var r;this._initializeObserver(),!this._observedCanvases.has(n)&&(this._observedCanvases.set(n,a),(r=this._observer)==null||r.observe(n))}static unobserve(n){var a,r;(a=this._observer)==null||a.unobserve(n),this._observedCanvases.delete(n),this._observedCanvases.size===0&&((r=this._observer)==null||r.disconnect(),this._observer=null)}};j1(ge,"_observer",null),j1(ge,"_observedCanvases",new Map);var ye=class{static _initializeObserver(){if(this._observer)return;let n=a=>{a.forEach(r=>{let l=this._observedCanvases.get(r.target);if(!l)return;let[s,c]=l;clearTimeout(c);let d=setTimeout(()=>{s.resize()},100);this._observedCanvases.set(r.target,[s,d])})};this._observer=new ResizeObserver(n)}static observe(n,a){var r;this._initializeObserver(),!this._observedCanvases.has(n)&&(this._observedCanvases.set(n,[a,0]),(r=this._observer)==null||r.observe(n))}static unobserve(n){var a,r;(a=this._observer)==null||a.unobserve(n),this._observedCanvases.delete(n),this._observedCanvases.size===0&&((r=this._observer)==null||r.disconnect(),this._observer=null)}};j1(ye,"_observer",null),j1(ye,"_observedCanvases",new Map);function Y8(n){return/^#([\da-f]{6}|[\da-f]{8})$/iu.test(n)}function Q8(n){if(!Y8(n))return 0;let a=n.replace("#","");return a=a.length===6?`${a}ff`:a,parseInt(a,16)}function vu(n){if(n.byteLength<4)return!1;let a=new Uint8Array(n.slice(0,zo.byteLength));for(let r=0;r<zo.length;r+=1)if(zo[r]!==a[r])return!1;return!0}function bu(n){return V8.every(a=>Object.prototype.hasOwnProperty.call(n,a))}function _u(n){if(typeof n=="string")try{return bu(JSON.parse(n))}catch{return!1}else return bu(n)}function Ft(){return 1+((r3?window.devicePixelRatio:1)-1)*F8}function Ec(n){let a=n.getBoundingClientRect();return a.top>=0&&a.left>=0&&a.bottom<=(window.innerHeight||document.documentElement.clientHeight)&&a.right<=(window.innerWidth||document.documentElement.clientWidth)}var No=(n,a)=>n==="reverse"?a.Mode.Reverse:n==="bounce"?a.Mode.Bounce:n==="reverse-bounce"?a.Mode.ReverseBounce:a.Mode.Forward,X8=(n,a)=>n==="contain"?a.Fit.Contain:n==="cover"?a.Fit.Cover:n==="fill"?a.Fit.Fill:n==="fit-height"?a.Fit.FitHeight:n==="fit-width"?a.Fit.FitWidth:a.Fit.None,G8=(n,a)=>{let r=new a.VectorFloat;return r.push_back(n[0]),r.push_back(n[1]),r},Io=(n,a)=>{let r=new a.VectorFloat;return n.length!==2||(r.push_back(n[0]),r.push_back(n[1])),r},jo=(n,a)=>{var r,l;return n?{align:G8((r=n.align)!=null?r:[.5,.5],a),fit:X8((l=n.fit)!=null?l:"contain",a)}:a.createDefaultLayout()},Tc=class E2{constructor(a){j1(this,"_canvas"),j1(this,"_context",null),j1(this,"_eventManager"),j1(this,"_animationFrameId",null),j1(this,"_frameManager"),j1(this,"_dotLottieCore",null),j1(this,"_renderConfig",{}),j1(this,"_isFrozen",!1),j1(this,"_backgroundColor",null),j1(this,"_pointerUpMethod"),j1(this,"_pointerDownMethod"),j1(this,"_pointerMoveMethod"),j1(this,"_pointerEnterMethod"),j1(this,"_pointerExitMethod");var r,l,s;this._canvas=a.canvas,this._context=this._canvas.getContext("2d"),this._eventManager=new kc,this._frameManager=new H8,this._renderConfig=y3(J2({},a.renderConfig),{devicePixelRatio:((r=a.renderConfig)==null?void 0:r.devicePixelRatio)||Ft(),freezeOnOffscreen:(s=(l=a.renderConfig)==null?void 0:l.freezeOnOffscreen)!=null?s:!0}),ba.load().then(c=>{var d,h,v,p,_,w,k,S;E2._wasmModule=c,this._dotLottieCore=new c.DotLottiePlayer({themeId:(d=a.themeId)!=null?d:"",autoplay:(h=a.autoplay)!=null?h:!1,backgroundColor:0,loopAnimation:(v=a.loop)!=null?v:!1,mode:No((p=a.mode)!=null?p:"forward",c),segment:Io((_=a.segment)!=null?_:[],c),speed:(w=a.speed)!=null?w:1,useFrameInterpolation:(k=a.useFrameInterpolation)!=null?k:!0,marker:(S=a.marker)!=null?S:"",layout:jo(a.layout,c)}),this._eventManager.dispatch({type:"ready"}),a.data?this._loadFromData(a.data):a.src&&this._loadFromSrc(a.src),a.backgroundColor&&this.setBackgroundColor(a.backgroundColor)}).catch(c=>{this._eventManager.dispatch({type:"loadError",error:new Error(`Failed to load wasm module: ${c}`)})}),this._pointerUpMethod=this._onPointerUp.bind(this),this._pointerDownMethod=this._onPointerDown.bind(this),this._pointerMoveMethod=this._onPointerMove.bind(this),this._pointerEnterMethod=this._onPointerEnter.bind(this),this._pointerExitMethod=this._onPointerLeave.bind(this)}_dispatchError(a){console.error(a),this._eventManager.dispatch({type:"loadError",error:new Error(a)})}_fetchData(a){return $1(this,null,function*(){let r=yield fetch(a);if(!r.ok)throw new Error(`Failed to fetch animation data from URL: ${a}. ${r.status}: ${r.statusText}`);let l=yield r.arrayBuffer();return vu(l)?l:new TextDecoder().decode(l)})}_loadFromData(a){if(this._dotLottieCore===null)return;let r=this._canvas.width,l=this._canvas.height,s=!1;if(typeof a=="string"){if(!_u(a)){this._dispatchError("Invalid Lottie JSON string: The provided string does not conform to the Lottie JSON format.");return}s=this._dotLottieCore.loadAnimationData(a,r,l)}else if(a instanceof ArrayBuffer){if(!vu(a)){this._dispatchError("Invalid dotLottie ArrayBuffer: The provided ArrayBuffer does not conform to the dotLottie format.");return}s=this._dotLottieCore.loadDotLottieData(a,r,l)}else if(typeof a=="object"){if(!_u(a)){this._dispatchError("Invalid Lottie JSON object: The provided object does not conform to the Lottie JSON format.");return}s=this._dotLottieCore.loadAnimationData(JSON.stringify(a),r,l)}else{this._dispatchError(`Unsupported data type for animation data. Expected: 
          - string (Lottie JSON),
          - ArrayBuffer (dotLottie),
          - object (Lottie JSON). 
          Received: ${typeof a}`);return}s?(this._eventManager.dispatch({type:"load"}),r3&&this.resize(),this._eventManager.dispatch({type:"frame",currentFrame:this.currentFrame}),this._render(),this._dotLottieCore.config().autoplay&&(this._dotLottieCore.play(),this._dotLottieCore.isPlaying()?(this._eventManager.dispatch({type:"play"}),this._animationFrameId=this._frameManager.requestAnimationFrame(this._draw.bind(this))):console.error("something went wrong, the animation was suppose to autoplay")),r3&&this._canvas instanceof HTMLCanvasElement&&(this._renderConfig.freezeOnOffscreen&&ge.observe(this._canvas,this),this._renderConfig.autoResize&&ye.observe(this._canvas,this))):this._dispatchError("Failed to load animation data")}_loadFromSrc(a){this._fetchData(a).then(r=>this._loadFromData(r)).catch(r=>this._dispatchError(`Failed to load animation data from URL: ${a}. ${r}`))}get activeAnimationId(){var a;return(a=this._dotLottieCore)==null?void 0:a.activeAnimationId()}get activeThemeId(){var a;return(a=this._dotLottieCore)==null?void 0:a.activeThemeId()}get layout(){var a;let r=(a=this._dotLottieCore)==null?void 0:a.config().layout;if(r)return{align:[r.align.get(0),r.align.get(1)],fit:(()=>{var l,s,c,d,h,v;switch(r.fit){case((l=E2._wasmModule)==null?void 0:l.Fit.Contain):return"contain";case((s=E2._wasmModule)==null?void 0:s.Fit.Cover):return"cover";case((c=E2._wasmModule)==null?void 0:c.Fit.Fill):return"fill";case((d=E2._wasmModule)==null?void 0:d.Fit.FitHeight):return"fit-height";case((h=E2._wasmModule)==null?void 0:h.Fit.FitWidth):return"fit-width";case((v=E2._wasmModule)==null?void 0:v.Fit.None):return"none";default:return"contain"}})()}}get marker(){var a;return(a=this._dotLottieCore)==null?void 0:a.config().marker}get manifest(){var a;try{let r=(a=this._dotLottieCore)==null?void 0:a.manifestString();if(this._dotLottieCore===null||!r)return null;let l=JSON.parse(r);return Object.keys(l).length===0?null:l}catch{return null}}get renderConfig(){return this._renderConfig}get segment(){var a;let r=(a=this._dotLottieCore)==null?void 0:a.config().segment;if(r&&r.size()===2)return[r.get(0),r.get(1)]}get loop(){var a,r;return(r=(a=this._dotLottieCore)==null?void 0:a.config().loopAnimation)!=null?r:!1}get mode(){var a,r,l,s;let c=(a=this._dotLottieCore)==null?void 0:a.config().mode;return c===((r=E2._wasmModule)==null?void 0:r.Mode.Reverse)?"reverse":c===((l=E2._wasmModule)==null?void 0:l.Mode.Bounce)?"bounce":c===((s=E2._wasmModule)==null?void 0:s.Mode.ReverseBounce)?"reverse-bounce":"forward"}get isFrozen(){return this._isFrozen}get backgroundColor(){var a;return(a=this._backgroundColor)!=null?a:""}get autoplay(){var a,r;return(r=(a=this._dotLottieCore)==null?void 0:a.config().autoplay)!=null?r:!1}get useFrameInterpolation(){var a,r;return(r=(a=this._dotLottieCore)==null?void 0:a.config().useFrameInterpolation)!=null?r:!1}get speed(){var a,r;return(r=(a=this._dotLottieCore)==null?void 0:a.config().speed)!=null?r:0}get isReady(){return this._dotLottieCore!==null}get isLoaded(){var a,r;return(r=(a=this._dotLottieCore)==null?void 0:a.isLoaded())!=null?r:!1}get isPlaying(){var a,r;return(r=(a=this._dotLottieCore)==null?void 0:a.isPlaying())!=null?r:!1}get isPaused(){var a,r;return(r=(a=this._dotLottieCore)==null?void 0:a.isPaused())!=null?r:!1}get isStopped(){var a,r;return(r=(a=this._dotLottieCore)==null?void 0:a.isStopped())!=null?r:!1}get currentFrame(){return this._dotLottieCore?Math.round(this._dotLottieCore.currentFrame()*100)/100:0}get loopCount(){var a,r;return(r=(a=this._dotLottieCore)==null?void 0:a.loopCount())!=null?r:0}get totalFrames(){var a,r;return(r=(a=this._dotLottieCore)==null?void 0:a.totalFrames())!=null?r:0}get duration(){var a,r;return(r=(a=this._dotLottieCore)==null?void 0:a.duration())!=null?r:0}get segmentDuration(){var a,r;return(r=(a=this._dotLottieCore)==null?void 0:a.segmentDuration())!=null?r:0}get canvas(){return this._canvas}load(a){var r,l,s,c,d,h,v,p,_;this._dotLottieCore===null||E2._wasmModule===null||(this._animationFrameId!==null&&(this._frameManager.cancelAnimationFrame(this._animationFrameId),this._animationFrameId=null),this._dotLottieCore.setConfig({themeId:(r=a.themeId)!=null?r:"",autoplay:(l=a.autoplay)!=null?l:!1,backgroundColor:0,loopAnimation:(s=a.loop)!=null?s:!1,mode:No((c=a.mode)!=null?c:"forward",E2._wasmModule),segment:Io((d=a.segment)!=null?d:[],E2._wasmModule),speed:(h=a.speed)!=null?h:1,useFrameInterpolation:(v=a.useFrameInterpolation)!=null?v:!0,marker:(p=a.marker)!=null?p:"",layout:jo(a.layout,E2._wasmModule)}),a.data?this._loadFromData(a.data):a.src&&this._loadFromSrc(a.src),this.setBackgroundColor((_=a.backgroundColor)!=null?_:""))}_render(){if(this._dotLottieCore===null||this._context===null)return!1;if(this._dotLottieCore.render()){let a=this._dotLottieCore.buffer(),r=new Uint8ClampedArray(a,0,this._canvas.width*this._canvas.height*4),l=null;return typeof ImageData>"u"?(l=this._context.createImageData(this._canvas.width,this._canvas.height),l.data.set(r)):l=new ImageData(r,this._canvas.width,this._canvas.height),this._context.putImageData(l,0,0),this._eventManager.dispatch({type:"render",currentFrame:this.currentFrame}),!0}return!1}_draw(){if(this._dotLottieCore===null||this._context===null||!this._dotLottieCore.isPlaying())return;let a=Math.round(this._dotLottieCore.requestFrame()*1e3)/1e3;this._dotLottieCore.setFrame(a)&&(this._eventManager.dispatch({type:"frame",currentFrame:this.currentFrame}),this._render()&&this._dotLottieCore.isComplete()&&(this._dotLottieCore.config().loopAnimation?this._eventManager.dispatch({type:"loop",loopCount:this._dotLottieCore.loopCount()}):this._eventManager.dispatch({type:"complete"}))),this._animationFrameId=this._frameManager.requestAnimationFrame(this._draw.bind(this))}play(){this._dotLottieCore!==null&&((this._dotLottieCore.play()||this._dotLottieCore.isPlaying())&&(this._isFrozen=!1,this._eventManager.dispatch({type:"play"}),this._animationFrameId=this._frameManager.requestAnimationFrame(this._draw.bind(this))),r3&&this._canvas instanceof HTMLCanvasElement&&this._renderConfig.freezeOnOffscreen&&!Ec(this._canvas)&&this.freeze())}pause(){this._dotLottieCore!==null&&(this._dotLottieCore.pause()||this._dotLottieCore.isPaused())&&this._eventManager.dispatch({type:"pause"})}stop(){this._dotLottieCore!==null&&this._dotLottieCore.stop()&&(this._eventManager.dispatch({type:"frame",currentFrame:this.currentFrame}),this._render(),this._eventManager.dispatch({type:"stop"}))}setFrame(a){this._dotLottieCore===null||a<0||a>this._dotLottieCore.totalFrames()||this._dotLottieCore.seek(a)&&(this._eventManager.dispatch({type:"frame",currentFrame:this.currentFrame}),this._render())}setSpeed(a){this._dotLottieCore!==null&&this._dotLottieCore.setConfig(y3(J2({},this._dotLottieCore.config()),{speed:a}))}setBackgroundColor(a){this._dotLottieCore!==null&&(r3&&this._canvas instanceof HTMLCanvasElement?this._canvas.style.backgroundColor=a:this._dotLottieCore.setConfig(y3(J2({},this._dotLottieCore.config()),{backgroundColor:Q8(a)})),this._backgroundColor=a)}setLoop(a){this._dotLottieCore!==null&&this._dotLottieCore.setConfig(y3(J2({},this._dotLottieCore.config()),{loopAnimation:a}))}setUseFrameInterpolation(a){this._dotLottieCore!==null&&this._dotLottieCore.setConfig(y3(J2({},this._dotLottieCore.config()),{useFrameInterpolation:a}))}addEventListener(a,r){this._eventManager.addEventListener(a,r)}removeEventListener(a,r){this._eventManager.removeEventListener(a,r)}destroy(){var a;r3&&this._canvas instanceof HTMLCanvasElement&&(ge.unobserve(this._canvas),ye.unobserve(this._canvas)),(a=this._dotLottieCore)==null||a.delete(),this._dotLottieCore=null,this._context=null,this._eventManager.dispatch({type:"destroy"}),this._eventManager.removeAllEventListeners(),this._cleanupStateMachineListeners()}freeze(){this._animationFrameId!==null&&(this._frameManager.cancelAnimationFrame(this._animationFrameId),this._animationFrameId=null,this._isFrozen=!0,this._eventManager.dispatch({type:"freeze"}))}unfreeze(){this._animationFrameId===null&&(this._animationFrameId=this._frameManager.requestAnimationFrame(this._draw.bind(this)),this._isFrozen=!1,this._eventManager.dispatch({type:"unfreeze"}))}resize(){if(!(!this._dotLottieCore||!this.isLoaded)){if(r3&&this._canvas instanceof HTMLCanvasElement){let a=this._renderConfig.devicePixelRatio||window.devicePixelRatio||1,{height:r,width:l}=this._canvas.getBoundingClientRect();r!==0&&l!==0&&(this._canvas.width=l*a,this._canvas.height=r*a)}this._dotLottieCore.resize(this._canvas.width,this._canvas.height)&&this._render()}}setSegment(a,r){this._dotLottieCore===null||E2._wasmModule===null||this._dotLottieCore.setConfig(y3(J2({},this._dotLottieCore.config()),{segment:Io([a,r],E2._wasmModule)}))}setMode(a){this._dotLottieCore===null||E2._wasmModule===null||this._dotLottieCore.setConfig(y3(J2({},this._dotLottieCore.config()),{mode:No(a,E2._wasmModule)}))}setRenderConfig(a){let r=a,{devicePixelRatio:l,freezeOnOffscreen:s}=r,c=xc(r,["devicePixelRatio","freezeOnOffscreen"]);this._renderConfig=y3(J2(J2({},this._renderConfig),c),{devicePixelRatio:l||Ft(),freezeOnOffscreen:s??!0}),r3&&this._canvas instanceof HTMLCanvasElement&&(this._renderConfig.autoResize?ye.observe(this._canvas,this):ye.unobserve(this._canvas),this._renderConfig.freezeOnOffscreen?ge.observe(this._canvas,this):(ge.unobserve(this._canvas),this._isFrozen&&this.unfreeze()))}loadAnimation(a){this._dotLottieCore===null||this._dotLottieCore.activeAnimationId()===a||(this._dotLottieCore.loadAnimation(a,this._canvas.width,this._canvas.height)?(this._eventManager.dispatch({type:"load"}),this.resize()):this._eventManager.dispatch({type:"loadError",error:new Error(`Failed to animation :${a}`)}))}setMarker(a){this._dotLottieCore!==null&&this._dotLottieCore.setConfig(y3(J2({},this._dotLottieCore.config()),{marker:a}))}markers(){var a;let r=(a=this._dotLottieCore)==null?void 0:a.markers();if(r){let l=[];for(let s=0;s<r.size();s+=1){let c=r.get(s);l.push({name:c.name,time:c.time,duration:c.duration})}return l}return[]}setTheme(a){if(this._dotLottieCore===null)return!1;let r=this._dotLottieCore.setTheme(a);return this._render(),r}resetTheme(){return this._dotLottieCore===null?!1:this._dotLottieCore.resetTheme()}setThemeData(a){if(this._dotLottieCore===null)return!1;let r=this._dotLottieCore.setThemeData(a);return this._render(),r}setSlots(a){this._dotLottieCore!==null&&this._dotLottieCore.setSlots(a)}setLayout(a){this._dotLottieCore===null||E2._wasmModule===null||this._dotLottieCore.setConfig(y3(J2({},this._dotLottieCore.config()),{layout:jo(a,E2._wasmModule)}))}setViewport(a,r,l,s){return this._dotLottieCore===null?!1:this._dotLottieCore.setViewport(a,r,l,s)}static setWasmUrl(a){ba.setWasmUrl(a)}loadStateMachine(a){var r,l;return(l=(r=this._dotLottieCore)==null?void 0:r.loadStateMachine(a))!=null?l:!1}startStateMachine(){var a,r;let l=(r=(a=this._dotLottieCore)==null?void 0:a.startStateMachine())!=null?r:!1;return l&&this._setupStateMachineListeners(),l}stopStateMachine(){var a,r;let l=(r=(a=this._dotLottieCore)==null?void 0:a.stopStateMachine())!=null?r:!1;return l&&this._cleanupStateMachineListeners(),l}_getPointerPosition(a){let r=this._canvas.getBoundingClientRect(),l=this._canvas.width/r.width,s=this._canvas.height/r.height,c=this._renderConfig.devicePixelRatio||window.devicePixelRatio||1,d=(a.clientX-r.left)*l/c,h=(a.clientY-r.top)*s/c;return{x:d,y:h}}_onPointerUp(a){let{x:r,y:l}=this._getPointerPosition(a);this.postPointerUpEvent(r,l)}_onPointerDown(a){let{x:r,y:l}=this._getPointerPosition(a);this.postPointerDownEvent(r,l)}_onPointerMove(a){let{x:r,y:l}=this._getPointerPosition(a);this.postPointerMoveEvent(r,l)}_onPointerEnter(a){let{x:r,y:l}=this._getPointerPosition(a);this.postPointerEnterEvent(r,l)}_onPointerLeave(a){let{x:r,y:l}=this._getPointerPosition(a);this.postPointerExitEvent(r,l)}postPointerUpEvent(a,r){var l;return(l=this._dotLottieCore)==null?void 0:l.postPointerUpEvent(a,r)}postPointerDownEvent(a,r){var l;return(l=this._dotLottieCore)==null?void 0:l.postPointerDownEvent(a,r)}postPointerMoveEvent(a,r){var l;return(l=this._dotLottieCore)==null?void 0:l.postPointerMoveEvent(a,r)}postPointerEnterEvent(a,r){var l;return(l=this._dotLottieCore)==null?void 0:l.postPointerEnterEvent(a,r)}postPointerExitEvent(a,r){var l;return(l=this._dotLottieCore)==null?void 0:l.postPointerExitEvent(a,r)}getStateMachineListeners(){if(!this._dotLottieCore)return[];let a=this._dotLottieCore.stateMachineFrameworkSetup(),r=[];for(let l=0;l<a.size();l+=1)r.push(a.get(l));return r}_setupStateMachineListeners(){if(r3&&this._canvas instanceof HTMLCanvasElement&&this._dotLottieCore!==null&&this.isLoaded){let a=this.getStateMachineListeners();a.includes("PointerUp")&&this._canvas.addEventListener("pointerup",this._pointerUpMethod),a.includes("PointerDown")&&this._canvas.addEventListener("pointerdown",this._pointerDownMethod),a.includes("PointerMove")&&this._canvas.addEventListener("pointermove",this._pointerMoveMethod),a.includes("PointerEnter")&&this._canvas.addEventListener("pointerenter",this._pointerEnterMethod),a.includes("PointerExit")&&this._canvas.addEventListener("pointerleave",this._pointerExitMethod)}}_cleanupStateMachineListeners(){r3&&this._canvas instanceof HTMLCanvasElement&&(this._canvas.removeEventListener("pointerup",this._pointerUpMethod),this._canvas.removeEventListener("pointerdown",this._pointerDownMethod),this._canvas.removeEventListener("pointermove",this._pointerMoveMethod),this._canvas.removeEventListener("pointerenter",this._pointerEnterMethod),this._canvas.removeEventListener("pointerleave",this._pointerExitMethod))}loadStateMachineData(a){var r,l;return(l=(r=this._dotLottieCore)==null?void 0:r.loadStateMachineData(a))!=null?l:!1}animationSize(){var a,r,l,s;let c=(r=(a=this._dotLottieCore)==null?void 0:a.animationSize().get(0))!=null?r:0,d=(s=(l=this._dotLottieCore)==null?void 0:l.animationSize().get(1))!=null?s:0;return{width:c,height:d}}setStateMachineBooleanContext(a,r){var l,s;return(s=(l=this._dotLottieCore)==null?void 0:l.setStateMachineBooleanContext(a,r))!=null?s:!1}setStateMachineNumericContext(a,r){var l,s;return(s=(l=this._dotLottieCore)==null?void 0:l.setStateMachineNumericContext(a,r))!=null?s:!1}setStateMachineStringContext(a,r){var l,s;return(s=(l=this._dotLottieCore)==null?void 0:l.setStateMachineStringContext(a,r))!=null?s:!1}getLayerBoundingBox(a){var r;let l=(r=this._dotLottieCore)==null?void 0:r.getLayerBounds(a);if(!l||l.size()!==4)return;let s=l.get(0),c=l.get(1),d=l.get(2),h=l.get(3);return{x:s,y:c,width:d,height:h}}static transformThemeToLottieSlots(a,r){var l,s;return(s=(l=E2._wasmModule)==null?void 0:l.transformThemeToLottieSlots(a,r))!=null?s:""}};j1(Tc,"_wasmModule",null);var Z8=Tc,K8=class{constructor(){if(typeof Worker>"u")throw new Error("Worker is not supported in this environment.");let n=new Blob([new Uint8Array([34,117,115,101,32,115,116,114,105,99,116,34,59,10,40,40,41,32,61,62,32,123,10,32,32,118,97,114,32,95,95,100,101,102,80,114,111,112,32,61,32,79,98,106,101,99,116,46,100,101,102,105,110,101,80,114,111,112,101,114,116,121,59,10,32,32,118,97,114,32,95,95,100,101,102,80,114,111,112,115,32,61,32,79,98,106,101,99,116,46,100,101,102,105,110,101,80,114,111,112,101,114,116,105,101,115,59,10,32,32,118,97,114,32,95,95,103,101,116,79,119,110,80,114,111,112,68,101,115,99,115,32,61,32,79,98,106,101,99,116,46,103,101,116,79,119,110,80,114,111,112,101,114,116,121,68,101,115,99,114,105,112,116,111,114,115,59,10,32,32,118,97,114,32,95,95,103,101,116,79,119,110,80,114,111,112,83,121,109,98,111,108,115,32,61,32,79,98,106,101,99,116,46,103,101,116,79,119,110,80,114,111,112,101,114,116,121,83,121,109,98,111,108,115,59,10,32,32,118,97,114,32,95,95,104,97,115,79,119,110,80,114,111,112,32,61,32,79,98,106,101,99,116,46,112,114,111,116,111,116,121,112,101,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,59,10,32,32,118,97,114,32,95,95,112,114,111,112,73,115,69,110,117,109,32,61,32,79,98,106,101,99,116,46,112,114,111,116,111,116,121,112,101,46,112,114,111,112,101,114,116,121,73,115,69,110,117,109,101,114,97,98,108,101,59,10,32,32,118,97,114,32,95,95,100,101,102,78,111,114,109,97,108,80,114,111,112,32,61,32,40,111,98,106,44,32,107,101,121,44,32,118,97,108,117,101,41,32,61,62,32,107,101,121,32,105,110,32,111,98,106,32,63,32,95,95,100,101,102,80,114,111,112,40,111,98,106,44,32,107,101,121,44,32,123,32,101,110,117,109,101,114,97,98,108,101,58,32,116,114,117,101,44,32,99,111,110,102,105,103,117,114,97,98,108,101,58,32,116,114,117,101,44,32,119,114,105,116,97,98,108,101,58,32,116,114,117,101,44,32,118,97,108,117,101,32,125,41,32,58,32,111,98,106,91,107,101,121,93,32,61,32,118,97,108,117,101,59,10,32,32,118,97,114,32,95,95,115,112,114,101,97,100,86,97,108,117,101,115,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,102,111,114,32,40,118,97,114,32,112,114,111,112,32,105,110,32,98,32,124,124,32,40,98,32,61,32,123,125,41,41,10,32,32,32,32,32,32,105,102,32,40,95,95,104,97,115,79,119,110,80,114,111,112,46,99,97,108,108,40,98,44,32,112,114,111,112,41,41,10,32,32,32,32,32,32,32,32,95,95,100,101,102,78,111,114,109,97,108,80,114,111,112,40,97,44,32,112,114,111,112,44,32,98,91,112,114,111,112,93,41,59,10,32,32,32,32,105,102,32,40,95,95,103,101,116,79,119,110,80,114,111,112,83,121,109,98,111,108,115,41,10,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,112,114,111,112,32,111,102,32,95,95,103,101,116,79,119,110,80,114,111,112,83,121,109,98,111,108,115,40,98,41,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,95,95,112,114,111,112,73,115,69,110,117,109,46,99,97,108,108,40,98,44,32,112,114,111,112,41,41,10,32,32,32,32,32,32,32,32,32,32,95,95,100,101,102,78,111,114,109,97,108,80,114,111,112,40,97,44,32,112,114,111,112,44,32,98,91,112,114,111,112,93,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,114,101,116,117,114,110,32,97,59,10,32,32,125,59,10,32,32,118,97,114,32,95,95,115,112,114,101,97,100,80,114,111,112,115,32,61,32,40,97,44,32,98,41,32,61,62,32,95,95,100,101,102,80,114,111,112,115,40,97,44,32,95,95,103,101,116,79,119,110,80,114,111,112,68,101,115,99,115,40,98,41,41,59,10,32,32,118,97,114,32,95,95,111,98,106,82,101,115,116,32,61,32,40,115,111,117,114,99,101,44,32,101,120,99,108,117,100,101,41,32,61,62,32,123,10,32,32,32,32,118,97,114,32,116,97,114,103,101,116,32,61,32,123,125,59,10,32,32,32,32,102,111,114,32,40,118,97,114,32,112,114,111,112,32,105,110,32,115,111,117,114,99,101,41,10,32,32,32,32,32,32,105,102,32,40,95,95,104,97,115,79,119,110,80,114,111,112,46,99,97,108,108,40,115,111,117,114,99,101,44,32,112,114,111,112,41,32,38,38,32,101,120,99,108,117,100,101,46,105,110,100,101,120,79,102,40,112,114,111,112,41,32,60,32,48,41,10,32,32,32,32,32,32,32,32,116,97,114,103,101,116,91,112,114,111,112,93,32,61,32,115,111,117,114,99,101,91,112,114,111,112,93,59,10,32,32,32,32,105,102,32,40,115,111,117,114,99,101,32,33,61,32,110,117,108,108,32,38,38,32,95,95,103,101,116,79,119,110,80,114,111,112,83,121,109,98,111,108,115,41,10,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,112,114,111,112,32,111,102,32,95,95,103,101,116,79,119,110,80,114,111,112,83,121,109,98,111,108,115,40,115,111,117,114,99,101,41,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,101,120,99,108,117,100,101,46,105,110,100,101,120,79,102,40,112,114,111,112,41,32,60,32,48,32,38,38,32,95,95,112,114,111,112,73,115,69,110,117,109,46,99,97,108,108,40,115,111,117,114,99,101,44,32,112,114,111,112,41,41,10,32,32,32,32,32,32,32,32,32,32,116,97,114,103,101,116,91,112,114,111,112,93,32,61,32,115,111,117,114,99,101,91,112,114,111,112,93,59,10,32,32,32,32,32,32,125,10,32,32,32,32,114,101,116,117,114,110,32,116,97,114,103,101,116,59,10,32,32,125,59,10,32,32,118,97,114,32,95,95,112,117,98,108,105,99,70,105,101,108,100,32,61,32,40,111,98,106,44,32,107,101,121,44,32,118,97,108,117,101,41,32,61,62,32,95,95,100,101,102,78,111,114,109,97,108,80,114,111,112,40,111,98,106,44,32,116,121,112,101,111,102,32,107,101,121,32,33,61,61,32,34,115,121,109,98,111,108,34,32,63,32,107,101,121,32,43,32,34,34,32,58,32,107,101,121,44,32,118,97,108,117,101,41,59,10,32,32,118,97,114,32,95,95,97,115,121,110,99,32,61,32,40,95,95,116,104,105,115,44,32,95,95,97,114,103,117,109,101,110,116,115,44,32,103,101,110,101,114,97,116,111,114,41,32,61,62,32,123,10,32,32,32,32,114,101,116,117,114,110,32,110,101,119,32,80,114,111,109,105,115,101,40,40,114,101,115,111,108,118,101,44,32,114,101,106,101,99,116,41,32,61,62,32,123,10,32,32,32,32,32,32,118,97,114,32,102,117,108,102,105,108,108,101,100,32,61,32,40,118,97,108,117,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,115,116,101,112,40,103,101,110,101,114,97,116,111,114,46,110,101,120,116,40,118,97,108,117,101,41,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,106,101,99,116,40,101,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,118,97,114,32,114,101,106,101,99,116,101,100,32,61,32,40,118,97,108,117,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,115,116,101,112,40,103,101,110,101,114,97,116,111,114,46,116,104,114,111,119,40,118,97,108,117,101,41,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,106,101,99,116,40,101,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,118,97,114,32,115,116,101,112,32,61,32,40,120,41,32,61,62,32,120,46,100,111,110,101,32,63,32,114,101,115,111,108,118,101,40,120,46,118,97,108,117,101,41,32,58,32,80,114,111,109,105,115,101,46,114,101,115,111,108,118,101,40,120,46,118,97,108,117,101,41,46,116,104,101,110,40,102,117,108,102,105,108,108,101,100,44,32,114,101,106,101,99,116,101,100,41,59,10,32,32,32,32,32,32,115,116,101,112,40,40,103,101,110,101,114,97,116,111,114,32,61,32,103,101,110,101,114,97,116,111,114,46,97,112,112,108,121,40,95,95,116,104,105,115,44,32,95,95,97,114,103,117,109,101,110,116,115,41,41,46,110,101,120,116,40,41,41,59,10,32,32,32,32,125,41,59,10,32,32,125,59,10,10,32,32,47,47,32,115,114,99,47,97,110,105,109,97,116,105,111,110,45,102,114,97,109,101,45,109,97,110,97,103,101,114,46,116,115,10,32,32,118,97,114,32,87,101,98,65,110,105,109,97,116,105,111,110,70,114,97,109,101,83,116,114,97,116,101,103,121,32,61,32,99,108,97,115,115,32,123,10,32,32,32,32,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,99,97,108,108,98,97,99,107,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,99,97,108,108,98,97,99,107,41,59,10,32,32,32,32,125,10,32,32,32,32,99,97,110,99,101,108,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,105,100,41,32,123,10,32,32,32,32,32,32,99,97,110,99,101,108,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,105,100,41,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,118,97,114,32,78,111,100,101,65,110,105,109,97,116,105,111,110,70,114,97,109,101,83,116,114,97,116,101,103,121,32,61,32,99,108,97,115,115,32,123,10,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,41,32,123,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,108,97,115,116,72,97,110,100,108,101,73,100,34,44,32,48,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,108,97,115,116,73,109,109,101,100,105,97,116,101,34,44,32,110,117,108,108,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,99,97,108,108,98,97,99,107,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,108,97,115,116,72,97,110,100,108,101,73,100,32,62,61,32,78,117,109,98,101,114,46,77,65,88,95,83,65,70,69,95,73,78,84,69,71,69,82,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,108,97,115,116,72,97,110,100,108,101,73,100,32,61,32,48,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,116,104,105,115,46,95,108,97,115,116,72,97,110,100,108,101,73,100,32,43,61,32,49,59,10,32,32,32,32,32,32,116,104,105,115,46,95,108,97,115,116,73,109,109,101,100,105,97,116,101,32,61,32,115,101,116,73,109,109,101,100,105,97,116,101,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,40,68,97,116,101,46,110,111,119,40,41,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,108,97,115,116,72,97,110,100,108,101,73,100,59,10,32,32,32,32,125,10,32,32,32,32,99,97,110,99,101,108,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,95,105,100,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,108,97,115,116,73,109,109,101,100,105,97,116,101,41,32,123,10,32,32,32,32,32,32,32,32,99,108,101,97,114,73,109,109,101,100,105,97,116,101,40,116,104,105,115,46,95,108,97,115,116,73,109,109,101,100,105,97,116,101,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,125,59,10,32,32,118,97,114,32,65,110,105,109,97,116,105,111,110,70,114,97,109,101,77,97,110,97,103,101,114,32,61,32,99,108,97,115,115,32,123,10,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,41,32,123,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,115,116,114,97,116,101,103,121,34,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,114,97,116,101,103,121,32,61,32,116,121,112,101,111,102,32,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,32,61,61,61,32,34,102,117,110,99,116,105,111,110,34,32,63,32,110,101,119,32,87,101,98,65,110,105,109,97,116,105,111,110,70,114,97,109,101,83,116,114,97,116,101,103,121,40,41,32,58,32,110,101,119,32,78,111,100,101,65,110,105,109,97,116,105,111,110,70,114,97,109,101,83,116,114,97,116,101,103,121,40,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,99,97,108,108,98,97,99,107,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,115,116,114,97,116,101,103,121,46,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,99,97,108,108,98,97,99,107,41,59,10,32,32,32,32,125,10,32,32,32,32,99,97,110,99,101,108,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,105,100,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,114,97,116,101,103,121,46,99,97,110,99,101,108,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,105,100,41,59,10,32,32,32,32,125,10,32,32,125,59,10,10,32,32,47,47,32,115,114,99,47,99,111,110,115,116,97,110,116,115,46,116,115,10,32,32,118,97,114,32,73,83,95,66,82,79,87,83,69,82,32,61,32,116,121,112,101,111,102,32,119,105,110,100,111,119,32,33,61,61,32,34,117,110,100,101,102,105,110,101,100,34,32,38,38,32,116,121,112,101,111,102,32,119,105,110,100,111,119,46,100,111,99,117,109,101,110,116,32,33,61,61,32,34,117,110,100,101,102,105,110,101,100,34,59,10,32,32,118,97,114,32,90,73,80,95,83,73,71,78,65,84,85,82,69,32,61,32,110,101,119,32,85,105,110,116,56,65,114,114,97,121,40,91,56,48,44,32,55,53,44,32,51,44,32,52,93,41,59,10,32,32,118,97,114,32,76,79,84,84,73,69,95,74,83,79,78,95,77,65,78,68,65,84,79,82,89,95,70,73,69,76,68,83,32,61,32,91,34,118,34,44,32,34,105,112,34,44,32,34,111,112,34,44,32,34,108,97,121,101,114,115,34,44,32,34,102,114,34,44,32,34,119,34,44,32,34,104,34,93,59,10,32,32,118,97,114,32,80,65,67,75,65,71,69,95,86,69,82,83,73,79,78,32,61,32,34,48,46,52,49,46,48,34,59,10,32,32,118,97,114,32,80,65,67,75,65,71,69,95,78,65,77,69,32,61,32,34,64,108,111,116,116,105,101,102,105,108,101,115,47,100,111,116,108,111,116,116,105,101,45,119,101,98,34,59,10,32,32,118,97,114,32,68,69,70,65,85,76,84,95,68,80,82,95,70,65,67,84,79,82,32,61,32,48,46,55,53,59,10,10,32,32,47,47,32,115,114,99,47,99,111,114,101,47,100,111,116,108,111,116,116,105,101,45,112,108,97,121,101,114,46,106,115,10,32,32,118,97,114,32,99,114,101,97,116,101,68,111,116,76,111,116,116,105,101,80,108,97,121,101,114,77,111,100,117,108,101,32,61,32,40,40,41,32,61,62,32,123,10,32,32,32,32,118,97,114,32,95,97,59,10,32,32,32,32,118,97,114,32,95,115,99,114,105,112,116,78,97,109,101,32,61,32,116,121,112,101,111,102,32,100,111,99,117,109,101,110,116,32,33,61,32,34,117,110,100,101,102,105,110,101,100,34,32,63,32,40,95,97,32,61,32,100,111,99,117,109,101,110,116,46,99,117,114,114,101,110,116,83,99,114,105,112,116,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,115,114,99,32,58,32,118,111,105,100,32,48,59,10,32,32,32,32,114,101,116,117,114,110,32,102,117,110,99,116,105,111,110,40,109,111,100,117,108,101,65,114,103,32,61,32,123,125,41,32,123,10,32,32,32,32,32,32,118,97,114,32,109,111,100,117,108,101,82,116,110,59,10,32,32,32,32,32,32,118,97,114,32,107,32,61,32,109,111,100,117,108,101,65,114,103,44,32,97,97,44,32,98,97,44,32,101,97,32,61,32,110,101,119,32,80,114,111,109,105,115,101,40,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,97,97,32,61,32,97,59,10,32,32,32,32,32,32,32,32,98,97,32,61,32,98,59,10,32,32,32,32,32,32,125,41,44,32,102,97,32,61,32,79,98,106,101,99,116,46,97,115,115,105,103,110,40,123,125,44,32,107,41,44,32,104,97,32,61,32,34,46,47,116,104,105,115,46,112,114,111,103,114,97,109,34,44,32,112,32,61,32,34,34,44,32,105,97,59,10,32,32,32,32,32,32,34,117,110,100,101,102,105,110,101,100,34,32,33,61,32,116,121,112,101,111,102,32,100,111,99,117,109,101,110,116,32,38,38,32,100,111,99,117,109,101,110,116,46,99,117,114,114,101,110,116,83,99,114,105,112,116,32,38,38,32,40,112,32,61,32,100,111,99,117,109,101,110,116,46,99,117,114,114,101,110,116,83,99,114,105,112,116,46,115,114,99,41,59,10,32,32,32,32,32,32,95,115,99,114,105,112,116,78,97,109,101,32,38,38,32,40,112,32,61,32,95,115,99,114,105,112,116,78,97,109,101,41,59,10,32,32,32,32,32,32,112,46,115,116,97,114,116,115,87,105,116,104,40,34,98,108,111,98,58,34,41,32,63,32,112,32,61,32,34,34,32,58,32,112,32,61,32,112,46,115,117,98,115,116,114,40,48,44,32,112,46,114,101,112,108,97,99,101,40,47,91,63,35,93,46,42,47,44,32,34,34,41,46,108,97,115,116,73,110,100,101,120,79,102,40,34,47,34,41,32,43,32,49,41,59,10,32,32,32,32,32,32,105,97,32,61,32,40,97,41,32,61,62,32,102,101,116,99,104,40,97,44,32,123,32,99,114,101,100,101,110,116,105,97,108,115,58,32,34,115,97,109,101,45,111,114,105,103,105,110,34,32,125,41,46,116,104,101,110,40,10,32,32,32,32,32,32,32,32,40,98,41,32,61,62,32,98,46,111,107,32,63,32,98,46,97,114,114,97,121,66,117,102,102,101,114,40,41,32,58,32,80,114,111,109,105,115,101,46,114,101,106,101,99,116,40,69,114,114,111,114,40,98,46,115,116,97,116,117,115,32,43,32,34,32,58,32,34,32,43,32,98,46,117,114,108,41,41,10,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,118,97,114,32,116,32,61,32,107,46,112,114,105,110,116,69,114,114,32,124,124,32,99,111,110,115,111,108,101,46,101,114,114,111,114,46,98,105,110,100,40,99,111,110,115,111,108,101,41,59,10,32,32,32,32,32,32,79,98,106,101,99,116,46,97,115,115,105,103,110,40,107,44,32,102,97,41,59,10,32,32,32,32,32,32,102,97,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,107,46,116,104,105,115,80,114,111,103,114,97,109,32,38,38,32,40,104,97,32,61,32,107,46,116,104,105,115,80,114,111,103,114,97,109,41,59,10,32,32,32,32,32,32,118,97,114,32,106,97,32,61,32,107,46,119,97,115,109,66,105,110,97,114,121,44,32,107,97,44,32,108,97,32,61,32,102,97,108,115,101,44,32,109,97,44,32,119,44,32,120,44,32,121,44,32,122,44,32,67,44,32,68,44,32,110,97,44,32,111,97,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,112,97,40,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,97,32,61,32,107,97,46,98,117,102,102,101,114,59,10,32,32,32,32,32,32,32,32,107,46,72,69,65,80,56,32,61,32,119,32,61,32,110,101,119,32,73,110,116,56,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,107,46,72,69,65,80,49,54,32,61,32,121,32,61,32,110,101,119,32,73,110,116,49,54,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,107,46,72,69,65,80,85,56,32,61,32,120,32,61,32,110,101,119,32,85,105,110,116,56,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,107,46,72,69,65,80,85,49,54,32,61,32,122,32,61,32,110,101,119,32,85,105,110,116,49,54,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,107,46,72,69,65,80,51,50,32,61,32,67,32,61,32,110,101,119,32,73,110,116,51,50,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,107,46,72,69,65,80,85,51,50,32,61,32,68,32,61,32,110,101,119,32,85,105,110,116,51,50,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,107,46,72,69,65,80,70,51,50,32,61,32,110,97,32,61,32,110,101,119,32,70,108,111,97,116,51,50,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,107,46,72,69,65,80,70,54,52,32,61,32,111,97,32,61,32,110,101,119,32,70,108,111,97,116,54,52,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,113,97,32,61,32,91,93,44,32,114,97,32,61,32,91,93,44,32,115,97,32,61,32,91,93,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,116,97,40,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,97,32,61,32,107,46,112,114,101,82,117,110,46,115,104,105,102,116,40,41,59,10,32,32,32,32,32,32,32,32,113,97,46,117,110,115,104,105,102,116,40,97,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,70,32,61,32,48,44,32,117,97,32,61,32,110,117,108,108,44,32,71,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,118,97,40,97,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,95,97,50,59,10,32,32,32,32,32,32,32,32,40,95,97,50,32,61,32,107,46,111,110,65,98,111,114,116,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,50,46,99,97,108,108,40,107,44,32,97,41,59,10,32,32,32,32,32,32,32,32,97,32,61,32,34,65,98,111,114,116,101,100,40,34,32,43,32,97,32,43,32,34,41,34,59,10,32,32,32,32,32,32,32,32,116,40,97,41,59,10,32,32,32,32,32,32,32,32,108,97,32,61,32,116,114,117,101,59,10,32,32,32,32,32,32,32,32,97,32,61,32,110,101,119,32,87,101,98,65,115,115,101,109,98,108,121,46,82,117,110,116,105,109,101,69,114,114,111,114,40,97,32,43,32,34,46,32,66,117,105,108,100,32,119,105,116,104,32,45,115,65,83,83,69,82,84,73,79,78,83,32,102,111,114,32,109,111,114,101,32,105,110,102,111,46,34,41,59,10,32,32,32,32,32,32,32,32,98,97,40,97,41,59,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,97,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,119,97,32,61,32,40,97,41,32,61,62,32,97,46,115,116,97,114,116,115,87,105,116,104,40,34,100,97,116,97,58,97,112,112,108,105,99,97,116,105,111,110,47,111,99,116,101,116,45,115,116,114,101,97,109,59,98,97,115,101,54,52,44,34,41,44,32,120,97,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,121,97,40,97,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,97,32,61,61,32,120,97,32,38,38,32,106,97,41,32,114,101,116,117,114,110,32,110,101,119,32,85,105,110,116,56,65,114,114,97,121,40,106,97,41,59,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,34,98,111,116,104,32,97,115,121,110,99,32,97,110,100,32,115,121,110,99,32,102,101,116,99,104,105,110,103,32,111,102,32,116,104,101,32,119,97,115,109,32,102,97,105,108,101,100,34,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,122,97,40,97,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,106,97,32,63,32,80,114,111,109,105,115,101,46,114,101,115,111,108,118,101,40,41,46,116,104,101,110,40,40,41,32,61,62,32,121,97,40,97,41,41,32,58,32,105,97,40,97,41,46,116,104,101,110,40,10,32,32,32,32,32,32,32,32,32,32,40,98,41,32,61,62,32,110,101,119,32,85,105,110,116,56,65,114,114,97,121,40,98,41,44,10,32,32,32,32,32,32,32,32,32,32,40,41,32,61,62,32,121,97,40,97,41,10,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,65,97,40,97,44,32,98,44,32,99,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,122,97,40,97,41,46,116,104,101,110,40,40,100,41,32,61,62,32,87,101,98,65,115,115,101,109,98,108,121,46,105,110,115,116,97,110,116,105,97,116,101,40,100,44,32,98,41,41,46,116,104,101,110,40,99,44,32,40,100,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,116,40,96,102,97,105,108,101,100,32,116,111,32,97,115,121,110,99,104,114,111,110,111,117,115,108,121,32,112,114,101,112,97,114,101,32,119,97,115,109,58,32,36,123,100,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,118,97,40,100,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,66,97,40,97,44,32,98,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,120,97,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,106,97,32,124,124,32,34,102,117,110,99,116,105,111,110,34,32,33,61,32,116,121,112,101,111,102,32,87,101,98,65,115,115,101,109,98,108,121,46,105,110,115,116,97,110,116,105,97,116,101,83,116,114,101,97,109,105,110,103,32,124,124,32,119,97,40,99,41,32,124,124,32,34,102,117,110,99,116,105,111,110,34,32,33,61,32,116,121,112,101,111,102,32,102,101,116,99,104,32,63,32,65,97,40,99,44,32,97,44,32,98,41,32,58,32,102,101,116,99,104,40,99,44,32,123,32,99,114,101,100,101,110,116,105,97,108,115,58,32,34,115,97,109,101,45,111,114,105,103,105,110,34,32,125,41,46,116,104,101,110,40,10,32,32,32,32,32,32,32,32,32,32,40,100,41,32,61,62,32,87,101,98,65,115,115,101,109,98,108,121,46,105,110,115,116,97,110,116,105,97,116,101,83,116,114,101,97,109,105,110,103,40,100,44,32,97,41,46,116,104,101,110,40,98,44,32,102,117,110,99,116,105,111,110,40,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,40,96,119,97,115,109,32,115,116,114,101,97,109,105,110,103,32,99,111,109,112,105,108,101,32,102,97,105,108,101,100,58,32,36,123,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,116,40,34,102,97,108,108,105,110,103,32,98,97,99,107,32,116,111,32,65,114,114,97,121,66,117,102,102,101,114,32,105,110,115,116,97,110,116,105,97,116,105,111,110,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,65,97,40,99,44,32,97,44,32,98,41,59,10,32,32,32,32,32,32,32,32,32,32,125,41,10,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,108,97,115,115,32,67,97,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,110,97,109,101,34,44,32,34,69,120,105,116,83,116,97,116,117,115,34,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,109,101,115,115,97,103,101,32,61,32,96,80,114,111,103,114,97,109,32,116,101,114,109,105,110,97,116,101,100,32,119,105,116,104,32,101,120,105,116,40,36,123,97,125,41,96,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,115,116,97,116,117,115,32,61,32,97,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,68,97,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,59,32,48,32,60,32,97,46,108,101,110,103,116,104,59,32,41,32,97,46,115,104,105,102,116,40,41,40,107,41,59,10,32,32,32,32,32,32,125,44,32,69,97,32,61,32,107,46,110,111,69,120,105,116,82,117,110,116,105,109,101,32,124,124,32,116,114,117,101,44,32,70,97,32,61,32,34,117,110,100,101,102,105,110,101,100,34,32,33,61,32,116,121,112,101,111,102,32,84,101,120,116,68,101,99,111,100,101,114,32,63,32,110,101,119,32,84,101,120,116,68,101,99,111,100,101,114,40,41,32,58,32,118,111,105,100,32,48,44,32,71,97,32,61,32,40,97,32,61,32,48,44,32,98,32,61,32,78,97,78,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,120,44,32,100,32,61,32,97,32,43,32,98,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,98,32,61,32,97,59,32,99,91,98,93,32,38,38,32,33,40,98,32,62,61,32,100,41,59,32,41,32,43,43,98,59,10,32,32,32,32,32,32,32,32,105,102,32,40,49,54,32,60,32,98,32,45,32,97,32,38,38,32,99,46,98,117,102,102,101,114,32,38,38,32,70,97,41,32,114,101,116,117,114,110,32,70,97,46,100,101,99,111,100,101,40,99,46,115,117,98,97,114,114,97,121,40,97,44,32,98,41,41,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,100,32,61,32,34,34,59,32,97,32,60,32,98,59,32,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,99,91,97,43,43,93,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,101,32,38,32,49,50,56,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,99,91,97,43,43,93,32,38,32,54,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,49,57,50,32,61,61,32,40,101,32,38,32,50,50,52,41,41,32,100,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,40,101,32,38,32,51,49,41,32,60,60,32,54,32,124,32,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,104,32,61,32,99,91,97,43,43,93,32,38,32,54,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,32,61,32,50,50,52,32,61,61,32,40,101,32,38,32,50,52,48,41,32,63,32,40,101,32,38,32,49,53,41,32,60,60,32,49,50,32,124,32,102,32,60,60,32,54,32,124,32,104,32,58,32,40,101,32,38,32,55,41,32,60,60,32,49,56,32,124,32,102,32,60,60,32,49,50,32,124,32,104,32,60,60,32,54,32,124,32,99,91,97,43,43,93,32,38,32,54,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,54,53,53,51,54,32,62,32,101,32,63,32,100,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,101,41,32,58,32,40,101,32,45,61,32,54,53,53,51,54,44,32,100,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,53,53,50,57,54,32,124,32,101,32,62,62,32,49,48,44,32,53,54,51,50,48,32,124,32,101,32,38,32,49,48,50,51,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,100,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,101,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,100,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,99,108,97,115,115,32,72,97,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,118,97,32,61,32,97,32,45,32,50,52,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,73,97,32,61,32,48,44,32,74,97,32,61,32,48,44,32,72,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,120,59,10,32,32,32,32,32,32,32,32,105,102,32,40,48,32,60,32,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,32,61,32,98,32,43,32,99,32,45,32,49,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,101,32,61,32,48,59,32,101,32,60,32,97,46,108,101,110,103,116,104,59,32,43,43,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,97,46,99,104,97,114,67,111,100,101,65,116,40,101,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,53,53,50,57,54,32,60,61,32,102,32,38,38,32,53,55,51,52,51,32,62,61,32,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,104,32,61,32,97,46,99,104,97,114,67,111,100,101,65,116,40,43,43,101,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,32,61,32,54,53,53,51,54,32,43,32,40,40,102,32,38,32,49,48,50,51,41,32,60,60,32,49,48,41,32,124,32,104,32,38,32,49,48,50,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,49,50,55,32,62,61,32,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,98,32,62,61,32,99,41,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,91,98,43,43,93,32,61,32,102,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,50,48,52,55,32,62,61,32,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,98,32,43,32,49,32,62,61,32,99,41,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,91,98,43,43,93,32,61,32,49,57,50,32,124,32,102,32,62,62,32,54,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,54,53,53,51,53,32,62,61,32,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,98,32,43,32,50,32,62,61,32,99,41,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,91,98,43,43,93,32,61,32,50,50,52,32,124,32,102,32,62,62,32,49,50,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,98,32,43,32,51,32,62,61,32,99,41,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,91,98,43,43,93,32,61,32,50,52,48,32,124,32,102,32,62,62,32,49,56,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,91,98,43,43,93,32,61,32,49,50,56,32,124,32,102,32,62,62,32,49,50,32,38,32,54,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,91,98,43,43,93,32,61,32,49,50,56,32,124,32,102,32,62,62,32,54,32,38,32,54,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,91,98,43,43,93,32,61,32,49,50,56,32,124,32,102,32,38,32,54,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,100,91,98,93,32,61,32,48,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,75,97,32,61,32,123,125,44,32,76,97,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,59,32,97,46,108,101,110,103,116,104,59,32,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,97,46,112,111,112,40,41,59,10,32,32,32,32,32,32,32,32,32,32,97,46,112,111,112,40,41,40,98,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,73,40,97,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,68,91,97,32,62,62,32,50,93,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,74,32,61,32,123,125,44,32,75,32,61,32,123,125,44,32,77,97,32,61,32,123,125,44,32,76,44,32,78,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,100,40,103,41,32,123,10,32,32,32,32,32,32,32,32,32,32,103,32,61,32,99,40,103,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,103,46,108,101,110,103,116,104,32,33,61,61,32,97,46,108,101,110,103,116,104,41,32,116,104,114,111,119,32,110,101,119,32,76,40,34,77,105,115,109,97,116,99,104,101,100,32,116,121,112,101,32,99,111,110,118,101,114,116,101,114,32,99,111,117,110,116,34,41,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,108,32,61,32,48,59,32,108,32,60,32,97,46,108,101,110,103,116,104,59,32,43,43,108,41,32,77,40,97,91,108,93,44,32,103,91,108,93,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,97,46,102,111,114,69,97,99,104,40,40,103,41,32,61,62,32,77,97,91,103,93,32,61,32,98,41,59,10,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,65,114,114,97,121,40,98,46,108,101,110,103,116,104,41,44,32,102,32,61,32,91,93,44,32,104,32,61,32,48,59,10,32,32,32,32,32,32,32,32,98,46,102,111,114,69,97,99,104,40,40,103,44,32,108,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,75,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,103,41,32,63,32,101,91,108,93,32,61,32,75,91,103,93,32,58,32,40,102,46,112,117,115,104,40,103,41,44,32,74,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,103,41,32,124,124,32,40,74,91,103,93,32,61,32,91,93,41,44,32,74,91,103,93,46,112,117,115,104,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,101,91,108,93,32,61,32,75,91,103,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,43,43,104,59,10,32,32,32,32,32,32,32,32,32,32,32,32,104,32,61,61,61,32,102,46,108,101,110,103,116,104,32,38,38,32,100,40,101,41,59,10,32,32,32,32,32,32,32,32,32,32,125,41,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,48,32,61,61,61,32,102,46,108,101,110,103,116,104,32,38,38,32,100,40,101,41,59,10,32,32,32,32,32,32,125,44,32,78,97,44,32,79,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,98,32,61,32,34,34,59,32,120,91,97,93,59,32,41,32,98,32,43,61,32,78,97,91,120,91,97,43,43,93,93,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,125,44,32,80,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,80,97,40,97,44,32,98,44,32,99,32,61,32,123,125,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,98,46,110,97,109,101,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,116,121,112,101,32,34,36,123,100,125,34,32,109,117,115,116,32,104,97,118,101,32,97,32,112,111,115,105,116,105,118,101,32,105,110,116,101,103,101,114,32,116,121,112,101,105,100,32,112,111,105,110,116,101,114,96,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,75,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,97,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,99,46,36,97,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,114,101,103,105,115,116,101,114,32,116,121,112,101,32,39,36,123,100,125,39,32,116,119,105,99,101,96,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,75,91,97,93,32,61,32,98,59,10,32,32,32,32,32,32,32,32,100,101,108,101,116,101,32,77,97,91,97,93,59,10,32,32,32,32,32,32,32,32,74,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,97,41,32,38,38,32,40,98,32,61,32,74,91,97,93,44,32,100,101,108,101,116,101,32,74,91,97,93,44,32,98,46,102,111,114,69,97,99,104,40,40,101,41,32,61,62,32,101,40,41,41,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,77,40,97,44,32,98,44,32,99,32,61,32,123,125,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,80,97,40,97,44,32,98,44,32,99,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,81,97,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,97,46,116,97,46,119,97,46,117,97,46,110,97,109,101,32,43,32,34,32,105,110,115,116,97,110,99,101,32,97,108,114,101,97,100,121,32,100,101,108,101,116,101,100,34,41,59,10,32,32,32,32,32,32,125,44,32,82,97,32,61,32,102,97,108,115,101,44,32,83,97,32,61,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,125,44,32,84,97,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,98,32,61,61,61,32,99,41,32,114,101,116,117,114,110,32,97,59,10,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,99,46,122,97,41,32,114,101,116,117,114,110,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,97,32,61,32,84,97,40,97,44,32,98,44,32,99,46,122,97,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,117,108,108,32,61,61,61,32,97,32,63,32,110,117,108,108,32,58,32,99,46,84,97,40,97,41,59,10,32,32,32,32,32,32,125,44,32,85,97,32,61,32,123,125,44,32,86,97,32,61,32,123,125,44,32,87,97,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,98,41,32,116,104,114,111,119,32,110,101,119,32,80,40,34,112,116,114,32,115,104,111,117,108,100,32,110,111,116,32,98,101,32,117,110,100,101,102,105,110,101,100,34,41,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,59,32,97,46,122,97,59,32,41,32,98,32,61,32,97,46,74,97,40,98,41,44,32,97,32,61,32,97,46,122,97,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,86,97,91,98,93,59,10,32,32,32,32,32,32,125,44,32,88,97,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,98,46,119,97,32,124,124,32,33,98,46,118,97,41,32,116,104,114,111,119,32,110,101,119,32,76,40,34,109,97,107,101,67,108,97,115,115,72,97,110,100,108,101,32,114,101,113,117,105,114,101,115,32,112,116,114,32,97,110,100,32,112,116,114,84,121,112,101,34,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,33,98,46,65,97,32,33,61,61,32,33,33,98,46,121,97,41,32,116,104,114,111,119,32,110,101,119,32,76,40,34,66,111,116,104,32,115,109,97,114,116,80,116,114,84,121,112,101,32,97,110,100,32,115,109,97,114,116,80,116,114,32,109,117,115,116,32,98,101,32,115,112,101,99,105,102,105,101,100,34,41,59,10,32,32,32,32,32,32,32,32,98,46,99,111,117,110,116,32,61,32,123,32,118,97,108,117,101,58,32,49,32,125,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,81,40,79,98,106,101,99,116,46,99,114,101,97,116,101,40,97,44,32,123,32,116,97,58,32,123,32,118,97,108,117,101,58,32,98,44,32,119,114,105,116,97,98,108,101,58,32,116,114,117,101,32,125,32,125,41,41,59,10,32,32,32,32,32,32,125,44,32,81,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,34,117,110,100,101,102,105,110,101,100,34,32,61,61,61,32,116,121,112,101,111,102,32,70,105,110,97,108,105,122,97,116,105,111,110,82,101,103,105,115,116,114,121,41,32,114,101,116,117,114,110,32,81,32,61,32,40,98,41,32,61,62,32,98,44,32,97,59,10,32,32,32,32,32,32,32,32,82,97,32,61,32,110,101,119,32,70,105,110,97,108,105,122,97,116,105,111,110,82,101,103,105,115,116,114,121,40,40,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,98,46,116,97,59,10,32,32,32,32,32,32,32,32,32,32,45,45,98,46,99,111,117,110,116,46,118,97,108,117,101,59,10,32,32,32,32,32,32,32,32,32,32,48,32,61,61,61,32,98,46,99,111,117,110,116,46,118,97,108,117,101,32,38,38,32,40,98,46,121,97,32,63,32,98,46,65,97,46,68,97,40,98,46,121,97,41,32,58,32,98,46,119,97,46,117,97,46,68,97,40,98,46,118,97,41,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,81,32,61,32,40,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,98,46,116,97,59,10,32,32,32,32,32,32,32,32,32,32,99,46,121,97,32,38,38,32,82,97,46,114,101,103,105,115,116,101,114,40,98,44,32,123,32,116,97,58,32,99,32,125,44,32,98,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,83,97,32,61,32,40,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,82,97,46,117,110,114,101,103,105,115,116,101,114,40,98,41,59,10,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,81,40,97,41,59,10,32,32,32,32,32,32,125,44,32,89,97,32,61,32,91,93,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,90,97,40,41,32,123,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,82,32,61,32,40,97,44,32,98,41,32,61,62,32,79,98,106,101,99,116,46,100,101,102,105,110,101,80,114,111,112,101,114,116,121,40,98,44,32,34,110,97,109,101,34,44,32,123,32,118,97,108,117,101,58,32,97,32,125,41,44,32,36,97,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,97,91,98,93,46,120,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,97,91,98,93,59,10,32,32,32,32,32,32,32,32,32,32,97,91,98,93,32,61,32,102,117,110,99,116,105,111,110,40,46,46,46,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,97,91,98,93,46,120,97,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,101,46,108,101,110,103,116,104,41,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,96,70,117,110,99,116,105,111,110,32,39,36,123,99,125,39,32,99,97,108,108,101,100,32,119,105,116,104,32,97,110,32,105,110,118,97,108,105,100,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,32,40,36,123,101,46,108,101,110,103,116,104,125,41,32,45,32,101,120,112,101,99,116,115,32,111,110,101,32,111,102,32,40,36,123,97,91,98,93,46,120,97,125,41,33,96,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,91,98,93,46,120,97,91,101,46,108,101,110,103,116,104,93,46,97,112,112,108,121,40,116,104,105,115,44,32,101,41,59,10,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,97,91,98,93,46,120,97,32,61,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,97,91,98,93,46,120,97,91,100,46,71,97,93,32,61,32,100,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,97,98,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,107,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,97,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,99,32,124,124,32,118,111,105,100,32,48,32,33,61,61,32,107,91,97,93,46,120,97,32,38,38,32,118,111,105,100,32,48,32,33,61,61,32,107,91,97,93,46,120,97,91,99,93,41,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,114,101,103,105,115,116,101,114,32,112,117,98,108,105,99,32,110,97,109,101,32,39,36,123,97,125,39,32,116,119,105,99,101,96,41,59,10,32,32,32,32,32,32,32,32,32,32,36,97,40,107,44,32,97,44,32,97,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,107,91,97,93,46,120,97,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,99,41,41,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,114,101,103,105,115,116,101,114,32,109,117,108,116,105,112,108,101,32,111,118,101,114,108,111,97,100,115,32,111,102,32,97,32,102,117,110,99,116,105,111,110,32,119,105,116,104,32,116,104,101,32,115,97,109,101,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,32,40,36,123,99,125,41,33,96,41,59,10,32,32,32,32,32,32,32,32,32,32,107,91,97,93,46,120,97,91,99,93,32,61,32,98,59,10,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,107,91,97,93,32,61,32,98,44,32,107,91,97,93,46,71,97,32,61,32,99,59,10,32,32,32,32,32,32,125,44,32,98,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,97,32,61,32,97,46,114,101,112,108,97,99,101,40,47,91,94,97,45,122,65,45,90,48,45,57,95,93,47,103,44,32,34,36,34,41,59,10,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,97,46,99,104,97,114,67,111,100,101,65,116,40,48,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,52,56,32,60,61,32,98,32,38,38,32,53,55,32,62,61,32,98,32,63,32,96,95,36,123,97,125,96,32,58,32,97,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,99,98,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,104,44,32,103,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,110,97,109,101,32,61,32,97,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,99,111,110,115,116,114,117,99,116,111,114,32,61,32,98,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,70,97,32,61,32,99,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,68,97,32,61,32,100,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,122,97,32,61,32,101,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,86,97,32,61,32,102,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,74,97,32,61,32,104,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,84,97,32,61,32,103,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,98,98,32,61,32,91,93,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,100,98,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,59,32,98,32,33,61,61,32,99,59,32,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,98,46,74,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,69,120,112,101,99,116,101,100,32,110,117,108,108,32,111,114,32,105,110,115,116,97,110,99,101,32,111,102,32,36,123,99,46,110,97,109,101,125,44,32,103,111,116,32,97,110,32,105,110,115,116,97,110,99,101,32,111,102,32,36,123,98,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,98,46,74,97,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,98,46,122,97,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,101,98,40,97,44,32,98,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,110,117,108,108,32,61,61,61,32,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,77,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,110,117,108,108,32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,33,98,46,116,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,112,97,115,115,32,34,36,123,102,98,40,98,41,125,34,32,97,115,32,97,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,98,46,116,97,46,118,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,112,97,115,115,32,100,101,108,101,116,101,100,32,111,98,106,101,99,116,32,97,115,32,97,32,112,111,105,110,116,101,114,32,111,102,32,116,121,112,101,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,100,98,40,98,46,116,97,46,118,97,44,32,98,46,116,97,46,119,97,46,117,97,44,32,116,104,105,115,46,117,97,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,103,98,40,97,44,32,98,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,110,117,108,108,32,61,61,61,32,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,77,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,110,117,108,108,32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,76,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,116,104,105,115,46,78,97,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,110,117,108,108,32,33,61,61,32,97,32,38,38,32,97,46,112,117,115,104,40,116,104,105,115,46,68,97,44,32,99,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,33,98,32,124,124,32,33,98,46,116,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,112,97,115,115,32,34,36,123,102,98,40,98,41,125,34,32,97,115,32,97,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,98,46,116,97,46,118,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,112,97,115,115,32,100,101,108,101,116,101,100,32,111,98,106,101,99,116,32,97,115,32,97,32,112,111,105,110,116,101,114,32,111,102,32,116,121,112,101,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,75,97,32,38,38,32,98,46,116,97,46,119,97,46,75,97,41,10,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,10,32,32,32,32,32,32,32,32,32,32,32,32,96,67,97,110,110,111,116,32,99,111,110,118,101,114,116,32,97,114,103,117,109,101,110,116,32,111,102,32,116,121,112,101,32,36,123,98,46,116,97,46,65,97,32,63,32,98,46,116,97,46,65,97,46,110,97,109,101,32,58,32,98,46,116,97,46,119,97,46,110,97,109,101,125,32,116,111,32,112,97,114,97,109,101,116,101,114,32,116,121,112,101,32,36,123,116,104,105,115,46,110,97,109,101,125,96,10,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,99,32,61,32,100,98,40,98,46,116,97,46,118,97,44,32,98,46,116,97,46,119,97,46,117,97,44,32,116,104,105,115,46,117,97,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,76,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,98,46,116,97,46,121,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,34,80,97,115,115,105,110,103,32,114,97,119,32,112,111,105,110,116,101,114,32,116,111,32,115,109,97,114,116,32,112,111,105,110,116,101,114,32,105,115,32,105,108,108,101,103,97,108,34,41,59,10,32,32,32,32,32,32,32,32,32,32,115,119,105,116,99,104,32,40,116,104,105,115,46,104,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,48,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,98,46,116,97,46,65,97,32,61,61,61,32,116,104,105,115,41,32,99,32,61,32,98,46,116,97,46,121,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,96,67,97,110,110,111,116,32,99,111,110,118,101,114,116,32,97,114,103,117,109,101,110,116,32,111,102,32,116,121,112,101,32,36,123,98,46,116,97,46,65,97,32,63,32,98,46,116,97,46,65,97,46,110,97,109,101,32,58,32,98,46,116,97,46,119,97,46,110,97,109,101,125,32,116,111,32,112,97,114,97,109,101,116,101,114,32,116,121,112,101,32,36,123,116,104,105,115,46,110,97,109,101,125,96,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,49,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,32,61,32,98,46,116,97,46,121,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,50,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,98,46,116,97,46,65,97,32,61,61,61,32,116,104,105,115,41,32,99,32,61,32,98,46,116,97,46,121,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,98,46,99,108,111,110,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,32,61,32,116,104,105,115,46,99,98,40,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,104,98,40,40,41,32,61,62,32,100,91,34,100,101,108,101,116,101,34,93,40,41,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,117,108,108,32,33,61,61,32,97,32,38,38,32,97,46,112,117,115,104,40,116,104,105,115,46,68,97,44,32,99,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,100,101,102,97,117,108,116,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,34,85,110,115,117,112,112,111,114,116,105,110,103,32,115,104,97,114,105,110,103,32,112,111,108,105,99,121,34,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,105,98,40,97,44,32,98,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,110,117,108,108,32,61,61,61,32,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,77,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,110,117,108,108,32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,33,98,46,116,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,112,97,115,115,32,34,36,123,102,98,40,98,41,125,34,32,97,115,32,97,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,98,46,116,97,46,118,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,112,97,115,115,32,100,101,108,101,116,101,100,32,111,98,106,101,99,116,32,97,115,32,97,32,112,111,105,110,116,101,114,32,111,102,32,116,121,112,101,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,98,46,116,97,46,119,97,46,75,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,99,111,110,118,101,114,116,32,97,114,103,117,109,101,110,116,32,111,102,32,116,121,112,101,32,36,123,98,46,116,97,46,119,97,46,110,97,109,101,125,32,116,111,32,112,97,114,97,109,101,116,101,114,32,116,121,112,101,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,100,98,40,98,46,116,97,46,118,97,44,32,98,46,116,97,46,119,97,46,117,97,44,32,116,104,105,115,46,117,97,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,106,98,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,104,44,32,103,44,32,108,44,32,109,44,32,110,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,110,97,109,101,32,61,32,97,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,117,97,32,61,32,98,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,77,97,32,61,32,99,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,75,97,32,61,32,100,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,76,97,32,61,32,101,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,97,98,32,61,32,102,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,104,98,32,61,32,104,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,82,97,32,61,32,103,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,78,97,32,61,32,108,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,99,98,32,61,32,109,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,68,97,32,61,32,110,59,10,32,32,32,32,32,32,32,32,101,32,124,124,32,118,111,105,100,32,48,32,33,61,61,32,98,46,122,97,32,63,32,116,104,105,115,46,116,111,87,105,114,101,84,121,112,101,32,61,32,103,98,32,58,32,40,116,104,105,115,46,116,111,87,105,114,101,84,121,112,101,32,61,32,100,32,63,32,101,98,32,58,32,105,98,44,32,116,104,105,115,46,67,97,32,61,32,110,117,108,108,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,107,98,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,107,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,97,41,41,32,116,104,114,111,119,32,110,101,119,32,76,40,34,82,101,112,108,97,99,105,110,103,32,110,111,110,101,120,105,115,116,101,110,116,32,112,117,98,108,105,99,32,115,121,109,98,111,108,34,41,59,10,32,32,32,32,32,32,32,32,118,111,105,100,32,48,32,33,61,61,32,107,91,97,93,46,120,97,32,38,38,32,118,111,105,100,32,48,32,33,61,61,32,99,32,63,32,107,91,97,93,46,120,97,91,99,93,32,61,32,98,32,58,32,40,107,91,97,93,32,61,32,98,44,32,107,91,97,93,46,71,97,32,61,32,99,41,59,10,32,32,32,32,32,32,125,44,32,83,44,32,108,98,32,61,32,40,97,44,32,98,44,32,99,32,61,32,91,93,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,97,46,105,110,99,108,117,100,101,115,40,34,106,34,41,32,63,32,40,97,32,61,32,97,46,114,101,112,108,97,99,101,40,47,112,47,103,44,32,34,105,34,41,44,32,98,32,61,32,40,48,44,32,107,91,34,100,121,110,67,97,108,108,95,34,32,43,32,97,93,41,40,98,44,32,46,46,46,99,41,41,32,58,32,98,32,61,32,83,46,103,101,116,40,98,41,40,46,46,46,99,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,125,44,32,109,98,32,61,32,40,97,44,32,98,41,32,61,62,32,40,46,46,46,99,41,32,61,62,32,108,98,40,97,44,32,98,44,32,99,41,44,32,84,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,97,32,61,32,79,40,97,41,59,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,97,46,105,110,99,108,117,100,101,115,40,34,106,34,41,32,63,32,109,98,40,97,44,32,98,41,32,58,32,83,46,103,101,116,40,98,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,34,102,117,110,99,116,105,111,110,34,32,33,61,32,116,121,112,101,111,102,32,99,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,117,110,107,110,111,119,110,32,102,117,110,99,116,105,111,110,32,112,111,105,110,116,101,114,32,119,105,116,104,32,115,105,103,110,97,116,117,114,101,32,36,123,97,125,58,32,36,123,98,125,96,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,125,44,32,110,98,44,32,112,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,97,32,61,32,111,98,40,97,41,59,10,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,79,40,97,41,59,10,32,32,32,32,32,32,32,32,85,40,97,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,125,44,32,113,98,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,99,40,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,101,91,102,93,32,124,124,32,75,91,102,93,32,124,124,32,40,77,97,91,102,93,32,63,32,77,97,91,102,93,46,102,111,114,69,97,99,104,40,99,41,32,58,32,40,100,46,112,117,115,104,40,102,41,44,32,101,91,102,93,32,61,32,116,114,117,101,41,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,91,93,44,32,101,32,61,32,123,125,59,10,32,32,32,32,32,32,32,32,98,46,102,111,114,69,97,99,104,40,99,41,59,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,110,98,40,96,36,123,97,125,58,32,96,32,43,32,100,46,109,97,112,40,112,98,41,46,106,111,105,110,40,91,34,44,32,34,93,41,41,59,10,32,32,32,32,32,32,125,44,32,114,98,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,99,32,61,32,91,93,44,32,100,32,61,32,48,59,32,100,32,60,32,97,59,32,100,43,43,41,32,99,46,112,117,115,104,40,68,91,98,32,43,32,52,32,42,32,100,32,62,62,32,50,93,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,115,98,40,97,41,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,98,32,61,32,49,59,32,98,32,60,32,97,46,108,101,110,103,116,104,59,32,43,43,98,41,32,105,102,32,40,110,117,108,108,32,33,61,61,32,97,91,98,93,32,38,38,32,118,111,105,100,32,48,32,61,61,61,32,97,91,98,93,46,67,97,41,32,114,101,116,117,114,110,32,116,114,117,101,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,116,98,40,97,44,32,98,44,32,99,44,32,100,44,32,101,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,98,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,32,32,105,102,32,40,50,32,62,32,102,41,32,116,104,114,111,119,32,110,101,119,32,80,40,34,97,114,103,84,121,112,101,115,32,97,114,114,97,121,32,115,105,122,101,32,109,105,115,109,97,116,99,104,33,32,77,117,115,116,32,97,116,32,108,101,97,115,116,32,103,101,116,32,114,101,116,117,114,110,32,118,97,108,117,101,32,97,110,100,32,39,116,104,105,115,39,32,116,121,112,101,115,33,34,41,59,10,32,32,32,32,32,32,32,32,118,97,114,32,104,32,61,32,110,117,108,108,32,33,61,61,32,98,91,49,93,32,38,38,32,110,117,108,108,32,33,61,61,32,99,44,32,103,32,61,32,115,98,40,98,41,44,32,108,32,61,32,34,118,111,105,100,34,32,33,61,61,32,98,91,48,93,46,110,97,109,101,44,32,109,32,61,32,102,32,45,32,50,44,32,110,32,61,32,65,114,114,97,121,40,109,41,44,32,113,32,61,32,91,93,44,32,114,32,61,32,91,93,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,82,40,97,44,32,102,117,110,99,116,105,111,110,40,46,46,46,65,41,32,123,10,32,32,32,32,32,32,32,32,32,32,114,46,108,101,110,103,116,104,32,61,32,48,59,10,32,32,32,32,32,32,32,32,32,32,113,46,108,101,110,103,116,104,32,61,32,104,32,63,32,50,32,58,32,49,59,10,32,32,32,32,32,32,32,32,32,32,113,91,48,93,32,61,32,101,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,104,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,117,32,61,32,98,91,49,93,46,116,111,87,105,114,101,84,121,112,101,40,114,44,32,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,113,91,49,93,32,61,32,117,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,118,32,61,32,48,59,32,118,32,60,32,109,59,32,43,43,118,41,32,110,91,118,93,32,61,32,98,91,118,32,43,32,50,93,46,116,111,87,105,114,101,84,121,112,101,40,114,44,32,65,91,118,93,41,44,32,113,46,112,117,115,104,40,110,91,118,93,41,59,10,32,32,32,32,32,32,32,32,32,32,65,32,61,32,100,40,46,46,46,113,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,103,41,32,76,97,40,114,41,59,10,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,32,61,32,104,32,63,32,49,32,58,32,50,59,32,118,32,60,32,98,46,108,101,110,103,116,104,59,32,118,43,43,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,69,32,61,32,49,32,61,61,61,32,118,32,63,32,117,32,58,32,110,91,118,32,45,32,50,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,117,108,108,32,33,61,61,32,98,91,118,93,46,67,97,32,38,38,32,98,91,118,93,46,67,97,40,69,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,117,32,61,32,108,32,63,32,98,91,48,93,46,102,114,111,109,87,105,114,101,84,121,112,101,40,65,41,32,58,32,118,111,105,100,32,48,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,117,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,117,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,97,32,61,32,97,46,116,114,105,109,40,41,59,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,98,32,61,32,97,46,105,110,100,101,120,79,102,40,34,40,34,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,45,49,32,33,61,61,32,98,32,63,32,97,46,115,117,98,115,116,114,40,48,44,32,98,41,32,58,32,97,59,10,32,32,32,32,32,32,125,44,32,118,98,32,61,32,91,93,44,32,86,32,61,32,91,93,44,32,120,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,57,32,60,32,97,32,38,38,32,48,32,61,61,61,32,45,45,86,91,97,32,43,32,49,93,32,38,38,32,40,86,91,97,93,32,61,32,118,111,105,100,32,48,44,32,118,98,46,112,117,115,104,40,97,41,41,59,10,32,32,32,32,32,32,125,44,32,121,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,34,67,97,110,110,111,116,32,117,115,101,32,100,101,108,101,116,101,100,32,118,97,108,46,32,104,97,110,100,108,101,32,61,32,34,32,43,32,97,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,86,91,97,93,59,10,32,32,32,32,32,32,125,44,32,104,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,115,119,105,116,99,104,32,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,118,111,105,100,32,48,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,50,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,110,117,108,108,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,52,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,116,114,117,101,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,54,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,102,97,108,115,101,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,56,59,10,32,32,32,32,32,32,32,32,32,32,100,101,102,97,117,108,116,58,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,98,32,61,32,118,98,46,112,111,112,40,41,32,124,124,32,86,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,32,32,32,32,32,32,86,91,98,93,32,61,32,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,86,91,98,32,43,32,49,93,32,61,32,49,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,122,98,32,61,32,123,10,32,32,32,32,32,32,32,32,110,97,109,101,58,32,34,101,109,115,99,114,105,112,116,101,110,58,58,118,97,108,34,44,10,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,121,98,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,120,98,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,116,111,87,105,114,101,84,121,112,101,58,32,40,97,44,32,98,41,32,61,62,32,104,98,40,98,41,44,10,32,32,32,32,32,32,32,32,66,97,58,32,56,44,10,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,73,44,10,32,32,32,32,32,32,32,32,67,97,58,32,110,117,108,108,10,32,32,32,32,32,32,125,44,32,65,98,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,115,119,105,116,99,104,32,40,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,49,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,32,63,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,119,91,100,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,32,58,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,120,91,100,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,50,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,32,63,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,121,91,100,32,62,62,32,49,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,32,58,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,122,91,100,32,62,62,32,49,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,52,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,32,63,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,67,91,100,32,62,62,32,50,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,32,58,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,68,91,100,32,62,62,32,50,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,100,101,102,97,117,108,116,58,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,84,121,112,101,69,114,114,111,114,40,96,105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,32,119,105,100,116,104,32,40,36,123,98,125,41,58,32,36,123,97,125,96,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,66,98,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,75,91,97,93,59,10,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,99,41,32,116,104,114,111,119,32,97,32,61,32,96,36,123,98,125,32,104,97,115,32,117,110,107,110,111,119,110,32,116,121,112,101,32,36,123,112,98,40,97,41,125,96,44,32,110,101,119,32,80,40,97,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,125,44,32,102,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,110,117,108,108,32,61,61,61,32,97,41,32,114,101,116,117,114,110,32,34,110,117,108,108,34,59,10,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,116,121,112,101,111,102,32,97,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,111,98,106,101,99,116,34,32,61,61,61,32,98,32,124,124,32,34,97,114,114,97,121,34,32,61,61,61,32,98,32,124,124,32,34,102,117,110,99,116,105,111,110,34,32,61,61,61,32,98,32,63,32,97,46,116,111,83,116,114,105,110,103,40,41,32,58,32,34,34,32,43,32,97,59,10,32,32,32,32,32,32,125,44,32,67,98,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,115,119,105,116,99,104,32,40,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,52,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,117,110,99,116,105,111,110,40,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,110,97,91,99,32,62,62,32,50,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,56,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,117,110,99,116,105,111,110,40,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,111,97,91,99,32,62,62,32,51,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,100,101,102,97,117,108,116,58,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,84,121,112,101,69,114,114,111,114,40,96,105,110,118,97,108,105,100,32,102,108,111,97,116,32,119,105,100,116,104,32,40,36,123,98,125,41,58,32,36,123,97,125,96,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,68,98,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,115,119,105,116,99,104,32,40,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,49,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,32,63,32,40,100,41,32,61,62,32,119,91,100,93,32,58,32,40,100,41,32,61,62,32,120,91,100,93,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,50,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,32,63,32,40,100,41,32,61,62,32,121,91,100,32,62,62,32,49,93,32,58,32,40,100,41,32,61,62,32,122,91,100,32,62,62,32,49,93,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,52,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,32,63,32,40,100,41,32,61,62,32,67,91,100,32,62,62,32,50,93,32,58,32,40,100,41,32,61,62,32,68,91,100,32,62,62,32,50,93,59,10,32,32,32,32,32,32,32,32,32,32,100,101,102,97,117,108,116,58,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,84,121,112,101,69,114,114,111,114,40,96,105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,32,119,105,100,116,104,32,40,36,123,98,125,41,58,32,36,123,97,125,96,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,69,98,32,61,32,79,98,106,101,99,116,46,97,115,115,105,103,110,40,123,32,111,112,116,105,111,110,97,108,58,32,116,114,117,101,32,125,44,32,122,98,41,44,32,70,98,32,61,32,34,117,110,100,101,102,105,110,101,100,34,32,33,61,32,116,121,112,101,111,102,32,84,101,120,116,68,101,99,111,100,101,114,32,63,32,110,101,119,32,84,101,120,116,68,101,99,111,100,101,114,40,34,117,116,102,45,49,54,108,101,34,41,32,58,32,118,111,105,100,32,48,44,32,71,98,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,97,32,62,62,32,49,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,100,32,61,32,99,32,43,32,98,32,47,32,50,59,32,33,40,99,32,62,61,32,100,41,32,38,38,32,122,91,99,93,59,32,41,32,43,43,99,59,10,32,32,32,32,32,32,32,32,99,32,60,60,61,32,49,59,10,32,32,32,32,32,32,32,32,105,102,32,40,51,50,32,60,32,99,32,45,32,97,32,38,38,32,70,98,41,32,114,101,116,117,114,110,32,70,98,46,100,101,99,111,100,101,40,120,46,115,117,98,97,114,114,97,121,40,97,44,32,99,41,41,59,10,32,32,32,32,32,32,32,32,99,32,61,32,34,34,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,100,32,61,32,48,59,32,33,40,100,32,62,61,32,98,32,47,32,50,41,59,32,43,43,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,121,91,97,32,43,32,50,32,42,32,100,32,62,62,32,49,93,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,48,32,61,61,32,101,41,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,99,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,101,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,125,44,32,72,98,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,99,32,33,61,32,110,117,108,108,32,63,32,99,32,58,32,99,32,61,32,50,49,52,55,52,56,51,54,52,55,59,10,32,32,32,32,32,32,32,32,105,102,32,40,50,32,62,32,99,41,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,99,32,45,61,32,50,59,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,98,59,10,32,32,32,32,32,32,32,32,99,32,61,32,99,32,60,32,50,32,42,32,97,46,108,101,110,103,116,104,32,63,32,99,32,47,32,50,32,58,32,97,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,101,32,61,32,48,59,32,101,32,60,32,99,59,32,43,43,101,41,32,121,91,98,32,62,62,32,49,93,32,61,32,97,46,99,104,97,114,67,111,100,101,65,116,40,101,41,44,32,98,32,43,61,32,50,59,10,32,32,32,32,32,32,32,32,121,91,98,32,62,62,32,49,93,32,61,32,48,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,32,45,32,100,59,10,32,32,32,32,32,32,125,44,32,73,98,32,61,32,40,97,41,32,61,62,32,50,32,42,32,97,46,108,101,110,103,116,104,44,32,74,98,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,99,32,61,32,48,44,32,100,32,61,32,34,34,59,32,33,40,99,32,62,61,32,98,32,47,32,52,41,59,32,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,67,91,97,32,43,32,52,32,42,32,99,32,62,62,32,50,93,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,48,32,61,61,32,101,41,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,43,43,99,59,10,32,32,32,32,32,32,32,32,32,32,54,53,53,51,54,32,60,61,32,101,32,63,32,40,101,32,45,61,32,54,53,53,51,54,44,32,100,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,53,53,50,57,54,32,124,32,101,32,62,62,32,49,48,44,32,53,54,51,50,48,32,124,32,101,32,38,32,49,48,50,51,41,41,32,58,32,100,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,101,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,100,59,10,32,32,32,32,32,32,125,44,32,75,98,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,99,32,33,61,32,110,117,108,108,32,63,32,99,32,58,32,99,32,61,32,50,49,52,55,52,56,51,54,52,55,59,10,32,32,32,32,32,32,32,32,105,102,32,40,52,32,62,32,99,41,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,98,59,10,32,32,32,32,32,32,32,32,99,32,61,32,100,32,43,32,99,32,45,32,52,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,101,32,61,32,48,59,32,101,32,60,32,97,46,108,101,110,103,116,104,59,32,43,43,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,97,46,99,104,97,114,67,111,100,101,65,116,40,101,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,53,53,50,57,54,32,60,61,32,102,32,38,38,32,53,55,51,52,51,32,62,61,32,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,104,32,61,32,97,46,99,104,97,114,67,111,100,101,65,116,40,43,43,101,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,102,32,61,32,54,53,53,51,54,32,43,32,40,40,102,32,38,32,49,48,50,51,41,32,60,60,32,49,48,41,32,124,32,104,32,38,32,49,48,50,51,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,67,91,98,32,62,62,32,50,93,32,61,32,102,59,10,32,32,32,32,32,32,32,32,32,32,98,32,43,61,32,52,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,98,32,43,32,52,32,62,32,99,41,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,67,91,98,32,62,62,32,50,93,32,61,32,48,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,32,45,32,100,59,10,32,32,32,32,32,32,125,44,32,76,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,98,32,61,32,48,44,32,99,32,61,32,48,59,32,99,32,60,32,97,46,108,101,110,103,116,104,59,32,43,43,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,97,46,99,104,97,114,67,111,100,101,65,116,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,53,53,50,57,54,32,60,61,32,100,32,38,38,32,53,55,51,52,51,32,62,61,32,100,32,38,38,32,43,43,99,59,10,32,32,32,32,32,32,32,32,32,32,98,32,43,61,32,52,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,125,44,32,77,98,32,61,32,48,44,32,78,98,32,61,32,91,93,44,32,79,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,78,98,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,32,32,78,98,46,112,117,115,104,40,97,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,125,44,32,80,98,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,99,32,61,32,65,114,114,97,121,40,97,41,44,32,100,32,61,32,48,59,32,100,32,60,32,97,59,32,43,43,100,41,32,99,91,100,93,32,61,32,66,98,40,68,91,98,32,43,32,52,32,42,32,100,32,62,62,32,50,93,44,32,34,112,97,114,97,109,101,116,101,114,32,34,32,43,32,100,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,125,44,32,81,98,32,61,32,82,101,102,108,101,99,116,46,99,111,110,115,116,114,117,99,116,44,32,82,98,32,61,32,123,125,44,32,83,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,40,97,32,105,110,115,116,97,110,99,101,111,102,32,67,97,32,124,124,32,34,117,110,119,105,110,100,34,32,61,61,32,97,41,41,32,116,104,114,111,119,32,97,59,10,32,32,32,32,32,32,125,44,32,84,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,95,97,50,59,10,32,32,32,32,32,32,32,32,109,97,32,61,32,97,59,10,32,32,32,32,32,32,32,32,69,97,32,124,124,32,48,32,60,32,77,98,32,124,124,32,40,40,95,97,50,32,61,32,107,46,111,110,69,120,105,116,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,50,46,99,97,108,108,40,107,44,32,97,41,44,32,108,97,32,61,32,116,114,117,101,41,59,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,67,97,40,97,41,59,10,32,32,32,32,32,32,125,44,32,85,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,108,97,41,10,32,32,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,97,40,41,44,32,33,40,69,97,32,124,124,32,48,32,60,32,77,98,41,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,109,97,32,61,32,97,32,61,32,109,97,44,32,84,98,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,83,98,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,83,98,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,86,98,32,61,32,123,125,44,32,88,98,32,61,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,87,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,97,32,61,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,85,83,69,82,58,32,34,119,101,98,95,117,115,101,114,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,76,79,71,78,65,77,69,58,32,34,119,101,98,95,117,115,101,114,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,80,65,84,72,58,32,34,47,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,80,87,68,58,32,34,47,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,72,79,77,69,58,32,34,47,104,111,109,101,47,119,101,98,95,117,115,101,114,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,76,65,78,71,58,32,40,34,111,98,106,101,99,116,34,32,61,61,32,116,121,112,101,111,102,32,110,97,118,105,103,97,116,111,114,32,38,38,32,110,97,118,105,103,97,116,111,114,46,108,97,110,103,117,97,103,101,115,32,38,38,32,110,97,118,105,103,97,116,111,114,46,108,97,110,103,117,97,103,101,115,91,48,93,32,124,124,32,34,67,34,41,46,114,101,112,108,97,99,101,40,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,45,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,95,34,10,32,32,32,32,32,32,32,32,32,32,32,32,41,32,43,32,34,46,85,84,70,45,56,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,95,58,32,104,97,32,124,124,32,34,46,47,116,104,105,115,46,112,114,111,103,114,97,109,34,10,32,32,32,32,32,32,32,32,32,32,125,44,32,98,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,98,32,105,110,32,86,98,41,32,118,111,105,100,32,48,32,61,61,61,32,86,98,91,98,93,32,63,32,100,101,108,101,116,101,32,97,91,98,93,32,58,32,97,91,98,93,32,61,32,86,98,91,98,93,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,98,32,105,110,32,97,41,32,99,46,112,117,115,104,40,96,36,123,98,125,61,36,123,97,91,98,93,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,87,98,32,61,32,99,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,87,98,59,10,32,32,32,32,32,32,125,44,32,87,98,44,32,89,98,32,61,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,34,111,98,106,101,99,116,34,32,61,61,32,116,121,112,101,111,102,32,99,114,121,112,116,111,32,38,38,32,34,102,117,110,99,116,105,111,110,34,32,61,61,32,116,121,112,101,111,102,32,99,114,121,112,116,111,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,115,41,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,40,97,41,32,61,62,32,99,114,121,112,116,111,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,115,40,97,41,59,10,32,32,32,32,32,32,32,32,118,97,40,34,105,110,105,116,82,97,110,100,111,109,68,101,118,105,99,101,34,41,59,10,32,32,32,32,32,32,125,44,32,90,98,32,61,32,40,97,41,32,61,62,32,40,90,98,32,61,32,89,98,40,41,41,40,97,41,59,10,32,32,32,32,32,32,76,32,61,32,107,46,73,110,116,101,114,110,97,108,69,114,114,111,114,32,61,32,99,108,97,115,115,32,101,120,116,101,110,100,115,32,69,114,114,111,114,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,115,117,112,101,114,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,110,97,109,101,32,61,32,34,73,110,116,101,114,110,97,108,69,114,114,111,114,34,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,36,98,32,61,32,65,114,114,97,121,40,50,53,54,41,44,32,97,99,32,61,32,48,59,32,50,53,54,32,62,32,97,99,59,32,43,43,97,99,41,32,36,98,91,97,99,93,32,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,97,99,41,59,10,32,32,32,32,32,32,78,97,32,61,32,36,98,59,10,32,32,32,32,32,32,80,32,61,32,107,46,66,105,110,100,105,110,103,69,114,114,111,114,32,61,32,99,108,97,115,115,32,101,120,116,101,110,100,115,32,69,114,114,111,114,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,115,117,112,101,114,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,110,97,109,101,32,61,32,34,66,105,110,100,105,110,103,69,114,114,111,114,34,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,79,98,106,101,99,116,46,97,115,115,105,103,110,40,90,97,46,112,114,111,116,111,116,121,112,101,44,32,123,10,32,32,32,32,32,32,32,32,105,115,65,108,105,97,115,79,102,58,32,102,117,110,99,116,105,111,110,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,40,116,104,105,115,32,105,110,115,116,97,110,99,101,111,102,32,90,97,32,38,38,32,97,32,105,110,115,116,97,110,99,101,111,102,32,90,97,41,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,116,104,105,115,46,116,97,46,119,97,46,117,97,44,32,99,32,61,32,116,104,105,115,46,116,97,46,118,97,59,10,32,32,32,32,32,32,32,32,32,32,97,46,116,97,32,61,32,97,46,116,97,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,97,46,116,97,46,119,97,46,117,97,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,97,32,61,32,97,46,116,97,46,118,97,59,32,98,46,122,97,59,32,41,32,99,32,61,32,98,46,74,97,40,99,41,44,32,98,32,61,32,98,46,122,97,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,59,32,100,46,122,97,59,32,41,32,97,32,61,32,100,46,74,97,40,97,41,44,32,100,32,61,32,100,46,122,97,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,32,61,61,61,32,100,32,38,38,32,99,32,61,61,61,32,97,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,99,108,111,110,101,58,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,116,97,46,118,97,32,124,124,32,81,97,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,116,97,46,73,97,41,32,114,101,116,117,114,110,32,116,104,105,115,46,116,97,46,99,111,117,110,116,46,118,97,108,117,101,32,43,61,32,49,44,32,116,104,105,115,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,97,32,61,32,81,44,32,98,32,61,32,79,98,106,101,99,116,44,32,99,32,61,32,98,46,99,114,101,97,116,101,44,32,100,32,61,32,79,98,106,101,99,116,46,103,101,116,80,114,111,116,111,116,121,112,101,79,102,40,116,104,105,115,41,44,32,101,32,61,32,116,104,105,115,46,116,97,59,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,97,40,10,32,32,32,32,32,32,32,32,32,32,32,32,99,46,99,97,108,108,40,98,44,32,100,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,97,58,32,123,32,118,97,108,117,101,58,32,123,32,99,111,117,110,116,58,32,101,46,99,111,117,110,116,44,32,72,97,58,32,101,46,72,97,44,32,73,97,58,32,101,46,73,97,44,32,118,97,58,32,101,46,118,97,44,32,119,97,58,32,101,46,119,97,44,32,121,97,58,32,101,46,121,97,44,32,65,97,58,32,101,46,65,97,32,125,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,10,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,97,46,116,97,46,99,111,117,110,116,46,118,97,108,117,101,32,43,61,32,49,59,10,32,32,32,32,32,32,32,32,32,32,97,46,116,97,46,72,97,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,91,34,100,101,108,101,116,101,34,93,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,116,97,46,118,97,32,124,124,32,81,97,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,116,97,46,72,97,32,38,38,32,33,116,104,105,115,46,116,97,46,73,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,34,79,98,106,101,99,116,32,97,108,114,101,97,100,121,32,115,99,104,101,100,117,108,101,100,32,102,111,114,32,100,101,108,101,116,105,111,110,34,41,59,10,32,32,32,32,32,32,32,32,32,32,83,97,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,97,32,61,32,116,104,105,115,46,116,97,59,10,32,32,32,32,32,32,32,32,32,32,45,45,97,46,99,111,117,110,116,46,118,97,108,117,101,59,10,32,32,32,32,32,32,32,32,32,32,48,32,61,61,61,32,97,46,99,111,117,110,116,46,118,97,108,117,101,32,38,38,32,40,97,46,121,97,32,63,32,97,46,65,97,46,68,97,40,97,46,121,97,41,32,58,32,97,46,119,97,46,117,97,46,68,97,40,97,46,118,97,41,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,116,97,46,73,97,32,124,124,32,40,116,104,105,115,46,116,97,46,121,97,32,61,32,118,111,105,100,32,48,44,32,116,104,105,115,46,116,97,46,118,97,32,61,32,118,111,105,100,32,48,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,105,115,68,101,108,101,116,101,100,58,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,33,116,104,105,115,46,116,97,46,118,97,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,100,101,108,101,116,101,76,97,116,101,114,58,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,116,97,46,118,97,32,124,124,32,81,97,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,116,97,46,72,97,32,38,38,32,33,116,104,105,115,46,116,97,46,73,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,34,79,98,106,101,99,116,32,97,108,114,101,97,100,121,32,115,99,104,101,100,117,108,101,100,32,102,111,114,32,100,101,108,101,116,105,111,110,34,41,59,10,32,32,32,32,32,32,32,32,32,32,89,97,46,112,117,115,104,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,116,97,46,72,97,32,61,32,116,114,117,101,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,79,98,106,101,99,116,46,97,115,115,105,103,110,40,106,98,46,112,114,111,116,111,116,121,112,101,44,32,123,10,32,32,32,32,32,32,32,32,87,97,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,82,97,32,38,38,32,40,97,32,61,32,116,104,105,115,46,82,97,40,97,41,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,80,97,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,95,97,50,59,10,32,32,32,32,32,32,32,32,32,32,40,95,97,50,32,61,32,116,104,105,115,46,68,97,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,50,46,99,97,108,108,40,116,104,105,115,44,32,97,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,66,97,58,32,56,44,10,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,73,44,10,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,102,117,110,99,116,105,111,110,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,98,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,76,97,32,63,32,88,97,40,116,104,105,115,46,117,97,46,70,97,44,32,123,32,119,97,58,32,116,104,105,115,46,97,98,44,32,118,97,58,32,99,44,32,65,97,58,32,116,104,105,115,44,32,121,97,58,32,97,32,125,41,32,58,32,88,97,40,116,104,105,115,46,117,97,46,70,97,44,32,123,32,119,97,58,32,116,104,105,115,44,32,118,97,58,32,97,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,116,104,105,115,46,87,97,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,99,41,32,114,101,116,117,114,110,32,116,104,105,115,46,80,97,40,97,41,44,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,87,97,40,116,104,105,115,46,117,97,44,32,99,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,33,61,61,32,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,48,32,61,61,61,32,100,46,116,97,46,99,111,117,110,116,46,118,97,108,117,101,41,32,114,101,116,117,114,110,32,100,46,116,97,46,118,97,32,61,32,99,44,32,100,46,116,97,46,121,97,32,61,32,97,44,32,100,46,99,108,111,110,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,100,32,61,32,100,46,99,108,111,110,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,80,97,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,100,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,100,32,61,32,116,104,105,115,46,117,97,46,86,97,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,100,32,61,32,85,97,91,100,93,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,100,41,32,114,101,116,117,114,110,32,98,46,99,97,108,108,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,100,32,61,32,116,104,105,115,46,75,97,32,63,32,100,46,83,97,32,58,32,100,46,112,111,105,110,116,101,114,84,121,112,101,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,84,97,40,99,44,32,116,104,105,115,46,117,97,44,32,100,46,117,97,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,117,108,108,32,61,61,61,32,101,32,63,32,98,46,99,97,108,108,40,116,104,105,115,41,32,58,32,116,104,105,115,46,76,97,32,63,32,88,97,40,100,46,117,97,46,70,97,44,32,123,32,119,97,58,32,100,44,32,118,97,58,32,101,44,32,65,97,58,32,116,104,105,115,44,32,121,97,58,32,97,32,125,41,32,58,32,88,97,40,100,46,117,97,46,70,97,44,32,123,32,119,97,58,32,100,44,32,118,97,58,32,101,32,125,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,110,98,32,61,32,107,46,85,110,98,111,117,110,100,84,121,112,101,69,114,114,111,114,32,61,32,40,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,82,40,98,44,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,110,97,109,101,32,61,32,98,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,109,101,115,115,97,103,101,32,61,32,100,59,10,32,32,32,32,32,32,32,32,32,32,100,32,61,32,69,114,114,111,114,40,100,41,46,115,116,97,99,107,59,10,32,32,32,32,32,32,32,32,32,32,118,111,105,100,32,48,32,33,61,61,32,100,32,38,38,32,40,116,104,105,115,46,115,116,97,99,107,32,61,32,116,104,105,115,46,116,111,83,116,114,105,110,103,40,41,32,43,32,34,92,110,34,32,43,32,100,46,114,101,112,108,97,99,101,40,47,94,69,114,114,111,114,40,58,91,94,92,110,93,42,41,63,92,110,47,44,32,34,34,41,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,46,112,114,111,116,111,116,121,112,101,32,61,32,79,98,106,101,99,116,46,99,114,101,97,116,101,40,97,46,112,114,111,116,111,116,121,112,101,41,59,10,32,32,32,32,32,32,32,32,99,46,112,114,111,116,111,116,121,112,101,46,99,111,110,115,116,114,117,99,116,111,114,32,61,32,99,59,10,32,32,32,32,32,32,32,32,99,46,112,114,111,116,111,116,121,112,101,46,116,111,83,116,114,105,110,103,32,61,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,118,111,105,100,32,48,32,61,61,61,32,116,104,105,115,46,109,101,115,115,97,103,101,32,63,32,116,104,105,115,46,110,97,109,101,32,58,32,96,36,123,116,104,105,115,46,110,97,109,101,125,58,32,36,123,116,104,105,115,46,109,101,115,115,97,103,101,125,96,59,10,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,125,41,40,69,114,114,111,114,44,32,34,85,110,98,111,117,110,100,84,121,112,101,69,114,114,111,114,34,41,59,10,32,32,32,32,32,32,86,46,112,117,115,104,40,48,44,32,49,44,32,118,111,105,100,32,48,44,32,49,44,32,110,117,108,108,44,32,49,44,32,116,114,117,101,44,32,49,44,32,102,97,108,115,101,44,32,49,41,59,10,32,32,32,32,32,32,107,46,99,111,117,110,116,95,101,109,118,97,108,95,104,97,110,100,108,101,115,32,61,32,40,41,32,61,62,32,86,46,108,101,110,103,116,104,32,47,32,50,32,45,32,53,32,45,32,118,98,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,118,97,114,32,109,99,32,61,32,123,10,32,32,32,32,32,32,32,32,99,58,32,40,97,44,32,98,44,32,99,44,32,100,41,32,61,62,32,118,97,40,10,32,32,32,32,32,32,32,32,32,32,96,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,36,123,97,32,63,32,71,97,40,97,41,32,58,32,34,34,125,44,32,97,116,58,32,96,32,43,32,91,98,32,63,32,98,32,63,32,71,97,40,98,41,32,58,32,34,34,32,58,32,34,117,110,107,110,111,119,110,32,102,105,108,101,110,97,109,101,34,44,32,99,44,32,100,32,63,32,100,32,63,32,71,97,40,100,41,32,58,32,34,34,32,58,32,34,117,110,107,110,111,119,110,32,102,117,110,99,116,105,111,110,34,93,10,32,32,32,32,32,32,32,32,41,44,10,32,32,32,32,32,32,32,32,109,58,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,110,101,119,32,72,97,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,68,91,100,46,118,97,32,43,32,49,54,32,62,62,32,50,93,32,61,32,48,59,10,32,32,32,32,32,32,32,32,32,32,68,91,100,46,118,97,32,43,32,52,32,62,62,32,50,93,32,61,32,98,59,10,32,32,32,32,32,32,32,32,32,32,68,91,100,46,118,97,32,43,32,56,32,62,62,32,50,93,32,61,32,99,59,10,32,32,32,32,32,32,32,32,32,32,73,97,32,61,32,97,59,10,32,32,32,32,32,32,32,32,32,32,74,97,43,43,59,10,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,73,97,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,77,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,74,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,75,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,79,58,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,76,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,81,58,32,40,41,32,61,62,32,118,97,40,34,34,41,44,10,32,32,32,32,32,32,32,32,118,58,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,75,97,91,97,93,59,10,32,32,32,32,32,32,32,32,32,32,100,101,108,101,116,101,32,75,97,91,97,93,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,98,46,78,97,44,32,100,32,61,32,98,46,68,97,44,32,101,32,61,32,98,46,81,97,44,32,102,32,61,32,101,46,109,97,112,40,40,104,41,32,61,62,32,104,46,90,97,41,46,99,111,110,99,97,116,40,101,46,109,97,112,40,40,104,41,32,61,62,32,104,46,102,98,41,41,59,10,32,32,32,32,32,32,32,32,32,32,78,40,91,97,93,44,32,102,44,32,40,104,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,103,32,61,32,123,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,101,46,102,111,114,69,97,99,104,40,40,108,44,32,109,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,110,32,61,32,104,91,109,93,44,32,113,32,61,32,108,46,88,97,44,32,114,32,61,32,108,46,89,97,44,32,65,32,61,32,104,91,109,32,43,32,101,46,108,101,110,103,116,104,93,44,32,117,32,61,32,108,46,101,98,44,32,118,32,61,32,108,46,103,98,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,103,91,108,46,85,97,93,32,61,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,97,100,58,32,40,69,41,32,61,62,32,110,46,102,114,111,109,87,105,114,101,84,121,112,101,40,113,40,114,44,32,69,41,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,119,114,105,116,101,58,32,40,69,44,32,99,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,66,32,61,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,117,40,118,44,32,69,44,32,65,46,116,111,87,105,114,101,84,121,112,101,40,66,44,32,99,97,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,76,97,40,66,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,58,32,98,46,110,97,109,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,40,108,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,109,32,61,32,123,125,44,32,110,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,110,32,105,110,32,103,41,32,109,91,110,93,32,61,32,103,91,110,93,46,114,101,97,100,40,108,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,40,108,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,109,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,111,87,105,114,101,84,121,112,101,58,32,40,108,44,32,109,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,110,32,105,110,32,103,41,32,105,102,32,40,33,40,110,32,105,110,32,109,41,41,32,116,104,114,111,119,32,110,101,119,32,84,121,112,101,69,114,114,111,114,40,96,77,105,115,115,105,110,103,32,102,105,101,108,100,58,32,34,36,123,110,125,34,96,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,113,32,61,32,99,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,110,32,105,110,32,103,41,32,103,91,110,93,46,119,114,105,116,101,40,113,44,32,109,91,110,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,117,108,108,32,33,61,61,32,108,32,38,38,32,108,46,112,117,115,104,40,100,44,32,113,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,113,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,66,97,58,32,56,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,73,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,67,97,58,32,100,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,93,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,67,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,86,58,32,40,97,44,32,98,44,32,99,44,32,100,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,58,32,98,44,10,32,32,32,32,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,102,117,110,99,116,105,111,110,40,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,33,33,101,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,116,111,87,105,114,101,84,121,112,101,58,32,102,117,110,99,116,105,111,110,40,101,44,32,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,32,63,32,99,32,58,32,100,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,66,97,58,32,56,44,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,102,117,110,99,116,105,111,110,40,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,120,91,101,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,67,97,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,114,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,104,44,32,103,44,32,108,44,32,109,44,32,110,44,32,113,44,32,114,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,110,32,61,32,79,40,110,41,59,10,32,32,32,32,32,32,32,32,32,32,102,32,61,32,84,40,101,44,32,102,41,59,10,32,32,32,32,32,32,32,32,32,32,103,32,38,38,32,40,103,32,61,32,84,40,104,44,32,103,41,41,59,10,32,32,32,32,32,32,32,32,32,32,109,32,38,38,32,40,109,32,61,32,84,40,108,44,32,109,41,41,59,10,32,32,32,32,32,32,32,32,32,32,114,32,61,32,84,40,113,44,32,114,41,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,65,32,61,32,98,98,40,110,41,59,10,32,32,32,32,32,32,32,32,32,32,97,98,40,65,44,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,113,98,40,96,67,97,110,110,111,116,32,99,111,110,115,116,114,117,99,116,32,36,123,110,125,32,100,117,101,32,116,111,32,117,110,98,111,117,110,100,32,116,121,112,101,115,96,44,32,91,100,93,41,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,78,40,91,97,44,32,98,44,32,99,93,44,32,100,32,63,32,91,100,93,32,58,32,91,93,44,32,40,117,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,95,97,50,59,10,32,32,32,32,32,32,32,32,32,32,32,32,117,32,61,32,117,91,48,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,118,32,61,32,117,46,117,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,69,32,61,32,118,46,70,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,69,32,61,32,90,97,46,112,114,111,116,111,116,121,112,101,59,10,32,32,32,32,32,32,32,32,32,32,32,32,117,32,61,32,82,40,110,44,32,102,117,110,99,116,105,111,110,40,46,46,46,79,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,79,98,106,101,99,116,46,103,101,116,80,114,111,116,111,116,121,112,101,79,102,40,116,104,105,115,41,32,33,61,61,32,99,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,34,85,115,101,32,39,110,101,119,39,32,116,111,32,99,111,110,115,116,114,117,99,116,32,34,32,43,32,110,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,66,46,69,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,110,32,43,32,34,32,104,97,115,32,110,111,32,97,99,99,101,115,115,105,98,108,101,32,99,111,110,115,116,114,117,99,116,111,114,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,119,98,32,61,32,66,46,69,97,91,79,97,46,108,101,110,103,116,104,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,119,98,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,96,84,114,105,101,100,32,116,111,32,105,110,118,111,107,101,32,99,116,111,114,32,111,102,32,36,123,110,125,32,119,105,116,104,32,105,110,118,97,108,105,100,32,110,117,109,98,101,114,32,111,102,32,112,97,114,97,109,101,116,101,114,115,32,40,36,123,79,97,46,108,101,110,103,116,104,125,41,32,45,32,101,120,112,101,99,116,101,100,32,40,36,123,79,98,106,101,99,116,46,107,101,121,115,40,66,46,69,97,41,46,116,111,83,116,114,105,110,103,40,41,125,41,32,112,97,114,97,109,101,116,101,114,115,32,105,110,115,116,101,97,100,33,96,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,119,98,46,97,112,112,108,121,40,116,104,105,115,44,32,79,97,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,97,32,61,32,79,98,106,101,99,116,46,99,114,101,97,116,101,40,69,44,32,123,32,99,111,110,115,116,114,117,99,116,111,114,58,32,123,32,118,97,108,117,101,58,32,117,32,125,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,117,46,112,114,111,116,111,116,121,112,101,32,61,32,99,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,66,32,61,32,110,101,119,32,99,98,40,110,44,32,117,44,32,99,97,44,32,114,44,32,118,44,32,102,44,32,103,44,32,109,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,66,46,122,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,40,95,97,50,32,61,32,40,100,97,32,61,32,66,46,122,97,41,46,79,97,41,32,33,61,32,110,117,108,108,32,63,32,95,97,50,32,58,32,100,97,46,79,97,32,61,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,66,46,122,97,46,79,97,46,112,117,115,104,40,66,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,118,32,61,32,110,101,119,32,106,98,40,110,44,32,66,44,32,116,114,117,101,44,32,102,97,108,115,101,44,32,102,97,108,115,101,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,100,97,32,61,32,110,101,119,32,106,98,40,110,32,43,32,34,42,34,44,32,66,44,32,102,97,108,115,101,44,32,102,97,108,115,101,44,32,102,97,108,115,101,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,69,32,61,32,110,101,119,32,106,98,40,110,32,43,32,34,32,99,111,110,115,116,42,34,44,32,66,44,32,102,97,108,115,101,44,32,116,114,117,101,44,32,102,97,108,115,101,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,85,97,91,97,93,32,61,32,123,32,112,111,105,110,116,101,114,84,121,112,101,58,32,100,97,44,32,83,97,58,32,69,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,107,98,40,65,44,32,117,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,118,44,32,100,97,44,32,69,93,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,113,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,104,32,61,32,114,98,40,98,44,32,99,41,59,10,32,32,32,32,32,32,32,32,32,32,101,32,61,32,84,40,100,44,32,101,41,59,10,32,32,32,32,32,32,32,32,32,32,78,40,91,93,44,32,91,97,93,44,32,40,103,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,103,32,61,32,103,91,48,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,108,32,61,32,96,99,111,110,115,116,114,117,99,116,111,114,32,36,123,103,46,110,97,109,101,125,96,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,111,105,100,32,48,32,61,61,61,32,103,46,117,97,46,69,97,32,38,38,32,40,103,46,117,97,46,69,97,32,61,32,91,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,33,61,61,32,103,46,117,97,46,69,97,91,98,32,45,32,49,93,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,96,67,97,110,110,111,116,32,114,101,103,105,115,116,101,114,32,109,117,108,116,105,112,108,101,32,99,111,110,115,116,114,117,99,116,111,114,115,32,119,105,116,104,32,105,100,101,110,116,105,99,97,108,32,110,117,109,98,101,114,32,111,102,32,112,97,114,97,109,101,116,101,114,115,32,40,36,123,98,32,45,32,49,125,41,32,102,111,114,32,99,108,97,115,115,32,39,36,123,103,46,110,97,109,101,125,39,33,32,79,118,101,114,108,111,97,100,32,114,101,115,111,108,117,116,105,111,110,32,105,115,32,99,117,114,114,101,110,116,108,121,32,111,110,108,121,32,112,101,114,102,111,114,109,101,100,32,117,115,105,110,103,32,116,104,101,32,112,97,114,97,109,101,116,101,114,32,99,111,117,110,116,44,32,110,111,116,32,97,99,116,117,97,108,32,116,121,112,101,32,105,110,102,111,33,96,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,103,46,117,97,46,69,97,91,98,32,45,32,49,93,32,61,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,113,98,40,96,67,97,110,110,111,116,32,99,111,110,115,116,114,117,99,116,32,36,123,103,46,110,97,109,101,125,32,100,117,101,32,116,111,32,117,110,98,111,117,110,100,32,116,121,112,101,115,96,44,32,104,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,78,40,91,93,44,32,104,44,32,40,109,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,109,46,115,112,108,105,99,101,40,49,44,32,48,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,103,46,117,97,46,69,97,91,98,32,45,32,49,93,32,61,32,116,98,40,108,44,32,109,44,32,110,117,108,108,44,32,101,44,32,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,102,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,104,44,32,103,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,108,32,61,32,114,98,40,99,44,32,100,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,117,98,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,102,32,61,32,84,40,101,44,32,102,41,59,10,32,32,32,32,32,32,32,32,32,32,78,40,91,93,44,32,91,97,93,44,32,40,109,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,113,98,40,96,67,97,110,110,111,116,32,99,97,108,108,32,36,123,113,125,32,100,117,101,32,116,111,32,117,110,98,111,117,110,100,32,116,121,112,101,115,96,44,32,108,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,109,32,61,32,109,91,48,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,113,32,61,32,96,36,123,109,46,110,97,109,101,125,46,36,123,98,125,96,59,10,32,32,32,32,32,32,32,32,32,32,32,32,98,46,115,116,97,114,116,115,87,105,116,104,40,34,64,64,34,41,32,38,38,32,40,98,32,61,32,83,121,109,98,111,108,91,98,46,115,117,98,115,116,114,105,110,103,40,50,41,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,103,32,38,38,32,109,46,117,97,46,98,98,46,112,117,115,104,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,114,32,61,32,109,46,117,97,46,70,97,44,32,65,32,61,32,114,91,98,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,111,105,100,32,48,32,61,61,61,32,65,32,124,124,32,118,111,105,100,32,48,32,61,61,61,32,65,46,120,97,32,38,38,32,65,46,99,108,97,115,115,78,97,109,101,32,33,61,61,32,109,46,110,97,109,101,32,38,38,32,65,46,71,97,32,61,61,61,32,99,32,45,32,50,32,63,32,40,110,46,71,97,32,61,32,99,32,45,32,50,44,32,110,46,99,108,97,115,115,78,97,109,101,32,61,32,109,46,110,97,109,101,44,32,114,91,98,93,32,61,32,110,41,32,58,32,40,36,97,40,114,44,32,98,44,32,113,41,44,32,114,91,98,93,46,120,97,91,99,32,45,32,50,93,32,61,32,110,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,78,40,91,93,44,32,108,44,32,40,117,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,117,32,61,32,116,98,40,113,44,32,117,44,32,109,44,32,102,44,32,104,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,111,105,100,32,48,32,61,61,61,32,114,91,98,93,46,120,97,32,63,32,40,117,46,71,97,32,61,32,99,32,45,32,50,44,32,114,91,98,93,32,61,32,117,41,32,58,32,114,91,98,93,46,120,97,91,99,32,45,32,50,93,32,61,32,117,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,85,58,32,40,97,41,32,61,62,32,77,40,97,44,32,122,98,41,44,10,32,32,32,32,32,32,32,32,120,58,32,40,97,44,32,98,44,32,99,44,32,100,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,101,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,101,46,118,97,108,117,101,115,32,61,32,123,125,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,58,32,98,44,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,58,32,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,102,117,110,99,116,105,111,110,40,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,99,111,110,115,116,114,117,99,116,111,114,46,118,97,108,117,101,115,91,102,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,116,111,87,105,114,101,84,121,112,101,58,32,40,102,44,32,104,41,32,61,62,32,104,46,118,97,108,117,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,66,97,58,32,56,44,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,65,98,40,98,44,32,99,44,32,100,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,67,97,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,97,98,40,98,44,32,101,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,107,58,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,66,98,40,97,44,32,34,101,110,117,109,34,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,100,46,99,111,110,115,116,114,117,99,116,111,114,59,10,32,32,32,32,32,32,32,32,32,32,100,32,61,32,79,98,106,101,99,116,46,99,114,101,97,116,101,40,100,46,99,111,110,115,116,114,117,99,116,111,114,46,112,114,111,116,111,116,121,112,101,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,108,117,101,58,32,123,32,118,97,108,117,101,58,32,99,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,58,32,123,32,118,97,108,117,101,58,32,82,40,96,36,123,100,46,110,97,109,101,125,95,36,123,98,125,96,44,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,32,125,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,97,46,118,97,108,117,101,115,91,99,93,32,61,32,100,59,10,32,32,32,32,32,32,32,32,32,32,97,91,98,93,32,61,32,100,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,122,58,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,58,32,98,44,10,32,32,32,32,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,40,100,41,32,61,62,32,100,44,10,32,32,32,32,32,32,32,32,32,32,32,32,116,111,87,105,114,101,84,121,112,101,58,32,40,100,44,32,101,41,32,61,62,32,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,66,97,58,32,56,44,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,67,98,40,98,44,32,99,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,67,97,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,117,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,104,32,61,32,114,98,40,98,44,32,99,41,59,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,79,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,117,98,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,101,32,61,32,84,40,100,44,32,101,41,59,10,32,32,32,32,32,32,32,32,32,32,97,98,40,10,32,32,32,32,32,32,32,32,32,32,32,32,97,44,10,32,32,32,32,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,113,98,40,96,67,97,110,110,111,116,32,99,97,108,108,32,36,123,97,125,32,100,117,101,32,116,111,32,117,110,98,111,117,110,100,32,116,121,112,101,115,96,44,32,104,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,98,32,45,32,49,10,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,78,40,91,93,44,32,104,44,32,40,103,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,107,98,40,97,44,32,116,98,40,97,44,32,91,103,91,48,93,44,32,110,117,108,108,93,46,99,111,110,99,97,116,40,103,46,115,108,105,99,101,40,49,41,41,44,32,110,117,108,108,44,32,101,44,32,102,41,44,32,98,32,45,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,108,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,45,49,32,61,61,61,32,101,32,38,38,32,40,101,32,61,32,52,50,57,52,57,54,55,50,57,53,41,59,10,32,32,32,32,32,32,32,32,32,32,101,32,61,32,40,103,41,32,61,62,32,103,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,48,32,61,61,61,32,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,51,50,32,45,32,56,32,42,32,99,59,10,32,32,32,32,32,32,32,32,32,32,32,32,101,32,61,32,40,103,41,32,61,62,32,103,32,60,60,32,102,32,62,62,62,32,102,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,104,32,61,32,98,46,105,110,99,108,117,100,101,115,40,34,117,110,115,105,103,110,101,100,34,41,32,63,32,102,117,110,99,116,105,111,110,40,103,44,32,108,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,108,32,62,62,62,32,48,59,10,32,32,32,32,32,32,32,32,32,32,125,32,58,32,102,117,110,99,116,105,111,110,40,103,44,32,108,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,108,59,10,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,32,110,97,109,101,58,32,98,44,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,101,44,32,116,111,87,105,114,101,84,121,112,101,58,32,104,44,32,66,97,58,32,56,44,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,68,98,40,98,44,32,99,44,32,48,32,33,61,61,32,100,41,44,32,67,97,58,32,110,117,108,108,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,104,58,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,100,40,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,101,119,32,101,40,119,46,98,117,102,102,101,114,44,32,68,91,102,32,43,32,52,32,62,62,32,50,93,44,32,68,91,102,32,62,62,32,50,93,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,91,73,110,116,56,65,114,114,97,121,44,32,85,105,110,116,56,65,114,114,97,121,44,32,73,110,116,49,54,65,114,114,97,121,44,32,85,105,110,116,49,54,65,114,114,97,121,44,32,73,110,116,51,50,65,114,114,97,121,44,32,85,105,110,116,51,50,65,114,114,97,121,44,32,70,108,111,97,116,51,50,65,114,114,97,121,44,32,70,108,111,97,116,54,52,65,114,114,97,121,93,91,98,93,59,10,32,32,32,32,32,32,32,32,32,32,99,32,61,32,79,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,32,110,97,109,101,58,32,99,44,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,100,44,32,66,97,58,32,56,44,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,100,32,125,44,32,123,32,36,97,58,32,116,114,117,101,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,116,58,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,69,98,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,36,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,104,44,32,103,44,32,108,44,32,109,44,32,110,44,32,113,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,99,32,61,32,79,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,102,32,61,32,84,40,101,44,32,102,41,59,10,32,32,32,32,32,32,32,32,32,32,103,32,61,32,84,40,104,44,32,103,41,59,10,32,32,32,32,32,32,32,32,32,32,109,32,61,32,84,40,108,44,32,109,41,59,10,32,32,32,32,32,32,32,32,32,32,113,32,61,32,84,40,110,44,32,113,41,59,10,32,32,32,32,32,32,32,32,32,32,78,40,91,97,93,44,32,91,98,93,44,32,40,114,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,114,32,61,32,114,91,48,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,110,101,119,32,106,98,40,99,44,32,114,46,117,97,44,32,102,97,108,115,101,44,32,102,97,108,115,101,44,32,116,114,117,101,44,32,114,44,32,100,44,32,102,44,32,103,44,32,109,44,32,113,41,93,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,65,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,34,115,116,100,58,58,115,116,114,105,110,103,34,32,61,61,61,32,98,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,58,32,98,44,10,32,32,32,32,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,68,91,100,32,62,62,32,50,93,44,32,102,32,61,32,100,32,43,32,52,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,99,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,104,32,61,32,102,44,32,103,32,61,32,48,59,32,103,32,60,61,32,101,59,32,43,43,103,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,108,32,61,32,102,32,43,32,103,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,103,32,61,61,32,101,32,124,124,32,48,32,61,61,32,120,91,108,93,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,104,32,61,32,104,32,63,32,71,97,40,104,44,32,108,32,45,32,104,41,32,58,32,34,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,109,41,32,118,97,114,32,109,32,61,32,104,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,109,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,48,41,44,32,109,32,43,61,32,104,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,104,32,61,32,108,32,43,32,49,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,109,32,61,32,65,114,114,97,121,40,101,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,103,32,61,32,48,59,32,103,32,60,32,101,59,32,43,43,103,41,32,109,91,103,93,32,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,120,91,102,32,43,32,103,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,109,32,61,32,109,46,106,111,105,110,40,34,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,85,40,100,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,109,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,116,111,87,105,114,101,84,121,112,101,58,32,102,117,110,99,116,105,111,110,40,100,44,32,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,32,105,110,115,116,97,110,99,101,111,102,32,65,114,114,97,121,66,117,102,102,101,114,32,38,38,32,40,101,32,61,32,110,101,119,32,85,105,110,116,56,65,114,114,97,121,40,101,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,44,32,104,32,61,32,34,115,116,114,105,110,103,34,32,61,61,32,116,121,112,101,111,102,32,101,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,40,104,32,124,124,32,101,32,105,110,115,116,97,110,99,101,111,102,32,85,105,110,116,56,65,114,114,97,121,32,124,124,32,101,32,105,110,115,116,97,110,99,101,111,102,32,85,105,110,116,56,67,108,97,109,112,101,100,65,114,114,97,121,32,124,124,32,101,32,105,110,115,116,97,110,99,101,111,102,32,73,110,116,56,65,114,114,97,121,41,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,34,67,97,110,110,111,116,32,112,97,115,115,32,110,111,110,45,115,116,114,105,110,103,32,116,111,32,115,116,100,58,58,115,116,114,105,110,103,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,99,32,38,38,32,104,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,103,32,61,32,102,32,61,32,48,59,32,103,32,60,32,101,46,108,101,110,103,116,104,59,32,43,43,103,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,108,32,61,32,101,46,99,104,97,114,67,111,100,101,65,116,40,103,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,49,50,55,32,62,61,32,108,32,63,32,102,43,43,32,58,32,50,48,52,55,32,62,61,32,108,32,63,32,102,32,43,61,32,50,32,58,32,53,53,50,57,54,32,60,61,32,108,32,38,38,32,53,55,51,52,51,32,62,61,32,108,32,63,32,40,102,32,43,61,32,52,44,32,43,43,103,41,32,58,32,102,32,43,61,32,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,102,32,61,32,101,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,103,32,61,32,98,99,40,52,32,43,32,102,32,43,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,32,61,32,103,32,43,32,52,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,68,91,103,32,62,62,32,50,93,32,61,32,102,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,99,32,38,38,32,104,41,32,72,40,101,44,32,108,44,32,102,32,43,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,40,104,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,104,32,61,32,48,59,32,104,32,60,32,102,59,32,43,43,104,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,109,32,61,32,101,46,99,104,97,114,67,111,100,101,65,116,40,104,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,50,53,53,32,60,32,109,41,32,116,104,114,111,119,32,85,40,108,41,44,32,110,101,119,32,80,40,34,83,116,114,105,110,103,32,104,97,115,32,85,84,70,45,49,54,32,99,111,100,101,32,117,110,105,116,115,32,116,104,97,116,32,100,111,32,110,111,116,32,102,105,116,32,105,110,32,56,32,98,105,116,115,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,120,91,108,32,43,32,104,93,32,61,32,109,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,102,111,114,32,40,104,32,61,32,48,59,32,104,32,60,32,102,59,32,43,43,104,41,32,120,91,108,32,43,32,104,93,32,61,32,101,91,104,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,117,108,108,32,33,61,61,32,100,32,38,38,32,100,46,112,117,115,104,40,85,44,32,103,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,103,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,66,97,58,32,56,44,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,73,44,10,32,32,32,32,32,32,32,32,32,32,32,32,67,97,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,85,40,100,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,115,58,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,99,32,61,32,79,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,50,32,61,61,61,32,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,71,98,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,72,98,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,73,98,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,104,32,61,32,40,103,41,32,61,62,32,122,91,103,32,62,62,32,49,93,59,10,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,52,32,61,61,61,32,98,32,38,38,32,40,100,32,61,32,74,98,44,32,101,32,61,32,75,98,44,32,102,32,61,32,76,98,44,32,104,32,61,32,40,103,41,32,61,62,32,68,91,103,32,62,62,32,50,93,41,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,58,32,99,44,10,32,32,32,32,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,40,103,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,108,32,61,32,68,91,103,32,62,62,32,50,93,44,32,109,44,32,110,32,61,32,103,32,43,32,52,44,32,113,32,61,32,48,59,32,113,32,60,61,32,108,59,32,43,43,113,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,114,32,61,32,103,32,43,32,52,32,43,32,113,32,42,32,98,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,113,32,61,61,32,108,32,124,124,32,48,32,61,61,32,104,40,114,41,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,32,61,32,100,40,110,44,32,114,32,45,32,110,41,44,32,118,111,105,100,32,48,32,61,61,61,32,109,32,63,32,109,32,61,32,110,32,58,32,40,109,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,48,41,44,32,109,32,43,61,32,110,41,44,32,110,32,61,32,114,32,43,32,98,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,85,40,103,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,109,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,116,111,87,105,114,101,84,121,112,101,58,32,40,103,44,32,108,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,34,115,116,114,105,110,103,34,32,33,61,32,116,121,112,101,111,102,32,108,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,112,97,115,115,32,110,111,110,45,115,116,114,105,110,103,32,116,111,32,67,43,43,32,115,116,114,105,110,103,32,116,121,112,101,32,36,123,99,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,109,32,61,32,102,40,108,41,44,32,110,32,61,32,98,99,40,52,32,43,32,109,32,43,32,98,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,68,91,110,32,62,62,32,50,93,32,61,32,109,32,47,32,98,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,40,108,44,32,110,32,43,32,52,44,32,109,32,43,32,98,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,117,108,108,32,33,61,61,32,103,32,38,38,32,103,46,112,117,115,104,40,85,44,32,110,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,66,97,58,32,56,44,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,73,44,10,32,32,32,32,32,32,32,32,32,32,32,32,67,97,40,103,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,85,40,103,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,119,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,75,97,91,97,93,32,61,32,123,32,110,97,109,101,58,32,79,40,98,41,44,32,78,97,58,32,84,40,99,44,32,100,41,44,32,68,97,58,32,84,40,101,44,32,102,41,44,32,81,97,58,32,91,93,32,125,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,106,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,104,44,32,103,44,32,108,44,32,109,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,75,97,91,97,93,46,81,97,46,112,117,115,104,40,123,32,85,97,58,32,79,40,98,41,44,32,90,97,58,32,99,44,32,88,97,58,32,84,40,100,44,32,101,41,44,32,89,97,58,32,102,44,32,102,98,58,32,104,44,32,101,98,58,32,84,40,103,44,32,108,41,44,32,103,98,58,32,109,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,87,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,32,105,98,58,32,116,114,117,101,44,32,110,97,109,101,58,32,98,44,32,66,97,58,32,48,44,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,125,44,32,116,111,87,105,114,101,84,121,112,101,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,125,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,72,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,69,97,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,32,32,77,98,32,61,32,48,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,68,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,73,110,102,105,110,105,116,121,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,90,58,32,40,97,44,32,98,44,32,99,44,32,100,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,78,98,91,97,93,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,121,98,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,40,110,117,108,108,44,32,98,44,32,99,44,32,100,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,66,58,32,120,98,44,10,32,32,32,32,32,32,32,32,89,58,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,80,98,40,97,44,32,98,41,44,32,101,32,61,32,100,46,115,104,105,102,116,40,41,59,10,32,32,32,32,32,32,32,32,32,32,97,45,45,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,96,109,101,116,104,111,100,67,97,108,108,101,114,60,40,36,123,100,46,109,97,112,40,40,104,41,32,61,62,32,104,46,110,97,109,101,41,46,106,111,105,110,40,34,44,32,34,41,125,41,32,61,62,32,36,123,101,46,110,97,109,101,125,62,96,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,79,98,40,10,32,32,32,32,32,32,32,32,32,32,32,32,82,40,98,44,32,40,104,44,32,103,44,32,108,44,32,109,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,110,32,61,32,48,44,32,113,32,61,32,48,59,32,113,32,60,32,97,59,32,43,43,113,41,32,102,91,113,93,32,61,32,100,91,113,93,46,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,40,109,32,43,32,110,41,44,32,110,32,43,61,32,100,91,113,93,46,66,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,103,32,61,32,49,32,61,61,61,32,99,32,63,32,81,98,40,103,44,32,102,41,32,58,32,103,46,97,112,112,108,121,40,104,44,32,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,104,32,61,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,103,32,61,32,101,46,116,111,87,105,114,101,84,121,112,101,40,104,44,32,103,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,104,46,108,101,110,103,116,104,32,38,38,32,40,68,91,108,32,62,62,32,50,93,32,61,32,104,98,40,104,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,103,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,10,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,95,58,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,57,32,60,32,97,32,38,38,32,40,86,91,97,32,43,32,49,93,32,43,61,32,49,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,88,58,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,121,98,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,76,97,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,120,98,40,97,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,111,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,66,98,40,97,44,32,34,95,101,109,118,97,108,95,116,97,107,101,95,118,97,108,117,101,34,41,59,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,97,46,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,104,98,40,97,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,69,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,82,98,91,97,93,32,38,38,32,40,99,108,101,97,114,84,105,109,101,111,117,116,40,82,98,91,97,93,46,105,100,41,44,32,100,101,108,101,116,101,32,82,98,91,97,93,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,98,41,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,100,101,108,101,116,101,32,82,98,91,97,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,85,98,40,40,41,32,61,62,32,99,99,40,97,44,32,112,101,114,102,111,114,109,97,110,99,101,46,110,111,119,40,41,41,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,98,41,59,10,32,32,32,32,32,32,32,32,32,32,82,98,91,97,93,32,61,32,123,32,105,100,58,32,99,44,32,106,98,58,32,98,32,125,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,70,58,32,40,97,44,32,98,44,32,99,44,32,100,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,40,47,42,32,64,95,95,80,85,82,69,95,95,32,42,47,32,110,101,119,32,68,97,116,101,40,41,41,46,103,101,116,70,117,108,108,89,101,97,114,40,41,44,32,102,32,61,32,110,101,119,32,68,97,116,101,40,101,44,32,48,44,32,49,41,46,103,101,116,84,105,109,101,122,111,110,101,79,102,102,115,101,116,40,41,59,10,32,32,32,32,32,32,32,32,32,32,101,32,61,32,110,101,119,32,68,97,116,101,40,101,44,32,54,44,32,49,41,46,103,101,116,84,105,109,101,122,111,110,101,79,102,102,115,101,116,40,41,59,10,32,32,32,32,32,32,32,32,32,32,68,91,97,32,62,62,32,50,93,32,61,32,54,48,32,42,32,77,97,116,104,46,109,97,120,40,102,44,32,101,41,59,10,32,32,32,32,32,32,32,32,32,32,67,91,98,32,62,62,32,50,93,32,61,32,78,117,109,98,101,114,40,102,32,33,61,32,101,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,40,104,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,103,32,61,32,77,97,116,104,46,97,98,115,40,104,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,96,85,84,67,36,123,48,32,60,61,32,104,32,63,32,34,45,34,32,58,32,34,43,34,125,36,123,83,116,114,105,110,103,40,77,97,116,104,46,102,108,111,111,114,40,103,32,47,32,54,48,41,41,46,112,97,100,83,116,97,114,116,40,50,44,32,34,48,34,41,125,36,123,83,116,114,105,110,103,40,103,32,37,32,54,48,41,46,112,97,100,83,116,97,114,116,40,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,50,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,48,34,10,32,32,32,32,32,32,32,32,32,32,32,32,41,125,96,59,10,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,98,40,102,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,98,40,101,41,59,10,32,32,32,32,32,32,32,32,32,32,101,32,60,32,102,32,63,32,40,72,40,97,44,32,99,44,32,49,55,41,44,32,72,40,98,44,32,100,44,32,49,55,41,41,32,58,32,40,72,40,97,44,32,100,44,32,49,55,41,44,32,72,40,98,44,32,99,44,32,49,55,41,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,97,97,58,32,40,41,32,61,62,32,112,101,114,102,111,114,109,97,110,99,101,46,110,111,119,40,41,44,10,32,32,32,32,32,32,32,32,71,58,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,120,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,32,32,32,32,97,32,62,62,62,61,32,48,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,50,49,52,55,52,56,51,54,52,56,32,60,32,97,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,99,32,61,32,49,59,32,52,32,62,61,32,99,59,32,99,32,42,61,32,50,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,98,32,42,32,40,49,32,43,32,48,46,50,32,47,32,99,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,100,32,61,32,77,97,116,104,46,109,105,110,40,100,44,32,97,32,43,32,49,48,48,54,54,51,50,57,54,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,97,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,32,61,32,40,77,97,116,104,46,109,105,110,40,50,49,52,55,52,56,51,54,52,56,44,32,54,53,53,51,54,32,42,32,77,97,116,104,46,99,101,105,108,40,77,97,116,104,46,109,97,120,40,97,44,32,100,41,32,47,32,54,53,53,51,54,41,41,32,45,32,107,97,46,98,117,102,102,101,114,46,98,121,116,101,76,101,110,103,116,104,32,43,32,54,53,53,51,53,41,32,47,32,54,53,53,51,54,32,124,32,48,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,107,97,46,103,114,111,119,40,100,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,97,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,49,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,114,101,97,107,32,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,32,61,32,118,111,105,100,32,48,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,101,41,32,114,101,116,117,114,110,32,116,114,117,101,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,83,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,48,59,10,32,32,32,32,32,32,32,32,32,32,88,98,40,41,46,102,111,114,69,97,99,104,40,40,100,44,32,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,98,32,43,32,99,59,10,32,32,32,32,32,32,32,32,32,32,32,32,101,32,61,32,68,91,97,32,43,32,52,32,42,32,101,32,62,62,32,50,93,32,61,32,102,59,10,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,102,32,61,32,48,59,32,102,32,60,32,100,46,108,101,110,103,116,104,59,32,43,43,102,41,32,119,91,101,43,43,93,32,61,32,100,46,99,104,97,114,67,111,100,101,65,116,40,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,119,91,101,93,32,61,32,48,59,10,32,32,32,32,32,32,32,32,32,32,32,32,99,32,43,61,32,100,46,108,101,110,103,116,104,32,43,32,49,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,84,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,88,98,40,41,59,10,32,32,32,32,32,32,32,32,32,32,68,91,97,32,62,62,32,50,93,32,61,32,99,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,48,59,10,32,32,32,32,32,32,32,32,32,32,99,46,102,111,114,69,97,99,104,40,40,101,41,32,61,62,32,100,32,43,61,32,101,46,108,101,110,103,116,104,32,43,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,68,91,98,32,62,62,32,50,93,32,61,32,100,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,80,58,32,40,41,32,61,62,32,53,50,44,10,32,32,32,32,32,32,32,32,78,58,32,40,41,32,61,62,32,53,50,44,10,32,32,32,32,32,32,32,32,105,58,32,100,99,44,10,32,32,32,32,32,32,32,32,100,58,32,101,99,44,10,32,32,32,32,32,32,32,32,101,58,32,102,99,44,10,32,32,32,32,32,32,32,32,112,58,32,103,99,44,10,32,32,32,32,32,32,32,32,121,58,32,104,99,44,10,32,32,32,32,32,32,32,32,98,58,32,105,99,44,10,32,32,32,32,32,32,32,32,97,58,32,106,99,44,10,32,32,32,32,32,32,32,32,103,58,32,107,99,44,10,32,32,32,32,32,32,32,32,110,58,32,108,99,44,10,32,32,32,32,32,32,32,32,82,58,32,84,98,44,10,32,32,32,32,32,32,32,32,73,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,90,98,40,120,46,115,117,98,97,114,114,97,121,40,97,44,32,97,32,43,32,98,41,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,87,32,61,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,95,97,50,59,10,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,97,40,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,95,97,51,59,10,32,32,32,32,32,32,32,32,32,32,87,32,61,32,99,46,101,120,112,111,114,116,115,59,10,32,32,32,32,32,32,32,32,32,32,107,97,32,61,32,87,46,98,97,59,10,32,32,32,32,32,32,32,32,32,32,112,97,40,41,59,10,32,32,32,32,32,32,32,32,32,32,83,32,61,32,87,46,102,97,59,10,32,32,32,32,32,32,32,32,32,32,114,97,46,117,110,115,104,105,102,116,40,87,46,99,97,41,59,10,32,32,32,32,32,32,32,32,32,32,70,45,45,59,10,32,32,32,32,32,32,32,32,32,32,40,95,97,51,32,61,32,107,46,109,111,110,105,116,111,114,82,117,110,68,101,112,101,110,100,101,110,99,105,101,115,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,51,46,99,97,108,108,40,107,44,32,70,41,59,10,32,32,32,32,32,32,32,32,32,32,48,32,61,61,32,70,32,38,38,32,40,110,117,108,108,32,33,61,61,32,117,97,32,38,38,32,40,99,108,101,97,114,73,110,116,101,114,118,97,108,40,117,97,41,44,32,117,97,32,61,32,110,117,108,108,41,44,32,71,32,38,38,32,40,99,32,61,32,71,44,32,71,32,61,32,110,117,108,108,44,32,99,40,41,41,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,87,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,70,43,43,59,10,32,32,32,32,32,32,32,32,40,95,97,50,32,61,32,107,46,109,111,110,105,116,111,114,82,117,110,68,101,112,101,110,100,101,110,99,105,101,115,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,50,46,99,97,108,108,40,107,44,32,70,41,59,10,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,123,32,97,58,32,109,99,32,125,59,10,32,32,32,32,32,32,32,32,105,102,32,40,107,46,105,110,115,116,97,110,116,105,97,116,101,87,97,115,109,41,10,32,32,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,107,46,105,110,115,116,97,110,116,105,97,116,101,87,97,115,109,40,98,44,32,97,41,59,10,32,32,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,40,96,77,111,100,117,108,101,46,105,110,115,116,97,110,116,105,97,116,101,87,97,115,109,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,32,119,105,116,104,32,101,114,114,111,114,58,32,36,123,99,125,96,41,44,32,98,97,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,120,97,32,33,61,32,110,117,108,108,32,63,32,120,97,32,58,32,120,97,32,61,32,119,97,40,34,68,111,116,76,111,116,116,105,101,80,108,97,121,101,114,46,119,97,115,109,34,41,32,63,32,34,68,111,116,76,111,116,116,105,101,80,108,97,121,101,114,46,119,97,115,109,34,32,58,32,107,46,108,111,99,97,116,101,70,105,108,101,32,63,32,107,46,108,111,99,97,116,101,70,105,108,101,40,34,68,111,116,76,111,116,116,105,101,80,108,97,121,101,114,46,119,97,115,109,34,44,32,112,41,32,58,32,112,32,43,32,34,68,111,116,76,111,116,116,105,101,80,108,97,121,101,114,46,119,97,115,109,34,59,10,32,32,32,32,32,32,32,32,66,97,40,98,44,32,102,117,110,99,116,105,111,110,40,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,97,40,99,46,105,110,115,116,97,110,99,101,41,59,10,32,32,32,32,32,32,32,32,125,41,46,99,97,116,99,104,40,98,97,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,123,125,59,10,32,32,32,32,32,32,125,40,41,44,32,98,99,32,61,32,40,97,41,32,61,62,32,40,98,99,32,61,32,87,46,100,97,41,40,97,41,44,32,111,98,32,61,32,40,97,41,32,61,62,32,40,111,98,32,61,32,87,46,101,97,41,40,97,41,44,32,85,32,61,32,40,97,41,32,61,62,32,40,85,32,61,32,87,46,103,97,41,40,97,41,44,32,99,99,32,61,32,40,97,44,32,98,41,32,61,62,32,40,99,99,32,61,32,87,46,104,97,41,40,97,44,32,98,41,44,32,88,32,61,32,40,97,44,32,98,41,32,61,62,32,40,88,32,61,32,87,46,105,97,41,40,97,44,32,98,41,44,32,89,32,61,32,40,97,41,32,61,62,32,40,89,32,61,32,87,46,106,97,41,40,97,41,44,32,90,32,61,32,40,41,32,61,62,32,40,90,32,61,32,87,46,107,97,41,40,41,59,10,32,32,32,32,32,32,107,46,100,121,110,67,97,108,108,95,105,105,106,106,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,32,61,62,32,40,107,46,100,121,110,67,97,108,108,95,105,105,106,106,32,61,32,87,46,108,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,59,10,32,32,32,32,32,32,107,46,100,121,110,67,97,108,108,95,118,105,106,106,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,32,61,62,32,40,107,46,100,121,110,67,97,108,108,95,118,105,106,106,32,61,32,87,46,109,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,59,10,32,32,32,32,32,32,107,46,100,121,110,67,97,108,108,95,106,105,105,105,32,61,32,40,97,44,32,98,44,32,99,44,32,100,41,32,61,62,32,40,107,46,100,121,110,67,97,108,108,95,106,105,105,105,32,61,32,87,46,110,97,41,40,97,44,32,98,44,32,99,44,32,100,41,59,10,32,32,32,32,32,32,107,46,100,121,110,67,97,108,108,95,106,105,105,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,40,107,46,100,121,110,67,97,108,108,95,106,105,105,32,61,32,87,46,111,97,41,40,97,44,32,98,44,32,99,41,59,10,32,32,32,32,32,32,107,46,100,121,110,67,97,108,108,95,118,105,105,106,105,105,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,104,41,32,61,62,32,40,107,46,100,121,110,67,97,108,108,95,118,105,105,106,105,105,32,61,32,87,46,112,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,104,41,59,10,32,32,32,32,32,32,107,46,100,121,110,67,97,108,108,95,105,105,105,105,105,106,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,104,41,32,61,62,32,40,107,46,100,121,110,67,97,108,108,95,105,105,105,105,105,106,32,61,32,87,46,113,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,104,41,59,10,32,32,32,32,32,32,107,46,100,121,110,67,97,108,108,95,105,105,105,105,105,106,106,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,104,44,32,103,44,32,108,41,32,61,62,32,40,107,46,100,121,110,67,97,108,108,95,105,105,105,105,105,106,106,32,61,32,87,46,114,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,104,44,32,103,44,32,108,41,59,10,32,32,32,32,32,32,107,46,100,121,110,67,97,108,108,95,105,105,105,105,105,105,106,106,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,104,44,32,103,44,32,108,44,32,109,41,32,61,62,32,40,107,46,100,121,110,67,97,108,108,95,105,105,105,105,105,105,106,106,32,61,32,87,46,115,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,104,44,32,103,44,32,108,44,32,109,41,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,106,99,40,97,44,32,98,44,32,99,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,83,46,103,101,116,40,97,41,40,98,44,32,99,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,100,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,101,32,33,61,61,32,101,32,43,32,48,41,32,116,104,114,111,119,32,101,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,105,99,40,97,44,32,98,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,83,46,103,101,116,40,97,41,40,98,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,100,32,33,61,61,32,100,32,43,32,48,41,32,116,104,114,111,119,32,100,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,102,99,40,97,44,32,98,44,32,99,44,32,100,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,83,46,103,101,116,40,97,41,40,98,44,32,99,44,32,100,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,101,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,102,32,33,61,61,32,102,32,43,32,48,41,32,116,104,114,111,119,32,102,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,101,99,40,97,44,32,98,44,32,99,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,83,46,103,101,116,40,97,41,40,98,44,32,99,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,100,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,101,32,33,61,61,32,101,32,43,32,48,41,32,116,104,114,111,119,32,101,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,100,99,40,97,44,32,98,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,83,46,103,101,116,40,97,41,40,98,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,100,32,33,61,61,32,100,32,43,32,48,41,32,116,104,114,111,119,32,100,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,103,99,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,104,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,83,46,103,101,116,40,97,41,40,98,44,32,99,44,32,100,44,32,101,44,32,102,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,103,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,104,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,103,32,33,61,61,32,103,32,43,32,48,41,32,116,104,114,111,119,32,103,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,108,99,40,97,44,32,98,44,32,99,44,32,100,44,32,101,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,83,46,103,101,116,40,97,41,40,98,44,32,99,44,32,100,44,32,101,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,104,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,102,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,104,32,33,61,61,32,104,32,43,32,48,41,32,116,104,114,111,119,32,104,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,107,99,40,97,44,32,98,44,32,99,44,32,100,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,83,46,103,101,116,40,97,41,40,98,44,32,99,44,32,100,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,101,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,102,32,33,61,61,32,102,32,43,32,48,41,32,116,104,114,111,119,32,102,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,104,99,40,97,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,83,46,103,101,116,40,97,41,40,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,99,32,33,61,61,32,99,32,43,32,48,41,32,116,104,114,111,119,32,99,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,110,99,59,10,32,32,32,32,32,32,71,32,61,32,102,117,110,99,116,105,111,110,32,111,99,40,41,32,123,10,32,32,32,32,32,32,32,32,110,99,32,124,124,32,112,99,40,41,59,10,32,32,32,32,32,32,32,32,110,99,32,124,124,32,40,71,32,61,32,111,99,41,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,112,99,40,41,32,123,10,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,97,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,95,97,50,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,110,99,32,38,38,32,40,110,99,32,61,32,116,114,117,101,44,32,107,46,99,97,108,108,101,100,82,117,110,32,61,32,116,114,117,101,44,32,33,108,97,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,68,97,40,114,97,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,97,97,40,107,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,40,95,97,50,32,61,32,107,46,111,110,82,117,110,116,105,109,101,73,110,105,116,105,97,108,105,122,101,100,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,50,46,99,97,108,108,40,107,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,107,46,112,111,115,116,82,117,110,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,34,102,117,110,99,116,105,111,110,34,32,61,61,32,116,121,112,101,111,102,32,107,46,112,111,115,116,82,117,110,32,38,38,32,40,107,46,112,111,115,116,82,117,110,32,61,32,91,107,46,112,111,115,116,82,117,110,93,41,59,32,107,46,112,111,115,116,82,117,110,46,108,101,110,103,116,104,59,32,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,107,46,112,111,115,116,82,117,110,46,115,104,105,102,116,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,97,46,117,110,115,104,105,102,116,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,68,97,40,115,97,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,33,40,48,32,60,32,70,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,107,46,112,114,101,82,117,110,41,32,102,111,114,32,40,34,102,117,110,99,116,105,111,110,34,32,61,61,32,116,121,112,101,111,102,32,107,46,112,114,101,82,117,110,32,38,38,32,40,107,46,112,114,101,82,117,110,32,61,32,91,107,46,112,114,101,82,117,110,93,41,59,32,107,46,112,114,101,82,117,110,46,108,101,110,103,116,104,59,32,41,32,116,97,40,41,59,10,32,32,32,32,32,32,32,32,32,32,68,97,40,113,97,41,59,10,32,32,32,32,32,32,32,32,32,32,48,32,60,32,70,32,124,124,32,40,107,46,115,101,116,83,116,97,116,117,115,32,63,32,40,107,46,115,101,116,83,116,97,116,117,115,40,34,82,117,110,110,105,110,103,46,46,46,34,41,44,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,107,46,115,101,116,83,116,97,116,117,115,40,34,34,41,44,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,97,40,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,49,41,41,32,58,32,97,40,41,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,107,46,112,114,101,73,110,105,116,41,10,32,32,32,32,32,32,32,32,102,111,114,32,40,34,102,117,110,99,116,105,111,110,34,32,61,61,32,116,121,112,101,111,102,32,107,46,112,114,101,73,110,105,116,32,38,38,32,40,107,46,112,114,101,73,110,105,116,32,61,32,91,107,46,112,114,101,73,110,105,116,93,41,59,32,48,32,60,32,107,46,112,114,101,73,110,105,116,46,108,101,110,103,116,104,59,32,41,32,107,46,112,114,101,73,110,105,116,46,112,111,112,40,41,40,41,59,10,32,32,32,32,32,32,112,99,40,41,59,10,32,32,32,32,32,32,109,111,100,117,108,101,82,116,110,32,61,32,101,97,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,82,116,110,59,10,32,32,32,32,125,59,10,32,32,125,41,40,41,59,10,32,32,118,97,114,32,100,111,116,108,111,116,116,105,101,95,112,108,97,121,101,114,95,100,101,102,97,117,108,116,32,61,32,99,114,101,97,116,101,68,111,116,76,111,116,116,105,101,80,108,97,121,101,114,77,111,100,117,108,101,59,10,10,32,32,47,47,32,115,114,99,47,99,111,114,101,47,100,111,116,108,111,116,116,105,101,45,119,97,115,109,45,108,111,97,100,101,114,46,116,115,10,32,32,118,97,114,32,68,111,116,76,111,116,116,105,101,87,97,115,109,76,111,97,100,101,114,32,61,32,99,108,97,115,115,32,123,10,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,41,32,123,10,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,34,82,101,110,100,101,114,101,114,76,111,97,100,101,114,32,105,115,32,97,32,115,116,97,116,105,99,32,99,108,97,115,115,32,97,110,100,32,99,97,110,110,111,116,32,98,101,32,105,110,115,116,97,110,116,105,97,116,101,100,46,34,41,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,116,105,99,32,95,116,114,121,76,111,97,100,40,117,114,108,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,95,95,97,115,121,110,99,40,116,104,105,115,44,32,110,117,108,108,44,32,102,117,110,99,116,105,111,110,42,32,40,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,109,111,100,117,108,101,32,61,32,121,105,101,108,100,32,100,111,116,108,111,116,116,105,101,95,112,108,97,121,101,114,95,100,101,102,97,117,108,116,40,123,32,108,111,99,97,116,101,70,105,108,101,58,32,40,41,32,61,62,32,117,114,108,32,125,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,84,114,105,101,115,32,116,111,32,108,111,97,100,32,116,104,101,32,87,65,83,77,32,109,111,100,117,108,101,32,102,114,111,109,32,116,104,101,32,112,114,105,109,97,114,121,32,85,82,76,44,32,102,97,108,108,105,110,103,32,98,97,99,107,32,116,111,32,97,32,98,97,99,107,117,112,32,85,82,76,32,105,102,32,110,101,99,101,115,115,97,114,121,46,10,32,32,32,32,32,42,32,84,104,114,111,119,115,32,97,110,32,101,114,114,111,114,32,105,102,32,98,111,116,104,32,85,82,76,115,32,102,97,105,108,32,116,111,32,108,111,97,100,32,116,104,101,32,109,111,100,117,108,101,46,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,80,114,111,109,105,115,101,60,77,111,100,117,108,101,62,32,45,32,65,32,112,114,111,109,105,115,101,32,116,104,97,116,32,114,101,115,111,108,118,101,115,32,116,111,32,116,104,101,32,108,111,97,100,101,100,32,109,111,100,117,108,101,46,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,105,99,32,95,108,111,97,100,87,105,116,104,66,97,99,107,117,112,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,95,95,97,115,121,110,99,40,116,104,105,115,44,32,110,117,108,108,44,32,102,117,110,99,116,105,111,110,42,32,40,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,77,111,100,117,108,101,80,114,111,109,105,115,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,77,111,100,117,108,101,80,114,111,109,105,115,101,32,61,32,116,104,105,115,46,95,116,114,121,76,111,97,100,40,116,104,105,115,46,95,119,97,115,109,85,82,76,41,46,99,97,116,99,104,40,40,105,110,105,116,105,97,108,69,114,114,111,114,41,32,61,62,32,95,95,97,115,121,110,99,40,116,104,105,115,44,32,110,117,108,108,44,32,102,117,110,99,116,105,111,110,42,32,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,98,97,99,107,117,112,85,114,108,32,61,32,96,104,116,116,112,115,58,47,47,117,110,112,107,103,46,99,111,109,47,36,123,80,65,67,75,65,71,69,95,78,65,77,69,125,64,36,123,80,65,67,75,65,71,69,95,86,69,82,83,73,79,78,125,47,100,105,115,116,47,100,111,116,108,111,116,116,105,101,45,112,108,97,121,101,114,46,119,97,115,109,96,59,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,111,108,101,46,119,97,114,110,40,96,80,114,105,109,97,114,121,32,87,65,83,77,32,108,111,97,100,32,102,97,105,108,101,100,32,102,114,111,109,32,36,123,116,104,105,115,46,95,119,97,115,109,85,82,76,125,46,32,69,114,114,111,114,58,32,36,123,105,110,105,116,105,97,108,69,114,114,111,114,46,109,101,115,115,97,103,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,111,108,101,46,119,97,114,110,40,96,65,116,116,101,109,112,116,105,110,103,32,116,111,32,108,111,97,100,32,87,65,83,77,32,102,114,111,109,32,98,97,99,107,117,112,32,85,82,76,58,32,36,123,98,97,99,107,117,112,85,114,108,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,121,105,101,108,100,32,116,104,105,115,46,95,116,114,121,76,111,97,100,40,98,97,99,107,117,112,85,114,108,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,98,97,99,107,117,112,69,114,114,111,114,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,111,108,101,46,101,114,114,111,114,40,96,80,114,105,109,97,114,121,32,87,65,83,77,32,85,82,76,32,102,97,105,108,101,100,58,32,36,123,105,110,105,116,105,97,108,69,114,114,111,114,46,109,101,115,115,97,103,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,111,108,101,46,101,114,114,111,114,40,96,66,97,99,107,117,112,32,87,65,83,77,32,85,82,76,32,102,97,105,108,101,100,58,32,36,123,98,97,99,107,117,112,69,114,114,111,114,46,109,101,115,115,97,103,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,34,87,65,83,77,32,108,111,97,100,105,110,103,32,102,97,105,108,101,100,32,102,114,111,109,32,97,108,108,32,115,111,117,114,99,101,115,46,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,41,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,77,111,100,117,108,101,80,114,111,109,105,115,101,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,80,117,98,108,105,99,32,109,101,116,104,111,100,32,116,111,32,108,111,97,100,32,116,104,101,32,87,101,98,65,115,115,101,109,98,108,121,32,109,111,100,117,108,101,46,10,32,32,32,32,32,42,32,85,116,105,108,105,122,101,115,32,97,32,112,114,105,109,97,114,121,32,97,110,100,32,98,97,99,107,117,112,32,85,82,76,32,102,111,114,32,114,111,98,117,115,116,110,101,115,115,46,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,80,114,111,109,105,115,101,60,77,111,100,117,108,101,62,32,45,32,65,32,112,114,111,109,105,115,101,32,116,104,97,116,32,114,101,115,111,108,118,101,115,32,116,111,32,116,104,101,32,108,111,97,100,101,100,32,109,111,100,117,108,101,46,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,105,99,32,108,111,97,100,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,95,95,97,115,121,110,99,40,116,104,105,115,44,32,110,117,108,108,44,32,102,117,110,99,116,105,111,110,42,32,40,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,108,111,97,100,87,105,116,104,66,97,99,107,117,112,40,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,83,101,116,115,32,97,32,110,101,119,32,85,82,76,32,102,111,114,32,116,104,101,32,87,65,83,77,32,102,105,108,101,32,97,110,100,32,105,110,118,97,108,105,100,97,116,101,115,32,116,104,101,32,99,117,114,114,101,110,116,32,109,111,100,117,108,101,32,112,114,111,109,105,115,101,46,10,32,32,32,32,32,42,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,115,116,114,105,110,103,32,45,32,32,84,104,101,32,110,101,119,32,85,82,76,32,102,111,114,32,116,104,101,32,87,65,83,77,32,102,105,108,101,46,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,105,99,32,115,101,116,87,97,115,109,85,114,108,40,117,114,108,41,32,123,10,32,32,32,32,32,32,105,102,32,40,117,114,108,32,61,61,61,32,116,104,105,115,46,95,119,97,115,109,85,82,76,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,119,97,115,109,85,82,76,32,61,32,117,114,108,59,10,32,32,32,32,32,32,116,104,105,115,46,95,77,111,100,117,108,101,80,114,111,109,105,115,101,32,61,32,110,117,108,108,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,47,47,32,101,115,108,105,110,116,45,100,105,115,97,98,108,101,45,110,101,120,116,45,108,105,110,101,32,64,116,121,112,101,115,99,114,105,112,116,45,101,115,108,105,110,116,47,110,97,109,105,110,103,45,99,111,110,118,101,110,116,105,111,110,10,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,68,111,116,76,111,116,116,105,101,87,97,115,109,76,111,97,100,101,114,44,32,34,95,77,111,100,117,108,101,80,114,111,109,105,115,101,34,44,32,110,117,108,108,41,59,10,32,32,47,47,32,85,82,76,32,102,111,114,32,116,104,101,32,87,65,83,77,32,102,105,108,101,44,32,99,111,110,115,116,114,117,99,116,101,100,32,117,115,105,110,103,32,112,97,99,107,97,103,101,32,105,110,102,111,114,109,97,116,105,111,110,10,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,68,111,116,76,111,116,116,105,101,87,97,115,109,76,111,97,100,101,114,44,32,34,95,119,97,115,109,85,82,76,34,44,32,96,104,116,116,112,115,58,47,47,99,100,110,46,106,115,100,101,108,105,118,114,46,110,101,116,47,110,112,109,47,36,123,80,65,67,75,65,71,69,95,78,65,77,69,125,64,36,123,80,65,67,75,65,71,69,95,86,69,82,83,73,79,78,125,47,100,105,115,116,47,100,111,116,108,111,116,116,105,101,45,112,108,97,121,101,114,46,119,97,115,109,96,41,59,10,10,32,32,47,47,32,115,114,99,47,101,118,101,110,116,45,109,97,110,97,103,101,114,46,116,115,10,32,32,118,97,114,32,69,118,101,110,116,77,97,110,97,103,101,114,32,61,32,99,108,97,115,115,32,123,10,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,41,32,123,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,34,44,32,47,42,32,64,95,95,80,85,82,69,95,95,32,42,47,32,110,101,119,32,77,97,112,40,41,41,59,10,32,32,32,32,125,10,32,32,32,32,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,116,121,112,101,44,32,108,105,115,116,101,110,101,114,41,32,123,10,32,32,32,32,32,32,108,101,116,32,108,105,115,116,101,110,101,114,115,32,61,32,116,104,105,115,46,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,46,103,101,116,40,116,121,112,101,41,59,10,32,32,32,32,32,32,105,102,32,40,33,108,105,115,116,101,110,101,114,115,41,32,123,10,32,32,32,32,32,32,32,32,108,105,115,116,101,110,101,114,115,32,61,32,47,42,32,64,95,95,80,85,82,69,95,95,32,42,47,32,110,101,119,32,83,101,116,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,46,115,101,116,40,116,121,112,101,44,32,108,105,115,116,101,110,101,114,115,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,108,105,115,116,101,110,101,114,115,46,97,100,100,40,108,105,115,116,101,110,101,114,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,116,121,112,101,44,32,108,105,115,116,101,110,101,114,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,108,105,115,116,101,110,101,114,115,32,61,32,116,104,105,115,46,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,46,103,101,116,40,116,121,112,101,41,59,10,32,32,32,32,32,32,105,102,32,40,33,108,105,115,116,101,110,101,114,115,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,41,32,123,10,32,32,32,32,32,32,32,32,108,105,115,116,101,110,101,114,115,46,100,101,108,101,116,101,40,108,105,115,116,101,110,101,114,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,115,46,115,105,122,101,32,61,61,61,32,48,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,46,100,101,108,101,116,101,40,116,121,112,101,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,46,100,101,108,101,116,101,40,116,121,112,101,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,100,105,115,112,97,116,99,104,40,101,118,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,108,105,115,116,101,110,101,114,115,32,61,32,116,104,105,115,46,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,46,103,101,116,40,101,118,101,110,116,46,116,121,112,101,41,59,10,32,32,32,32,32,32,108,105,115,116,101,110,101,114,115,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,108,105,115,116,101,110,101,114,115,46,102,111,114,69,97,99,104,40,40,108,105,115,116,101,110,101,114,41,32,61,62,32,108,105,115,116,101,110,101,114,40,101,118,101,110,116,41,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,109,111,118,101,65,108,108,69,118,101,110,116,76,105,115,116,101,110,101,114,115,40,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,46,99,108,101,97,114,40,41,59,10,32,32,32,32,125,10,32,32,125,59,10,10,32,32,47,47,32,115,114,99,47,111,102,102,115,99,114,101,101,110,45,111,98,115,101,114,118,101,114,46,116,115,10,32,32,118,97,114,32,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,32,61,32,99,108,97,115,115,32,123,10,32,32,32,32,115,116,97,116,105,99,32,95,105,110,105,116,105,97,108,105,122,101,79,98,115,101,114,118,101,114,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,111,98,115,101,114,118,101,114,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,116,101,114,115,101,99,116,105,111,110,79,98,115,101,114,118,101,114,67,97,108,108,98,97,99,107,32,61,32,40,101,110,116,114,105,101,115,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,101,110,116,114,105,101,115,46,102,111,114,69,97,99,104,40,40,101,110,116,114,121,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,103,101,116,40,101,110,116,114,121,46,116,97,114,103,101,116,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,101,110,116,114,121,46,105,115,73,110,116,101,114,115,101,99,116,105,110,103,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,117,110,102,114,101,101,122,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,102,114,101,101,122,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,32,61,32,110,101,119,32,73,110,116,101,114,115,101,99,116,105,111,110,79,98,115,101,114,118,101,114,40,105,110,116,101,114,115,101,99,116,105,111,110,79,98,115,101,114,118,101,114,67,97,108,108,98,97,99,107,44,32,123,10,32,32,32,32,32,32,32,32,116,104,114,101,115,104,111,108,100,58,32,48,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,116,105,99,32,111,98,115,101,114,118,101,40,99,97,110,118,97,115,44,32,100,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,59,10,32,32,32,32,32,32,116,104,105,115,46,95,105,110,105,116,105,97,108,105,122,101,79,98,115,101,114,118,101,114,40,41,59,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,104,97,115,40,99,97,110,118,97,115,41,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,115,101,116,40,99,97,110,118,97,115,44,32,100,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,41,59,10,32,32,32,32,32,32,40,95,97,32,61,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,111,98,115,101,114,118,101,40,99,97,110,118,97,115,41,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,116,105,99,32,117,110,111,98,115,101,114,118,101,40,99,97,110,118,97,115,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,44,32,95,98,59,10,32,32,32,32,32,32,40,95,97,32,61,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,117,110,111,98,115,101,114,118,101,40,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,100,101,108,101,116,101,40,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,115,105,122,101,32,61,61,61,32,48,41,32,123,10,32,32,32,32,32,32,32,32,40,95,98,32,61,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,98,46,100,105,115,99,111,110,110,101,99,116,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,125,59,10,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,44,32,34,95,111,98,115,101,114,118,101,114,34,44,32,110,117,108,108,41,59,10,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,44,32,34,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,34,44,32,47,42,32,64,95,95,80,85,82,69,95,95,32,42,47,32,110,101,119,32,77,97,112,40,41,41,59,10,10,32,32,47,47,32,115,114,99,47,114,101,115,105,122,101,45,111,98,115,101,114,118,101,114,46,116,115,10,32,32,118,97,114,32,82,69,83,73,90,69,95,68,69,66,79,85,78,67,69,95,84,73,77,69,32,61,32,49,48,48,59,10,32,32,118,97,114,32,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,32,61,32,99,108,97,115,115,32,123,10,32,32,32,32,115,116,97,116,105,99,32,95,105,110,105,116,105,97,108,105,122,101,79,98,115,101,114,118,101,114,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,111,98,115,101,114,118,101,114,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,105,122,101,72,97,110,100,108,101,114,32,61,32,40,101,110,116,114,105,101,115,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,101,110,116,114,105,101,115,46,102,111,114,69,97,99,104,40,40,101,110,116,114,121,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,101,108,101,109,101,110,116,32,61,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,103,101,116,40,101,110,116,114,121,46,116,97,114,103,101,116,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,101,108,101,109,101,110,116,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,91,100,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,44,32,116,105,109,101,111,117,116,93,32,61,32,101,108,101,109,101,110,116,59,10,32,32,32,32,32,32,32,32,32,32,99,108,101,97,114,84,105,109,101,111,117,116,40,116,105,109,101,111,117,116,41,59,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,110,101,119,84,105,109,101,111,117,116,32,61,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,100,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,46,114,101,115,105,122,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,82,69,83,73,90,69,95,68,69,66,79,85,78,67,69,95,84,73,77,69,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,115,101,116,40,101,110,116,114,121,46,116,97,114,103,101,116,44,32,91,100,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,44,32,110,101,119,84,105,109,101,111,117,116,93,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,32,61,32,110,101,119,32,82,101,115,105,122,101,79,98,115,101,114,118,101,114,40,114,101,115,105,122,101,72,97,110,100,108,101,114,41,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,116,105,99,32,111,98,115,101,114,118,101,40,99,97,110,118,97,115,44,32,100,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,59,10,32,32,32,32,32,32,116,104,105,115,46,95,105,110,105,116,105,97,108,105,122,101,79,98,115,101,114,118,101,114,40,41,59,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,104,97,115,40,99,97,110,118,97,115,41,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,115,101,116,40,99,97,110,118,97,115,44,32,91,100,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,44,32,48,93,41,59,10,32,32,32,32,32,32,40,95,97,32,61,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,111,98,115,101,114,118,101,40,99,97,110,118,97,115,41,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,116,105,99,32,117,110,111,98,115,101,114,118,101,40,99,97,110,118,97,115,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,44,32,95,98,59,10,32,32,32,32,32,32,40,95,97,32,61,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,117,110,111,98,115,101,114,118,101,40,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,100,101,108,101,116,101,40,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,115,105,122,101,32,61,61,61,32,48,41,32,123,10,32,32,32,32,32,32,32,32,40,95,98,32,61,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,98,46,100,105,115,99,111,110,110,101,99,116,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,125,59,10,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,44,32,34,95,111,98,115,101,114,118,101,114,34,44,32,110,117,108,108,41,59,10,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,44,32,34,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,34,44,32,47,42,32,64,95,95,80,85,82,69,95,95,32,42,47,32,110,101,119,32,77,97,112,40,41,41,59,10,10,32,32,47,47,32,115,114,99,47,117,116,105,108,115,46,116,115,10,32,32,102,117,110,99,116,105,111,110,32,105,115,72,101,120,67,111,108,111,114,40,99,111,108,111,114,41,32,123,10,32,32,32,32,114,101,116,117,114,110,32,47,94,35,40,91,92,100,97,45,102,93,123,54,125,124,91,92,100,97,45,102,93,123,56,125,41,36,47,105,117,46,116,101,115,116,40,99,111,108,111,114,41,59,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,104,101,120,83,116,114,105,110,103,84,111,82,71,66,65,73,110,116,40,99,111,108,111,114,72,101,120,41,32,123,10,32,32,32,32,105,102,32,40,33,105,115,72,101,120,67,111,108,111,114,40,99,111,108,111,114,72,101,120,41,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,125,10,32,32,32,32,108,101,116,32,104,101,120,32,61,32,99,111,108,111,114,72,101,120,46,114,101,112,108,97,99,101,40,34,35,34,44,32,34,34,41,59,10,32,32,32,32,104,101,120,32,61,32,104,101,120,46,108,101,110,103,116,104,32,61,61,61,32,54,32,63,32,96,36,123,104,101,120,125,102,102,96,32,58,32,104,101,120,59,10,32,32,32,32,114,101,116,117,114,110,32,112,97,114,115,101,73,110,116,40,104,101,120,44,32,49,54,41,59,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,105,115,68,111,116,76,111,116,116,105,101,40,102,105,108,101,68,97,116,97,41,32,123,10,32,32,32,32,105,102,32,40,102,105,108,101,68,97,116,97,46,98,121,116,101,76,101,110,103,116,104,32,60,32,52,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,99,111,110,115,116,32,102,105,108,101,83,105,103,110,97,116,117,114,101,32,61,32,110,101,119,32,85,105,110,116,56,65,114,114,97,121,40,102,105,108,101,68,97,116,97,46,115,108,105,99,101,40,48,44,32,90,73,80,95,83,73,71,78,65,84,85,82,69,46,98,121,116,101,76,101,110,103,116,104,41,41,59,10,32,32,32,32,102,111,114,32,40,108,101,116,32,105,32,61,32,48,59,32,105,32,60,32,90,73,80,95,83,73,71,78,65,84,85,82,69,46,108,101,110,103,116,104,59,32,105,32,43,61,32,49,41,32,123,10,32,32,32,32,32,32,105,102,32,40,90,73,80,95,83,73,71,78,65,84,85,82,69,91,105,93,32,33,61,61,32,102,105,108,101,83,105,103,110,97,116,117,114,101,91,105,93,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,114,101,116,117,114,110,32,116,114,117,101,59,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,105,115,76,111,116,116,105,101,74,83,79,78,40,106,115,111,110,41,32,123,10,32,32,32,32,114,101,116,117,114,110,32,76,79,84,84,73,69,95,74,83,79,78,95,77,65,78,68,65,84,79,82,89,95,70,73,69,76,68,83,46,101,118,101,114,121,40,40,102,105,101,108,100,41,32,61,62,32,79,98,106,101,99,116,46,112,114,111,116,111,116,121,112,101,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,46,99,97,108,108,40,106,115,111,110,44,32,102,105,101,108,100,41,41,59,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,105,115,76,111,116,116,105,101,40,102,105,108,101,68,97,116,97,41,32,123,10,32,32,32,32,105,102,32,40,116,121,112,101,111,102,32,102,105,108,101,68,97,116,97,32,61,61,61,32,34,115,116,114,105,110,103,34,41,32,123,10,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,105,115,76,111,116,116,105,101,74,83,79,78,40,74,83,79,78,46,112,97,114,115,101,40,102,105,108,101,68,97,116,97,41,41,59,10,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,95,101,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,115,76,111,116,116,105,101,74,83,79,78,40,102,105,108,101,68,97,116,97,41,59,10,32,32,32,32,125,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,103,101,116,68,101,102,97,117,108,116,68,80,82,40,41,32,123,10,32,32,32,32,99,111,110,115,116,32,100,112,114,32,61,32,73,83,95,66,82,79,87,83,69,82,32,63,32,119,105,110,100,111,119,46,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,32,58,32,49,59,10,32,32,32,32,114,101,116,117,114,110,32,49,32,43,32,40,100,112,114,32,45,32,49,41,32,42,32,68,69,70,65,85,76,84,95,68,80,82,95,70,65,67,84,79,82,59,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,105,115,69,108,101,109,101,110,116,73,110,86,105,101,119,112,111,114,116,40,101,108,101,109,101,110,116,41,32,123,10,32,32,32,32,99,111,110,115,116,32,114,101,99,116,32,61,32,101,108,101,109,101,110,116,46,103,101,116,66,111,117,110,100,105,110,103,67,108,105,101,110,116,82,101,99,116,40,41,59,10,32,32,32,32,114,101,116,117,114,110,32,114,101,99,116,46,116,111,112,32,62,61,32,48,32,38,38,32,114,101,99,116,46,108,101,102,116,32,62,61,32,48,32,38,38,32,114,101,99,116,46,98,111,116,116,111,109,32,60,61,32,40,119,105,110,100,111,119,46,105,110,110,101,114,72,101,105,103,104,116,32,124,124,32,100,111,99,117,109,101,110,116,46,100,111,99,117,109,101,110,116,69,108,101,109,101,110,116,46,99,108,105,101,110,116,72,101,105,103,104,116,41,32,38,38,32,114,101,99,116,46,114,105,103,104,116,32,60,61,32,40,119,105,110,100,111,119,46,105,110,110,101,114,87,105,100,116,104,32,124,124,32,100,111,99,117,109,101,110,116,46,100,111,99,117,109,101,110,116,69,108,101,109,101,110,116,46,99,108,105,101,110,116,87,105,100,116,104,41,59,10,32,32,125,10,10,32,32,47,47,32,115,114,99,47,100,111,116,108,111,116,116,105,101,46,116,115,10,32,32,118,97,114,32,99,114,101,97,116,101,67,111,114,101,77,111,100,101,32,61,32,40,109,111,100,101,44,32,109,111,100,117,108,101,41,32,61,62,32,123,10,32,32,32,32,105,102,32,40,109,111,100,101,32,61,61,61,32,34,114,101,118,101,114,115,101,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,77,111,100,101,46,82,101,118,101,114,115,101,59,10,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,109,111,100,101,32,61,61,61,32,34,98,111,117,110,99,101,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,77,111,100,101,46,66,111,117,110,99,101,59,10,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,109,111,100,101,32,61,61,61,32,34,114,101,118,101,114,115,101,45,98,111,117,110,99,101,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,77,111,100,101,46,82,101,118,101,114,115,101,66,111,117,110,99,101,59,10,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,77,111,100,101,46,70,111,114,119,97,114,100,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,118,97,114,32,99,114,101,97,116,101,67,111,114,101,70,105,116,32,61,32,40,102,105,116,44,32,109,111,100,117,108,101,41,32,61,62,32,123,10,32,32,32,32,105,102,32,40,102,105,116,32,61,61,61,32,34,99,111,110,116,97,105,110,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,70,105,116,46,67,111,110,116,97,105,110,59,10,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,102,105,116,32,61,61,61,32,34,99,111,118,101,114,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,70,105,116,46,67,111,118,101,114,59,10,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,102,105,116,32,61,61,61,32,34,102,105,108,108,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,70,105,116,46,70,105,108,108,59,10,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,102,105,116,32,61,61,61,32,34,102,105,116,45,104,101,105,103,104,116,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,70,105,116,46,70,105,116,72,101,105,103,104,116,59,10,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,102,105,116,32,61,61,61,32,34,102,105,116,45,119,105,100,116,104,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,70,105,116,46,70,105,116,87,105,100,116,104,59,10,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,70,105,116,46,78,111,110,101,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,118,97,114,32,99,114,101,97,116,101,67,111,114,101,65,108,105,103,110,32,61,32,40,97,108,105,103,110,44,32,109,111,100,117,108,101,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,99,111,114,101,65,108,105,103,110,32,61,32,110,101,119,32,109,111,100,117,108,101,46,86,101,99,116,111,114,70,108,111,97,116,40,41,59,10,32,32,32,32,99,111,114,101,65,108,105,103,110,46,112,117,115,104,95,98,97,99,107,40,97,108,105,103,110,91,48,93,41,59,10,32,32,32,32,99,111,114,101,65,108,105,103,110,46,112,117,115,104,95,98,97,99,107,40,97,108,105,103,110,91,49,93,41,59,10,32,32,32,32,114,101,116,117,114,110,32,99,111,114,101,65,108,105,103,110,59,10,32,32,125,59,10,32,32,118,97,114,32,99,114,101,97,116,101,67,111,114,101,83,101,103,109,101,110,116,32,61,32,40,115,101,103,109,101,110,116,44,32,109,111,100,117,108,101,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,99,111,114,101,115,101,103,109,101,110,116,32,61,32,110,101,119,32,109,111,100,117,108,101,46,86,101,99,116,111,114,70,108,111,97,116,40,41,59,10,32,32,32,32,105,102,32,40,115,101,103,109,101,110,116,46,108,101,110,103,116,104,32,33,61,61,32,50,41,32,114,101,116,117,114,110,32,99,111,114,101,115,101,103,109,101,110,116,59,10,32,32,32,32,99,111,114,101,115,101,103,109,101,110,116,46,112,117,115,104,95,98,97,99,107,40,115,101,103,109,101,110,116,91,48,93,41,59,10,32,32,32,32,99,111,114,101,115,101,103,109,101,110,116,46,112,117,115,104,95,98,97,99,107,40,115,101,103,109,101,110,116,91,49,93,41,59,10,32,32,32,32,114,101,116,117,114,110,32,99,111,114,101,115,101,103,109,101,110,116,59,10,32,32,125,59,10,32,32,118,97,114,32,99,114,101,97,116,101,67,111,114,101,76,97,121,111,117,116,32,61,32,40,108,97,121,111,117,116,44,32,109,111,100,117,108,101,41,32,61,62,32,123,10,32,32,32,32,118,97,114,32,95,97,44,32,95,98,59,10,32,32,32,32,105,102,32,40,33,108,97,121,111,117,116,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,99,114,101,97,116,101,68,101,102,97,117,108,116,76,97,121,111,117,116,40,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,97,108,105,103,110,58,32,99,114,101,97,116,101,67,111,114,101,65,108,105,103,110,40,40,95,97,32,61,32,108,97,121,111,117,116,46,97,108,105,103,110,41,32,33,61,32,110,117,108,108,32,63,32,95,97,32,58,32,91,48,46,53,44,32,48,46,53,93,44,32,109,111,100,117,108,101,41,44,10,32,32,32,32,32,32,102,105,116,58,32,99,114,101,97,116,101,67,111,114,101,70,105,116,40,40,95,98,32,61,32,108,97,121,111,117,116,46,102,105,116,41,32,33,61,32,110,117,108,108,32,63,32,95,98,32,58,32,34,99,111,110,116,97,105,110,34,44,32,109,111,100,117,108,101,41,10,32,32,32,32,125,59,10,32,32,125,59,10,32,32,118,97,114,32,95,68,111,116,76,111,116,116,105,101,32,61,32,99,108,97,115,115,32,95,68,111,116,76,111,116,116,105,101,32,123,10,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,99,111,110,102,105,103,41,32,123,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,99,97,110,118,97,115,34,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,99,111,110,116,101,120,116,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,101,118,101,110,116,77,97,110,97,103,101,114,34,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,102,114,97,109,101,77,97,110,97,103,101,114,34,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,100,111,116,76,111,116,116,105,101,67,111,114,101,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,114,101,110,100,101,114,67,111,110,102,105,103,34,44,32,123,125,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,105,115,70,114,111,122,101,110,34,44,32,102,97,108,115,101,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,112,111,105,110,116,101,114,85,112,77,101,116,104,111,100,34,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,112,111,105,110,116,101,114,68,111,119,110,77,101,116,104,111,100,34,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,112,111,105,110,116,101,114,77,111,118,101,77,101,116,104,111,100,34,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,112,111,105,110,116,101,114,69,110,116,101,114,77,101,116,104,111,100,34,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,112,111,105,110,116,101,114,69,120,105,116,77,101,116,104,111,100,34,41,59,10,32,32,32,32,32,32,118,97,114,32,95,97,44,32,95,98,44,32,95,99,59,10,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,32,61,32,99,111,110,102,105,103,46,99,97,110,118,97,115,59,10,32,32,32,32,32,32,116,104,105,115,46,95,99,111,110,116,101,120,116,32,61,32,116,104,105,115,46,95,99,97,110,118,97,115,46,103,101,116,67,111,110,116,101,120,116,40,34,50,100,34,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,32,61,32,110,101,119,32,69,118,101,110,116,77,97,110,97,103,101,114,40,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,102,114,97,109,101,77,97,110,97,103,101,114,32,61,32,110,101,119,32,65,110,105,109,97,116,105,111,110,70,114,97,109,101,77,97,110,97,103,101,114,40,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,32,61,32,95,95,115,112,114,101,97,100,80,114,111,112,115,40,95,95,115,112,114,101,97,100,86,97,108,117,101,115,40,123,125,44,32,99,111,110,102,105,103,46,114,101,110,100,101,114,67,111,110,102,105,103,41,44,32,123,10,32,32,32,32,32,32,32,32,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,58,32,40,40,95,97,32,61,32,99,111,110,102,105,103,46,114,101,110,100,101,114,67,111,110,102,105,103,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,41,32,124,124,32,103,101,116,68,101,102,97,117,108,116,68,80,82,40,41,44,10,32,32,32,32,32,32,32,32,47,47,32,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,32,105,115,32,116,114,117,101,32,98,121,32,100,101,102,97,117,108,116,32,116,111,32,112,114,101,118,101,110,116,32,117,110,110,101,99,101,115,115,97,114,121,32,114,101,110,100,101,114,105,110,103,32,119,104,101,110,32,116,104,101,32,99,97,110,118,97,115,32,105,115,32,111,102,102,115,99,114,101,101,110,10,32,32,32,32,32,32,32,32,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,58,32,40,95,99,32,61,32,40,95,98,32,61,32,99,111,110,102,105,103,46,114,101,110,100,101,114,67,111,110,102,105,103,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,98,46,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,41,32,33,61,32,110,117,108,108,32,63,32,95,99,32,58,32,116,114,117,101,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,68,111,116,76,111,116,116,105,101,87,97,115,109,76,111,97,100,101,114,46,108,111,97,100,40,41,46,116,104,101,110,40,40,109,111,100,117,108,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,95,97,50,44,32,95,98,50,44,32,95,99,50,44,32,95,100,44,32,95,101,44,32,95,102,44,32,95,103,44,32,95,104,59,10,32,32,32,32,32,32,32,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,32,61,32,109,111,100,117,108,101,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,32,110,101,119,32,109,111,100,117,108,101,46,68,111,116,76,111,116,116,105,101,80,108,97,121,101,114,40,123,10,32,32,32,32,32,32,32,32,32,32,116,104,101,109,101,73,100,58,32,40,95,97,50,32,61,32,99,111,110,102,105,103,46,116,104,101,109,101,73,100,41,32,33,61,32,110,117,108,108,32,63,32,95,97,50,32,58,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,97,117,116,111,112,108,97,121,58,32,40,95,98,50,32,61,32,99,111,110,102,105,103,46,97,117,116,111,112,108,97,121,41,32,33,61,32,110,117,108,108,32,63,32,95,98,50,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,58,32,48,44,10,32,32,32,32,32,32,32,32,32,32,108,111,111,112,65,110,105,109,97,116,105,111,110,58,32,40,95,99,50,32,61,32,99,111,110,102,105,103,46,108,111,111,112,41,32,33,61,32,110,117,108,108,32,63,32,95,99,50,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,109,111,100,101,58,32,99,114,101,97,116,101,67,111,114,101,77,111,100,101,40,40,95,100,32,61,32,99,111,110,102,105,103,46,109,111,100,101,41,32,33,61,32,110,117,108,108,32,63,32,95,100,32,58,32,34,102,111,114,119,97,114,100,34,44,32,109,111,100,117,108,101,41,44,10,32,32,32,32,32,32,32,32,32,32,115,101,103,109,101,110,116,58,32,99,114,101,97,116,101,67,111,114,101,83,101,103,109,101,110,116,40,40,95,101,32,61,32,99,111,110,102,105,103,46,115,101,103,109,101,110,116,41,32,33,61,32,110,117,108,108,32,63,32,95,101,32,58,32,91,93,44,32,109,111,100,117,108,101,41,44,10,32,32,32,32,32,32,32,32,32,32,115,112,101,101,100,58,32,40,95,102,32,61,32,99,111,110,102,105,103,46,115,112,101,101,100,41,32,33,61,32,110,117,108,108,32,63,32,95,102,32,58,32,49,44,10,32,32,32,32,32,32,32,32,32,32,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,58,32,40,95,103,32,61,32,99,111,110,102,105,103,46,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,41,32,33,61,32,110,117,108,108,32,63,32,95,103,32,58,32,116,114,117,101,44,10,32,32,32,32,32,32,32,32,32,32,109,97,114,107,101,114,58,32,40,95,104,32,61,32,99,111,110,102,105,103,46,109,97,114,107,101,114,41,32,33,61,32,110,117,108,108,32,63,32,95,104,32,58,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,108,97,121,111,117,116,58,32,99,114,101,97,116,101,67,111,114,101,76,97,121,111,117,116,40,99,111,110,102,105,103,46,108,97,121,111,117,116,44,32,109,111,100,117,108,101,41,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,114,101,97,100,121,34,32,125,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,99,111,110,102,105,103,46,100,97,116,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,108,111,97,100,70,114,111,109,68,97,116,97,40,99,111,110,102,105,103,46,100,97,116,97,41,59,10,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,99,111,110,102,105,103,46,115,114,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,108,111,97,100,70,114,111,109,83,114,99,40,99,111,110,102,105,103,46,115,114,99,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,99,111,110,102,105,103,46,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,115,101,116,66,97,99,107,103,114,111,117,110,100,67,111,108,111,114,40,99,111,110,102,105,103,46,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,41,46,99,97,116,99,104,40,40,101,114,114,111,114,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,108,111,97,100,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,58,32,110,101,119,32,69,114,114,111,114,40,96,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,119,97,115,109,32,109,111,100,117,108,101,58,32,36,123,101,114,114,111,114,125,96,41,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,112,111,105,110,116,101,114,85,112,77,101,116,104,111,100,32,61,32,116,104,105,115,46,95,111,110,80,111,105,110,116,101,114,85,112,46,98,105,110,100,40,116,104,105,115,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,112,111,105,110,116,101,114,68,111,119,110,77,101,116,104,111,100,32,61,32,116,104,105,115,46,95,111,110,80,111,105,110,116,101,114,68,111,119,110,46,98,105,110,100,40,116,104,105,115,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,112,111,105,110,116,101,114,77,111,118,101,77,101,116,104,111,100,32,61,32,116,104,105,115,46,95,111,110,80,111,105,110,116,101,114,77,111,118,101,46,98,105,110,100,40,116,104,105,115,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,112,111,105,110,116,101,114,69,110,116,101,114,77,101,116,104,111,100,32,61,32,116,104,105,115,46,95,111,110,80,111,105,110,116,101,114,69,110,116,101,114,46,98,105,110,100,40,116,104,105,115,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,112,111,105,110,116,101,114,69,120,105,116,77,101,116,104,111,100,32,61,32,116,104,105,115,46,95,111,110,80,111,105,110,116,101,114,76,101,97,118,101,46,98,105,110,100,40,116,104,105,115,41,59,10,32,32,32,32,125,10,32,32,32,32,95,100,105,115,112,97,116,99,104,69,114,114,111,114,40,109,101,115,115,97,103,101,41,32,123,10,32,32,32,32,32,32,99,111,110,115,111,108,101,46,101,114,114,111,114,40,109,101,115,115,97,103,101,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,108,111,97,100,69,114,114,111,114,34,44,32,101,114,114,111,114,58,32,110,101,119,32,69,114,114,111,114,40,109,101,115,115,97,103,101,41,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,95,102,101,116,99,104,68,97,116,97,40,115,114,99,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,95,95,97,115,121,110,99,40,116,104,105,115,44,32,110,117,108,108,44,32,102,117,110,99,116,105,111,110,42,32,40,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,121,105,101,108,100,32,102,101,116,99,104,40,115,114,99,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,114,101,115,112,111,110,115,101,46,111,107,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,70,97,105,108,101,100,32,116,111,32,102,101,116,99,104,32,97,110,105,109,97,116,105,111,110,32,100,97,116,97,32,102,114,111,109,32,85,82,76,58,32,36,123,115,114,99,125,46,32,36,123,114,101,115,112,111,110,115,101,46,115,116,97,116,117,115,125,58,32,36,123,114,101,115,112,111,110,115,101,46,115,116,97,116,117,115,84,101,120,116,125,96,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,100,97,116,97,32,61,32,121,105,101,108,100,32,114,101,115,112,111,110,115,101,46,97,114,114,97,121,66,117,102,102,101,114,40,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,105,115,68,111,116,76,111,116,116,105,101,40,100,97,116,97,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,100,97,116,97,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,101,119,32,84,101,120,116,68,101,99,111,100,101,114,40,41,46,100,101,99,111,100,101,40,100,97,116,97,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,95,108,111,97,100,70,114,111,109,68,97,116,97,40,100,97,116,97,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,119,105,100,116,104,32,61,32,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,59,10,32,32,32,32,32,32,99,111,110,115,116,32,104,101,105,103,104,116,32,61,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,59,10,32,32,32,32,32,32,108,101,116,32,108,111,97,100,101,100,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,105,102,32,40,116,121,112,101,111,102,32,100,97,116,97,32,61,61,61,32,34,115,116,114,105,110,103,34,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,105,115,76,111,116,116,105,101,40,100,97,116,97,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,105,115,112,97,116,99,104,69,114,114,111,114,40,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,110,118,97,108,105,100,32,76,111,116,116,105,101,32,74,83,79,78,32,115,116,114,105,110,103,58,32,84,104,101,32,112,114,111,118,105,100,101,100,32,115,116,114,105,110,103,32,100,111,101,115,32,110,111,116,32,99,111,110,102,111,114,109,32,116,111,32,116,104,101,32,76,111,116,116,105,101,32,74,83,79,78,32,102,111,114,109,97,116,46,34,10,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,108,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,108,111,97,100,65,110,105,109,97,116,105,111,110,68,97,116,97,40,100,97,116,97,44,32,119,105,100,116,104,44,32,104,101,105,103,104,116,41,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,100,97,116,97,32,105,110,115,116,97,110,99,101,111,102,32,65,114,114,97,121,66,117,102,102,101,114,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,105,115,68,111,116,76,111,116,116,105,101,40,100,97,116,97,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,105,115,112,97,116,99,104,69,114,114,111,114,40,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,110,118,97,108,105,100,32,100,111,116,76,111,116,116,105,101,32,65,114,114,97,121,66,117,102,102,101,114,58,32,84,104,101,32,112,114,111,118,105,100,101,100,32,65,114,114,97,121,66,117,102,102,101,114,32,100,111,101,115,32,110,111,116,32,99,111,110,102,111,114,109,32,116,111,32,116,104,101,32,100,111,116,76,111,116,116,105,101,32,102,111,114,109,97,116,46,34,10,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,108,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,108,111,97,100,68,111,116,76,111,116,116,105,101,68,97,116,97,40,100,97,116,97,44,32,119,105,100,116,104,44,32,104,101,105,103,104,116,41,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,116,121,112,101,111,102,32,100,97,116,97,32,61,61,61,32,34,111,98,106,101,99,116,34,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,105,115,76,111,116,116,105,101,40,100,97,116,97,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,105,115,112,97,116,99,104,69,114,114,111,114,40,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,110,118,97,108,105,100,32,76,111,116,116,105,101,32,74,83,79,78,32,111,98,106,101,99,116,58,32,84,104,101,32,112,114,111,118,105,100,101,100,32,111,98,106,101,99,116,32,100,111,101,115,32,110,111,116,32,99,111,110,102,111,114,109,32,116,111,32,116,104,101,32,76,111,116,116,105,101,32,74,83,79,78,32,102,111,114,109,97,116,46,34,10,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,108,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,108,111,97,100,65,110,105,109,97,116,105,111,110,68,97,116,97,40,74,83,79,78,46,115,116,114,105,110,103,105,102,121,40,100,97,116,97,41,44,32,119,105,100,116,104,44,32,104,101,105,103,104,116,41,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,105,115,112,97,116,99,104,69,114,114,111,114,40,10,32,32,32,32,32,32,32,32,32,32,96,85,110,115,117,112,112,111,114,116,101,100,32,100,97,116,97,32,116,121,112,101,32,102,111,114,32,97,110,105,109,97,116,105,111,110,32,100,97,116,97,46,32,69,120,112,101,99,116,101,100,58,32,10,32,32,32,32,32,32,32,32,32,32,45,32,115,116,114,105,110,103,32,40,76,111,116,116,105,101,32,74,83,79,78,41,44,10,32,32,32,32,32,32,32,32,32,32,45,32,65,114,114,97,121,66,117,102,102,101,114,32,40,100,111,116,76,111,116,116,105,101,41,44,10,32,32,32,32,32,32,32,32,32,32,45,32,111,98,106,101,99,116,32,40,76,111,116,116,105,101,32,74,83,79,78,41,46,32,10,32,32,32,32,32,32,32,32,32,32,82,101,99,101,105,118,101,100,58,32,36,123,116,121,112,101,111,102,32,100,97,116,97,125,96,10,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,108,111,97,100,101,100,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,108,111,97,100,34,32,125,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,114,101,115,105,122,101,40,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,102,114,97,109,101,34,44,10,32,32,32,32,32,32,32,32,32,32,99,117,114,114,101,110,116,70,114,97,109,101,58,32,116,104,105,115,46,99,117,114,114,101,110,116,70,114,97,109,101,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,114,101,110,100,101,114,40,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,46,97,117,116,111,112,108,97,121,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,112,108,97,121,40,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,105,115,80,108,97,121,105,110,103,40,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,112,108,97,121,34,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,61,32,116,104,105,115,46,95,102,114,97,109,101,77,97,110,97,103,101,114,46,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,116,104,105,115,46,95,100,114,97,119,46,98,105,110,100,40,116,104,105,115,41,41,59,10,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,111,108,101,46,101,114,114,111,114,40,34,115,111,109,101,116,104,105,110,103,32,119,101,110,116,32,119,114,111,110,103,44,32,116,104,101,32,97,110,105,109,97,116,105,111,110,32,119,97,115,32,115,117,112,112,111,115,101,32,116,111,32,97,117,116,111,112,108,97,121,34,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,46,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,44,32,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,97,117,116,111,82,101,115,105,122,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,46,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,44,32,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,105,115,112,97,116,99,104,69,114,114,111,114,40,34,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,97,110,105,109,97,116,105,111,110,32,100,97,116,97,34,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,108,111,97,100,70,114,111,109,83,114,99,40,115,114,99,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,102,101,116,99,104,68,97,116,97,40,115,114,99,41,46,116,104,101,110,40,40,100,97,116,97,41,32,61,62,32,116,104,105,115,46,95,108,111,97,100,70,114,111,109,68,97,116,97,40,100,97,116,97,41,41,46,99,97,116,99,104,40,40,101,114,114,111,114,41,32,61,62,32,116,104,105,115,46,95,100,105,115,112,97,116,99,104,69,114,114,111,114,40,96,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,97,110,105,109,97,116,105,111,110,32,100,97,116,97,32,102,114,111,109,32,85,82,76,58,32,36,123,115,114,99,125,46,32,36,123,101,114,114,111,114,125,96,41,41,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,97,99,116,105,118,101,65,110,105,109,97,116,105,111,110,73,100,40,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,97,99,116,105,118,101,65,110,105,109,97,116,105,111,110,73,100,40,41,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,97,99,116,105,118,101,84,104,101,109,101,73,100,40,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,97,99,116,105,118,101,84,104,101,109,101,73,100,40,41,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,108,97,121,111,117,116,40,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,97,121,111,117,116,32,61,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,99,111,110,102,105,103,40,41,46,108,97,121,111,117,116,59,10,32,32,32,32,32,32,105,102,32,40,108,97,121,111,117,116,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,32,32,97,108,105,103,110,58,32,91,108,97,121,111,117,116,46,97,108,105,103,110,46,103,101,116,40,48,41,44,32,108,97,121,111,117,116,46,97,108,105,103,110,46,103,101,116,40,49,41,93,44,10,32,32,32,32,32,32,32,32,32,32,102,105,116,58,32,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,95,97,50,44,32,95,98,44,32,95,99,44,32,95,100,44,32,95,101,44,32,95,102,59,10,32,32,32,32,32,32,32,32,32,32,32,32,115,119,105,116,99,104,32,40,108,97,121,111,117,116,46,102,105,116,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,40,40,95,97,50,32,61,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,50,46,70,105,116,46,67,111,110,116,97,105,110,41,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,99,111,110,116,97,105,110,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,40,40,95,98,32,61,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,98,46,70,105,116,46,67,111,118,101,114,41,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,99,111,118,101,114,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,40,40,95,99,32,61,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,99,46,70,105,116,46,70,105,108,108,41,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,102,105,108,108,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,40,40,95,100,32,61,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,100,46,70,105,116,46,70,105,116,72,101,105,103,104,116,41,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,102,105,116,45,104,101,105,103,104,116,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,40,40,95,101,32,61,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,101,46,70,105,116,46,70,105,116,87,105,100,116,104,41,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,102,105,116,45,119,105,100,116,104,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,40,40,95,102,32,61,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,102,46,70,105,116,46,78,111,110,101,41,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,110,111,110,101,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,101,102,97,117,108,116,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,99,111,110,116,97,105,110,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,41,40,41,10,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,118,111,105,100,32,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,109,97,114,107,101,114,40,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,59,10,32,32,32,32,32,32,99,111,110,115,116,32,109,97,114,107,101,114,32,61,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,99,111,110,102,105,103,40,41,46,109,97,114,107,101,114,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,97,114,107,101,114,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,109,97,110,105,102,101,115,116,40,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,59,10,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,109,97,110,105,102,101,115,116,32,61,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,109,97,110,105,102,101,115,116,83,116,114,105,110,103,40,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,33,109,97,110,105,102,101,115,116,41,32,114,101,116,117,114,110,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,109,97,110,105,102,101,115,116,74,115,111,110,32,61,32,74,83,79,78,46,112,97,114,115,101,40,109,97,110,105,102,101,115,116,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,79,98,106,101,99,116,46,107,101,121,115,40,109,97,110,105,102,101,115,116,74,115,111,110,41,46,108,101,110,103,116,104,32,61,61,61,32,48,41,32,114,101,116,117,114,110,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,109,97,110,105,102,101,115,116,74,115,111,110,59,10,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,95,101,114,114,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,114,101,110,100,101,114,67,111,110,102,105,103,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,115,101,103,109,101,110,116,40,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,101,103,109,101,110,116,32,61,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,99,111,110,102,105,103,40,41,46,115,101,103,109,101,110,116,59,10,32,32,32,32,32,32,105,102,32,40,115,101,103,109,101,110,116,32,38,38,32,115,101,103,109,101,110,116,46,115,105,122,101,40,41,32,61,61,61,32,50,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,115,101,103,109,101,110,116,46,103,101,116,40,48,41,44,32,115,101,103,109,101,110,116,46,103,101,116,40,49,41,93,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,118,111,105,100,32,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,108,111,111,112,40,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,44,32,95,98,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,40,95,98,32,61,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,99,111,110,102,105,103,40,41,46,108,111,111,112,65,110,105,109,97,116,105,111,110,41,32,33,61,32,110,117,108,108,32,63,32,95,98,32,58,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,109,111,100,101,40,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,44,32,95,98,44,32,95,99,44,32,95,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,109,111,100,101,32,61,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,99,111,110,102,105,103,40,41,46,109,111,100,101,59,10,32,32,32,32,32,32,105,102,32,40,109,111,100,101,32,61,61,61,32,40,40,95,98,32,61,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,98,46,77,111,100,101,46,82,101,118,101,114,115,101,41,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,114,101,118,101,114,115,101,34,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,109,111,100,101,32,61,61,61,32,40,40,95,99,32,61,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,99,46,77,111,100,101,46,66,111,117,110,99,101,41,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,98,111,117,110,99,101,34,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,109,111,100,101,32,61,61,61,32,40,40,95,100,32,61,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,100,46,77,111,100,101,46,82,101,118,101,114,115,101,66,111,117,110,99,101,41,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,114,101,118,101,114,115,101,45,98,111,117,110,99,101,34,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,102,111,114,119,97,114,100,34,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,105,115,70,114,111,122,101,110,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,105,115,70,114,111,122,101,110,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,40,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,40,95,97,32,61,32,116,104,105,115,46,95,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,41,32,33,61,32,110,117,108,108,32,63,32,95,97,32,58,32,34,34,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,97,117,116,111,112,108,97,121,40,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,44,32,95,98,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,40,95,98,32,61,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,99,111,110,102,105,103,40,41,46,97,117,116,111,112,108,97,121,41,32,33,61,32,110,117,108,108,32,63,32,95,98,32,58,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,44,32,95,98,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,40,95,98,32,61,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,99,111,110,102,105,103,40,41,46,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,41,32,33,61,32,110,117,108,108,32,63,32,95,98,32,58,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,115,112,101,101,100,40,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,44,32,95,98,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,40,95,98,32,61,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,99,111,110,102,105,103,40,41,46,115,112,101,101,100,41,32,33,61,32,110,117,108,108,32,63,32,95,98,32,58,32,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,105,115,82,101,97,100,121,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,33,61,61,32,110,117,108,108,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,105,115,76,111,97,100,101,100,40,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,44,32,95,98,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,40,95,98,32,61,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,105,115,76,111,97,100,101,100,40,41,41,32,33,61,32,110,117,108,108,32,63,32,95,98,32,58,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,105,115,80,108,97,121,105,110,103,40,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,44,32,95,98,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,40,95,98,32,61,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,105,115,80,108,97,121,105,110,103,40,41,41,32,33,61,32,110,117,108,108,32,63,32,95,98,32,58,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,105,115,80,97,117,115,101,100,40,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,44,32,95,98,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,40,95,98,32,61,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,105,115,80,97,117,115,101,100,40,41,41,32,33,61,32,110,117,108,108,32,63,32,95,98,32,58,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,105,115,83,116,111,112,112,101,100,40,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,44,32,95,98,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,40,95,98,32,61,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,105,115,83,116,111,112,112,101,100,40,41,41,32,33,61,32,110,117,108,108,32,63,32,95,98,32,58,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,99,117,114,114,101,110,116,70,114,97,109,101,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,77,97,116,104,46,114,111,117,110,100,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,117,114,114,101,110,116,70,114,97,109,101,40,41,32,42,32,49,48,48,41,32,47,32,49,48,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,108,111,111,112,67,111,117,110,116,40,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,44,32,95,98,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,40,95,98,32,61,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,108,111,111,112,67,111,117,110,116,40,41,41,32,33,61,32,110,117,108,108,32,63,32,95,98,32,58,32,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,116,111,116,97,108,70,114,97,109,101,115,40,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,44,32,95,98,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,40,95,98,32,61,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,116,111,116,97,108,70,114,97,109,101,115,40,41,41,32,33,61,32,110,117,108,108,32,63,32,95,98,32,58,32,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,100,117,114,97,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,44,32,95,98,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,40,95,98,32,61,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,100,117,114,97,116,105,111,110,40,41,41,32,33,61,32,110,117,108,108,32,63,32,95,98,32,58,32,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,115,101,103,109,101,110,116,68,117,114,97,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,44,32,95,98,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,40,95,98,32,61,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,115,101,103,109,101,110,116,68,117,114,97,116,105,111,110,40,41,41,32,33,61,32,110,117,108,108,32,63,32,95,98,32,58,32,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,99,97,110,118,97,115,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,99,97,110,118,97,115,59,10,32,32,32,32,125,10,32,32,32,32,108,111,97,100,40,99,111,110,102,105,103,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,44,32,95,98,44,32,95,99,44,32,95,100,44,32,95,101,44,32,95,102,44,32,95,103,44,32,95,104,44,32,95,105,59,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,33,61,61,32,110,117,108,108,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,102,114,97,109,101,77,97,110,97,103,101,114,46,99,97,110,99,101,108,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,116,104,101,109,101,73,100,58,32,40,95,97,32,61,32,99,111,110,102,105,103,46,116,104,101,109,101,73,100,41,32,33,61,32,110,117,108,108,32,63,32,95,97,32,58,32,34,34,44,10,32,32,32,32,32,32,32,32,97,117,116,111,112,108,97,121,58,32,40,95,98,32,61,32,99,111,110,102,105,103,46,97,117,116,111,112,108,97,121,41,32,33,61,32,110,117,108,108,32,63,32,95,98,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,58,32,48,44,10,32,32,32,32,32,32,32,32,108,111,111,112,65,110,105,109,97,116,105,111,110,58,32,40,95,99,32,61,32,99,111,110,102,105,103,46,108,111,111,112,41,32,33,61,32,110,117,108,108,32,63,32,95,99,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,109,111,100,101,58,32,99,114,101,97,116,101,67,111,114,101,77,111,100,101,40,40,95,100,32,61,32,99,111,110,102,105,103,46,109,111,100,101,41,32,33,61,32,110,117,108,108,32,63,32,95,100,32,58,32,34,102,111,114,119,97,114,100,34,44,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,44,10,32,32,32,32,32,32,32,32,115,101,103,109,101,110,116,58,32,99,114,101,97,116,101,67,111,114,101,83,101,103,109,101,110,116,40,40,95,101,32,61,32,99,111,110,102,105,103,46,115,101,103,109,101,110,116,41,32,33,61,32,110,117,108,108,32,63,32,95,101,32,58,32,91,93,44,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,44,10,32,32,32,32,32,32,32,32,115,112,101,101,100,58,32,40,95,102,32,61,32,99,111,110,102,105,103,46,115,112,101,101,100,41,32,33,61,32,110,117,108,108,32,63,32,95,102,32,58,32,49,44,10,32,32,32,32,32,32,32,32,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,58,32,40,95,103,32,61,32,99,111,110,102,105,103,46,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,41,32,33,61,32,110,117,108,108,32,63,32,95,103,32,58,32,116,114,117,101,44,10,32,32,32,32,32,32,32,32,109,97,114,107,101,114,58,32,40,95,104,32,61,32,99,111,110,102,105,103,46,109,97,114,107,101,114,41,32,33,61,32,110,117,108,108,32,63,32,95,104,32,58,32,34,34,44,10,32,32,32,32,32,32,32,32,108,97,121,111,117,116,58,32,99,114,101,97,116,101,67,111,114,101,76,97,121,111,117,116,40,99,111,110,102,105,103,46,108,97,121,111,117,116,44,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,105,102,32,40,99,111,110,102,105,103,46,100,97,116,97,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,108,111,97,100,70,114,111,109,68,97,116,97,40,99,111,110,102,105,103,46,100,97,116,97,41,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,99,111,110,102,105,103,46,115,114,99,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,108,111,97,100,70,114,111,109,83,114,99,40,99,111,110,102,105,103,46,115,114,99,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,116,104,105,115,46,115,101,116,66,97,99,107,103,114,111,117,110,100,67,111,108,111,114,40,40,95,105,32,61,32,99,111,110,102,105,103,46,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,41,32,33,61,32,110,117,108,108,32,63,32,95,105,32,58,32,34,34,41,59,10,32,32,32,32,125,10,32,32,32,32,95,114,101,110,100,101,114,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,116,104,105,115,46,95,99,111,110,116,101,120,116,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,110,100,101,114,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,110,100,101,114,40,41,59,10,32,32,32,32,32,32,105,102,32,40,114,101,110,100,101,114,101,100,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,98,117,102,102,101,114,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,98,117,102,102,101,114,40,41,59,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,99,108,97,109,112,101,100,66,117,102,102,101,114,32,61,32,110,101,119,32,85,105,110,116,56,67,108,97,109,112,101,100,65,114,114,97,121,40,98,117,102,102,101,114,44,32,48,44,32,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,32,42,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,32,42,32,52,41,59,10,32,32,32,32,32,32,32,32,108,101,116,32,105,109,97,103,101,68,97,116,97,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,105,102,32,40,116,121,112,101,111,102,32,73,109,97,103,101,68,97,116,97,32,61,61,61,32,34,117,110,100,101,102,105,110,101,100,34,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,109,97,103,101,68,97,116,97,32,61,32,116,104,105,115,46,95,99,111,110,116,101,120,116,46,99,114,101,97,116,101,73,109,97,103,101,68,97,116,97,40,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,44,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,41,59,10,32,32,32,32,32,32,32,32,32,32,105,109,97,103,101,68,97,116,97,46,100,97,116,97,46,115,101,116,40,99,108,97,109,112,101,100,66,117,102,102,101,114,41,59,10,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,105,109,97,103,101,68,97,116,97,32,61,32,110,101,119,32,73,109,97,103,101,68,97,116,97,40,99,108,97,109,112,101,100,66,117,102,102,101,114,44,32,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,44,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,111,110,116,101,120,116,46,112,117,116,73,109,97,103,101,68,97,116,97,40,105,109,97,103,101,68,97,116,97,44,32,48,44,32,48,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,114,101,110,100,101,114,34,44,10,32,32,32,32,32,32,32,32,32,32,99,117,114,114,101,110,116,70,114,97,109,101,58,32,116,104,105,115,46,99,117,114,114,101,110,116,70,114,97,109,101,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,114,117,101,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,95,100,114,97,119,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,116,104,105,115,46,95,99,111,110,116,101,120,116,32,61,61,61,32,110,117,108,108,32,124,124,32,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,105,115,80,108,97,121,105,110,103,40,41,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,110,101,120,116,70,114,97,109,101,32,61,32,77,97,116,104,46,114,111,117,110,100,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,113,117,101,115,116,70,114,97,109,101,40,41,32,42,32,49,101,51,41,32,47,32,49,101,51,59,10,32,32,32,32,32,32,99,111,110,115,116,32,117,112,100,97,116,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,70,114,97,109,101,40,110,101,120,116,70,114,97,109,101,41,59,10,32,32,32,32,32,32,105,102,32,40,117,112,100,97,116,101,100,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,102,114,97,109,101,34,44,10,32,32,32,32,32,32,32,32,32,32,99,117,114,114,101,110,116,70,114,97,109,101,58,32,116,104,105,115,46,99,117,114,114,101,110,116,70,114,97,109,101,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,114,101,110,100,101,114,101,100,32,61,32,116,104,105,115,46,95,114,101,110,100,101,114,40,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,114,101,110,100,101,114,101,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,105,115,67,111,109,112,108,101,116,101,40,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,46,108,111,111,112,65,110,105,109,97,116,105,111,110,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,108,111,111,112,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,111,112,67,111,117,110,116,58,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,108,111,111,112,67,111,117,110,116,40,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,99,111,109,112,108,101,116,101,34,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,61,32,116,104,105,115,46,95,102,114,97,109,101,77,97,110,97,103,101,114,46,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,116,104,105,115,46,95,100,114,97,119,46,98,105,110,100,40,116,104,105,115,41,41,59,10,32,32,32,32,125,10,32,32,32,32,112,108,97,121,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,111,107,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,112,108,97,121,40,41,59,10,32,32,32,32,32,32,105,102,32,40,111,107,32,124,124,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,105,115,80,108,97,121,105,110,103,40,41,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,105,115,70,114,111,122,101,110,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,112,108,97,121,34,32,125,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,61,32,116,104,105,115,46,95,102,114,97,109,101,77,97,110,97,103,101,114,46,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,116,104,105,115,46,95,100,114,97,119,46,98,105,110,100,40,116,104,105,115,41,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,32,38,38,32,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,32,38,38,32,33,105,115,69,108,101,109,101,110,116,73,110,86,105,101,119,112,111,114,116,40,116,104,105,115,46,95,99,97,110,118,97,115,41,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,102,114,101,101,122,101,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,112,97,117,115,101,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,111,107,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,112,97,117,115,101,40,41,59,10,32,32,32,32,32,32,105,102,32,40,111,107,32,124,124,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,105,115,80,97,117,115,101,100,40,41,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,112,97,117,115,101,34,32,125,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,115,116,111,112,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,111,107,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,116,111,112,40,41,59,10,32,32,32,32,32,32,105,102,32,40,111,107,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,102,114,97,109,101,34,44,32,99,117,114,114,101,110,116,70,114,97,109,101,58,32,116,104,105,115,46,99,117,114,114,101,110,116,70,114,97,109,101,32,125,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,114,101,110,100,101,114,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,111,112,34,32,125,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,115,101,116,70,114,97,109,101,40,102,114,97,109,101,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,105,102,32,40,102,114,97,109,101,32,60,32,48,32,124,124,32,102,114,97,109,101,32,62,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,116,111,116,97,108,70,114,97,109,101,115,40,41,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,111,107,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,101,107,40,102,114,97,109,101,41,59,10,32,32,32,32,32,32,105,102,32,40,111,107,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,102,114,97,109,101,34,44,32,99,117,114,114,101,110,116,70,114,97,109,101,58,32,116,104,105,115,46,99,117,114,114,101,110,116,70,114,97,109,101,32,125,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,114,101,110,100,101,114,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,115,101,116,83,112,101,101,100,40,115,112,101,101,100,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,95,95,115,112,114,101,97,100,80,114,111,112,115,40,95,95,115,112,114,101,97,100,86,97,108,117,101,115,40,123,125,44,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,41,44,32,123,10,32,32,32,32,32,32,32,32,115,112,101,101,100,10,32,32,32,32,32,32,125,41,41,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,66,97,99,107,103,114,111,117,110,100,67,111,108,111,114,40,99,111,108,111,114,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,115,116,121,108,101,46,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,32,61,32,99,111,108,111,114,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,95,95,115,112,114,101,97,100,80,114,111,112,115,40,95,95,115,112,114,101,97,100,86,97,108,117,101,115,40,123,125,44,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,41,44,32,123,10,32,32,32,32,32,32,32,32,32,32,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,58,32,104,101,120,83,116,114,105,110,103,84,111,82,71,66,65,73,110,116,40,99,111,108,111,114,41,10,32,32,32,32,32,32,32,32,125,41,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,116,104,105,115,46,95,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,32,61,32,99,111,108,111,114,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,76,111,111,112,40,108,111,111,112,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,95,95,115,112,114,101,97,100,80,114,111,112,115,40,95,95,115,112,114,101,97,100,86,97,108,117,101,115,40,123,125,44,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,41,44,32,123,10,32,32,32,32,32,32,32,32,108,111,111,112,65,110,105,109,97,116,105,111,110,58,32,108,111,111,112,10,32,32,32,32,32,32,125,41,41,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,85,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,40,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,95,95,115,112,114,101,97,100,80,114,111,112,115,40,95,95,115,112,114,101,97,100,86,97,108,117,101,115,40,123,125,44,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,41,44,32,123,10,32,32,32,32,32,32,32,32,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,10,32,32,32,32,32,32,125,41,41,59,10,32,32,32,32,125,10,32,32,32,32,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,116,121,112,101,44,32,108,105,115,116,101,110,101,114,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,116,121,112,101,44,32,108,105,115,116,101,110,101,114,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,116,121,112,101,44,32,108,105,115,116,101,110,101,114,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,116,121,112,101,44,32,108,105,115,116,101,110,101,114,41,59,10,32,32,32,32,125,10,32,32,32,32,100,101,115,116,114,111,121,40,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,59,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,46,117,110,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,32,32,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,46,117,110,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,100,101,108,101,116,101,40,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,116,104,105,115,46,95,99,111,110,116,101,120,116,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,100,101,115,116,114,111,121,34,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,114,101,109,111,118,101,65,108,108,69,118,101,110,116,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,125,10,32,32,32,32,102,114,101,101,122,101,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,102,114,97,109,101,77,97,110,97,103,101,114,46,99,97,110,99,101,108,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,116,104,105,115,46,95,105,115,70,114,111,122,101,110,32,61,32,116,114,117,101,59,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,102,114,101,101,122,101,34,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,117,110,102,114,101,101,122,101,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,33,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,61,32,116,104,105,115,46,95,102,114,97,109,101,77,97,110,97,103,101,114,46,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,116,104,105,115,46,95,100,114,97,119,46,98,105,110,100,40,116,104,105,115,41,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,105,115,70,114,111,122,101,110,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,117,110,102,114,101,101,122,101,34,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,115,105,122,101,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,124,124,32,33,116,104,105,115,46,105,115,76,111,97,100,101,100,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,100,112,114,32,61,32,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,32,124,124,32,119,105,110,100,111,119,46,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,32,124,124,32,49,59,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,123,32,104,101,105,103,104,116,58,32,99,108,105,101,110,116,72,101,105,103,104,116,44,32,119,105,100,116,104,58,32,99,108,105,101,110,116,87,105,100,116,104,32,125,32,61,32,116,104,105,115,46,95,99,97,110,118,97,115,46,103,101,116,66,111,117,110,100,105,110,103,67,108,105,101,110,116,82,101,99,116,40,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,99,108,105,101,110,116,72,101,105,103,104,116,32,33,61,61,32,48,32,38,38,32,99,108,105,101,110,116,87,105,100,116,104,32,33,61,61,32,48,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,32,61,32,99,108,105,101,110,116,87,105,100,116,104,32,42,32,100,112,114,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,32,61,32,99,108,105,101,110,116,72,101,105,103,104,116,32,42,32,100,112,114,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,111,110,115,116,32,111,107,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,115,105,122,101,40,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,44,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,41,59,10,32,32,32,32,32,32,105,102,32,40,111,107,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,114,101,110,100,101,114,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,115,101,116,83,101,103,109,101,110,116,40,115,116,97,114,116,70,114,97,109,101,44,32,101,110,100,70,114,97,109,101,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,95,95,115,112,114,101,97,100,80,114,111,112,115,40,95,95,115,112,114,101,97,100,86,97,108,117,101,115,40,123,125,44,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,41,44,32,123,10,32,32,32,32,32,32,32,32,115,101,103,109,101,110,116,58,32,99,114,101,97,116,101,67,111,114,101,83,101,103,109,101,110,116,40,91,115,116,97,114,116,70,114,97,109,101,44,32,101,110,100,70,114,97,109,101,93,44,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,10,32,32,32,32,32,32,125,41,41,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,77,111,100,101,40,109,111,100,101,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,95,95,115,112,114,101,97,100,80,114,111,112,115,40,95,95,115,112,114,101,97,100,86,97,108,117,101,115,40,123,125,44,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,41,44,32,123,10,32,32,32,32,32,32,32,32,109,111,100,101,58,32,99,114,101,97,116,101,67,111,114,101,77,111,100,101,40,109,111,100,101,44,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,10,32,32,32,32,32,32,125,41,41,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,82,101,110,100,101,114,67,111,110,102,105,103,40,99,111,110,102,105,103,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,95,97,32,61,32,99,111,110,102,105,103,44,32,123,32,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,44,32,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,32,125,32,61,32,95,97,44,32,114,101,115,116,67,111,110,102,105,103,32,61,32,95,95,111,98,106,82,101,115,116,40,95,97,44,32,91,34,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,34,44,32,34,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,34,93,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,32,61,32,95,95,115,112,114,101,97,100,80,114,111,112,115,40,95,95,115,112,114,101,97,100,86,97,108,117,101,115,40,95,95,115,112,114,101,97,100,86,97,108,117,101,115,40,123,125,44,32,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,41,44,32,114,101,115,116,67,111,110,102,105,103,41,44,32,123,10,32,32,32,32,32,32,32,32,47,47,32,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,32,105,115,32,97,32,115,112,101,99,105,97,108,32,99,97,115,101,44,32,105,116,32,115,104,111,117,108,100,32,98,101,32,115,101,116,32,116,111,32,116,104,101,32,100,101,102,97,117,108,116,32,118,97,108,117,101,32,105,102,32,105,116,39,115,32,110,111,116,32,112,114,111,118,105,100,101,100,10,32,32,32,32,32,32,32,32,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,58,32,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,32,124,124,32,103,101,116,68,101,102,97,117,108,116,68,80,82,40,41,44,10,32,32,32,32,32,32,32,32,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,58,32,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,32,33,61,32,110,117,108,108,32,63,32,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,32,58,32,116,114,117,101,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,97,117,116,111,82,101,115,105,122,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,46,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,44,32,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,46,117,110,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,41,32,123,10,32,32,32,32,32,32,32,32,32,32,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,46,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,44,32,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,46,117,110,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,105,115,70,114,111,122,101,110,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,117,110,102,114,101,101,122,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,108,111,97,100,65,110,105,109,97,116,105,111,110,40,97,110,105,109,97,116,105,111,110,73,100,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,97,99,116,105,118,101,65,110,105,109,97,116,105,111,110,73,100,40,41,32,61,61,61,32,97,110,105,109,97,116,105,111,110,73,100,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,108,111,97,100,65,110,105,109,97,116,105,111,110,40,97,110,105,109,97,116,105,111,110,73,100,44,32,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,44,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,41,59,10,32,32,32,32,32,32,105,102,32,40,108,111,97,100,101,100,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,108,111,97,100,34,32,125,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,114,101,115,105,122,101,40,41,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,108,111,97,100,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,58,32,110,101,119,32,69,114,114,111,114,40,96,70,97,105,108,101,100,32,116,111,32,97,110,105,109,97,116,105,111,110,32,58,36,123,97,110,105,109,97,116,105,111,110,73,100,125,96,41,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,115,101,116,77,97,114,107,101,114,40,109,97,114,107,101,114,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,95,95,115,112,114,101,97,100,80,114,111,112,115,40,95,95,115,112,114,101,97,100,86,97,108,117,101,115,40,123,125,44,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,41,44,32,123,10,32,32,32,32,32,32,32,32,109,97,114,107,101,114,10,32,32,32,32,32,32,125,41,41,59,10,32,32,32,32,125,10,32,32,32,32,109,97,114,107,101,114,115,40,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,59,10,32,32,32,32,32,32,99,111,110,115,116,32,109,97,114,107,101,114,115,32,61,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,109,97,114,107,101,114,115,40,41,59,10,32,32,32,32,32,32,105,102,32,40,109,97,114,107,101,114,115,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,117,108,116,32,61,32,91,93,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,108,101,116,32,105,32,61,32,48,59,32,105,32,60,32,109,97,114,107,101,114,115,46,115,105,122,101,40,41,59,32,105,32,43,61,32,49,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,109,97,114,107,101,114,32,61,32,109,97,114,107,101,114,115,46,103,101,116,40,105,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,115,117,108,116,46,112,117,115,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,58,32,109,97,114,107,101,114,46,110,97,109,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,116,105,109,101,58,32,109,97,114,107,101,114,46,116,105,109,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,100,117,114,97,116,105,111,110,58,32,109,97,114,107,101,114,46,100,117,114,97,116,105,111,110,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,114,101,115,117,108,116,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,84,104,101,109,101,40,116,104,101,109,101,73,100,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,84,104,101,109,101,40,116,104,101,109,101,73,100,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,114,101,110,100,101,114,40,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,108,111,97,100,101,100,59,10,32,32,32,32,125,10,32,32,32,32,114,101,115,101,116,84,104,101,109,101,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,115,101,116,84,104,101,109,101,40,41,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,84,104,101,109,101,68,97,116,97,40,116,104,101,109,101,68,97,116,97,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,84,104,101,109,101,68,97,116,97,40,116,104,101,109,101,68,97,116,97,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,114,101,110,100,101,114,40,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,108,111,97,100,101,100,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,83,108,111,116,115,40,115,108,111,116,115,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,83,108,111,116,115,40,115,108,111,116,115,41,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,76,97,121,111,117,116,40,108,97,121,111,117,116,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,95,95,115,112,114,101,97,100,80,114,111,112,115,40,95,95,115,112,114,101,97,100,86,97,108,117,101,115,40,123,125,44,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,41,44,32,123,10,32,32,32,32,32,32,32,32,108,97,121,111,117,116,58,32,99,114,101,97,116,101,67,111,114,101,76,97,121,111,117,116,40,108,97,121,111,117,116,44,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,10,32,32,32,32,32,32,125,41,41,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,86,105,101,119,112,111,114,116,40,120,44,32,121,44,32,119,105,100,116,104,44,32,104,101,105,103,104,116,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,86,105,101,119,112,111,114,116,40,120,44,32,121,44,32,119,105,100,116,104,44,32,104,101,105,103,104,116,41,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,116,105,99,32,115,101,116,87,97,115,109,85,114,108,40,117,114,108,41,32,123,10,32,32,32,32,32,32,68,111,116,76,111,116,116,105,101,87,97,115,109,76,111,97,100,101,114,46,115,101,116,87,97,115,109,85,114,108,40,117,114,108,41,59,10,32,32,32,32,125,10,32,32,32,32,108,111,97,100,83,116,97,116,101,77,97,99,104,105,110,101,40,115,116,97,116,101,77,97,99,104,105,110,101,73,100,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,44,32,95,98,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,40,95,98,32,61,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,108,111,97,100,83,116,97,116,101,77,97,99,104,105,110,101,40,115,116,97,116,101,77,97,99,104,105,110,101,73,100,41,41,32,33,61,32,110,117,108,108,32,63,32,95,98,32,58,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,114,116,83,116,97,116,101,77,97,99,104,105,110,101,40,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,44,32,95,98,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,114,116,101,100,32,61,32,40,95,98,32,61,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,115,116,97,114,116,83,116,97,116,101,77,97,99,104,105,110,101,40,41,41,32,33,61,32,110,117,108,108,32,63,32,95,98,32,58,32,102,97,108,115,101,59,10,32,32,32,32,32,32,105,102,32,40,115,116,97,114,116,101,100,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,101,116,117,112,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,115,116,97,114,116,101,100,59,10,32,32,32,32,125,10,32,32,32,32,115,116,111,112,83,116,97,116,101,77,97,99,104,105,110,101,40,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,44,32,95,98,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,111,112,112,101,100,32,61,32,40,95,98,32,61,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,115,116,111,112,83,116,97,116,101,77,97,99,104,105,110,101,40,41,41,32,33,61,32,110,117,108,108,32,63,32,95,98,32,58,32,102,97,108,115,101,59,10,32,32,32,32,32,32,105,102,32,40,115,116,111,112,112,101,100,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,115,116,111,112,112,101,100,59,10,32,32,32,32,125,10,32,32,32,32,95,103,101,116,80,111,105,110,116,101,114,80,111,115,105,116,105,111,110,40,101,118,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,99,116,32,61,32,116,104,105,115,46,95,99,97,110,118,97,115,46,103,101,116,66,111,117,110,100,105,110,103,67,108,105,101,110,116,82,101,99,116,40,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,99,97,108,101,88,32,61,32,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,32,47,32,114,101,99,116,46,119,105,100,116,104,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,99,97,108,101,89,32,61,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,32,47,32,114,101,99,116,46,104,101,105,103,104,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,32,61,32,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,32,124,124,32,119,105,110,100,111,119,46,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,32,124,124,32,49,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,40,101,118,101,110,116,46,99,108,105,101,110,116,88,32,45,32,114,101,99,116,46,108,101,102,116,41,32,42,32,115,99,97,108,101,88,32,47,32,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,40,101,118,101,110,116,46,99,108,105,101,110,116,89,32,45,32,114,101,99,116,46,116,111,112,41,32,42,32,115,99,97,108,101,89,32,47,32,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,120,44,10,32,32,32,32,32,32,32,32,121,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,10,32,32,32,32,95,111,110,80,111,105,110,116,101,114,85,112,40,101,118,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,123,32,120,44,32,121,32,125,32,61,32,116,104,105,115,46,95,103,101,116,80,111,105,110,116,101,114,80,111,115,105,116,105,111,110,40,101,118,101,110,116,41,59,10,32,32,32,32,32,32,116,104,105,115,46,112,111,115,116,80,111,105,110,116,101,114,85,112,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,10,32,32,32,32,95,111,110,80,111,105,110,116,101,114,68,111,119,110,40,101,118,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,123,32,120,44,32,121,32,125,32,61,32,116,104,105,115,46,95,103,101,116,80,111,105,110,116,101,114,80,111,115,105,116,105,111,110,40,101,118,101,110,116,41,59,10,32,32,32,32,32,32,116,104,105,115,46,112,111,115,116,80,111,105,110,116,101,114,68,111,119,110,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,10,32,32,32,32,95,111,110,80,111,105,110,116,101,114,77,111,118,101,40,101,118,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,123,32,120,44,32,121,32,125,32,61,32,116,104,105,115,46,95,103,101,116,80,111,105,110,116,101,114,80,111,115,105,116,105,111,110,40,101,118,101,110,116,41,59,10,32,32,32,32,32,32,116,104,105,115,46,112,111,115,116,80,111,105,110,116,101,114,77,111,118,101,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,10,32,32,32,32,95,111,110,80,111,105,110,116,101,114,69,110,116,101,114,40,101,118,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,123,32,120,44,32,121,32,125,32,61,32,116,104,105,115,46,95,103,101,116,80,111,105,110,116,101,114,80,111,115,105,116,105,111,110,40,101,118,101,110,116,41,59,10,32,32,32,32,32,32,116,104,105,115,46,112,111,115,116,80,111,105,110,116,101,114,69,110,116,101,114,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,10,32,32,32,32,95,111,110,80,111,105,110,116,101,114,76,101,97,118,101,40,101,118,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,123,32,120,44,32,121,32,125,32,61,32,116,104,105,115,46,95,103,101,116,80,111,105,110,116,101,114,80,111,115,105,116,105,111,110,40,101,118,101,110,116,41,59,10,32,32,32,32,32,32,116,104,105,115,46,112,111,115,116,80,111,105,110,116,101,114,69,120,105,116,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,10,32,32,32,32,112,111,115,116,80,111,105,110,116,101,114,85,112,69,118,101,110,116,40,120,44,32,121,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,112,111,115,116,80,111,105,110,116,101,114,85,112,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,10,32,32,32,32,112,111,115,116,80,111,105,110,116,101,114,68,111,119,110,69,118,101,110,116,40,120,44,32,121,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,112,111,115,116,80,111,105,110,116,101,114,68,111,119,110,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,10,32,32,32,32,112,111,115,116,80,111,105,110,116,101,114,77,111,118,101,69,118,101,110,116,40,120,44,32,121,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,112,111,115,116,80,111,105,110,116,101,114,77,111,118,101,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,10,32,32,32,32,112,111,115,116,80,111,105,110,116,101,114,69,110,116,101,114,69,118,101,110,116,40,120,44,32,121,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,112,111,115,116,80,111,105,110,116,101,114,69,110,116,101,114,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,10,32,32,32,32,112,111,115,116,80,111,105,110,116,101,114,69,120,105,116,69,118,101,110,116,40,120,44,32,121,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,112,111,115,116,80,111,105,110,116,101,114,69,120,105,116,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,105,115,116,101,110,101,114,115,86,101,99,116,111,114,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,116,97,116,101,77,97,99,104,105,110,101,70,114,97,109,101,119,111,114,107,83,101,116,117,112,40,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,105,115,116,101,110,101,114,115,32,61,32,91,93,59,10,32,32,32,32,32,32,102,111,114,32,40,108,101,116,32,105,32,61,32,48,59,32,105,32,60,32,108,105,115,116,101,110,101,114,115,86,101,99,116,111,114,46,115,105,122,101,40,41,59,32,105,32,43,61,32,49,41,32,123,10,32,32,32,32,32,32,32,32,108,105,115,116,101,110,101,114,115,46,112,117,115,104,40,108,105,115,116,101,110,101,114,115,86,101,99,116,111,114,46,103,101,116,40,105,41,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,108,105,115,116,101,110,101,114,115,59,10,32,32,32,32,125,10,32,32,32,32,95,115,101,116,117,112,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,32,38,38,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,33,61,61,32,110,117,108,108,32,38,38,32,116,104,105,115,46,105,115,76,111,97,100,101,100,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,108,105,115,116,101,110,101,114,115,32,61,32,116,104,105,115,46,103,101,116,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,115,46,105,110,99,108,117,100,101,115,40,34,80,111,105,110,116,101,114,85,112,34,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,117,112,34,44,32,116,104,105,115,46,95,112,111,105,110,116,101,114,85,112,77,101,116,104,111,100,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,115,46,105,110,99,108,117,100,101,115,40,34,80,111,105,110,116,101,114,68,111,119,110,34,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,100,111,119,110,34,44,32,116,104,105,115,46,95,112,111,105,110,116,101,114,68,111,119,110,77,101,116,104,111,100,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,115,46,105,110,99,108,117,100,101,115,40,34,80,111,105,110,116,101,114,77,111,118,101,34,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,109,111,118,101,34,44,32,116,104,105,115,46,95,112,111,105,110,116,101,114,77,111,118,101,77,101,116,104,111,100,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,115,46,105,110,99,108,117,100,101,115,40,34,80,111,105,110,116,101,114,69,110,116,101,114,34,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,101,110,116,101,114,34,44,32,116,104,105,115,46,95,112,111,105,110,116,101,114,69,110,116,101,114,77,101,116,104,111,100,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,115,46,105,110,99,108,117,100,101,115,40,34,80,111,105,110,116,101,114,69,120,105,116,34,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,108,101,97,118,101,34,44,32,116,104,105,115,46,95,112,111,105,110,116,101,114,69,120,105,116,77,101,116,104,111,100,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,117,112,34,44,32,116,104,105,115,46,95,112,111,105,110,116,101,114,85,112,77,101,116,104,111,100,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,100,111,119,110,34,44,32,116,104,105,115,46,95,112,111,105,110,116,101,114,68,111,119,110,77,101,116,104,111,100,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,109,111,118,101,34,44,32,116,104,105,115,46,95,112,111,105,110,116,101,114,77,111,118,101,77,101,116,104,111,100,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,101,110,116,101,114,34,44,32,116,104,105,115,46,95,112,111,105,110,116,101,114,69,110,116,101,114,77,101,116,104,111,100,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,108,101,97,118,101,34,44,32,116,104,105,115,46,95,112,111,105,110,116,101,114,69,120,105,116,77,101,116,104,111,100,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,108,111,97,100,83,116,97,116,101,77,97,99,104,105,110,101,68,97,116,97,40,115,116,97,116,101,77,97,99,104,105,110,101,68,97,116,97,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,44,32,95,98,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,40,95,98,32,61,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,108,111,97,100,83,116,97,116,101,77,97,99,104,105,110,101,68,97,116,97,40,115,116,97,116,101,77,97,99,104,105,110,101,68,97,116,97,41,41,32,33,61,32,110,117,108,108,32,63,32,95,98,32,58,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,97,110,105,109,97,116,105,111,110,83,105,122,101,40,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,44,32,95,98,44,32,95,99,44,32,95,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,119,105,100,116,104,32,61,32,40,95,98,32,61,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,97,110,105,109,97,116,105,111,110,83,105,122,101,40,41,46,103,101,116,40,48,41,41,32,33,61,32,110,117,108,108,32,63,32,95,98,32,58,32,48,59,10,32,32,32,32,32,32,99,111,110,115,116,32,104,101,105,103,104,116,32,61,32,40,95,100,32,61,32,40,95,99,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,99,46,97,110,105,109,97,116,105,111,110,83,105,122,101,40,41,46,103,101,116,40,49,41,41,32,33,61,32,110,117,108,108,32,63,32,95,100,32,58,32,48,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,119,105,100,116,104,44,10,32,32,32,32,32,32,32,32,104,101,105,103,104,116,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,83,116,97,116,101,77,97,99,104,105,110,101,66,111,111,108,101,97,110,67,111,110,116,101,120,116,40,110,97,109,101,44,32,118,97,108,117,101,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,44,32,95,98,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,40,95,98,32,61,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,115,101,116,83,116,97,116,101,77,97,99,104,105,110,101,66,111,111,108,101,97,110,67,111,110,116,101,120,116,40,110,97,109,101,44,32,118,97,108,117,101,41,41,32,33,61,32,110,117,108,108,32,63,32,95,98,32,58,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,83,116,97,116,101,77,97,99,104,105,110,101,78,117,109,101,114,105,99,67,111,110,116,101,120,116,40,110,97,109,101,44,32,118,97,108,117,101,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,44,32,95,98,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,40,95,98,32,61,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,115,101,116,83,116,97,116,101,77,97,99,104,105,110,101,78,117,109,101,114,105,99,67,111,110,116,101,120,116,40,110,97,109,101,44,32,118,97,108,117,101,41,41,32,33,61,32,110,117,108,108,32,63,32,95,98,32,58,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,83,116,97,116,101,77,97,99,104,105,110,101,83,116,114,105,110,103,67,111,110,116,101,120,116,40,110,97,109,101,44,32,118,97,108,117,101,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,44,32,95,98,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,40,95,98,32,61,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,115,101,116,83,116,97,116,101,77,97,99,104,105,110,101,83,116,114,105,110,103,67,111,110,116,101,120,116,40,110,97,109,101,44,32,118,97,108,117,101,41,41,32,33,61,32,110,117,108,108,32,63,32,95,98,32,58,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,71,101,116,32,116,104,101,32,98,111,117,110,100,115,32,111,102,32,97,32,108,97,121,101,114,32,98,121,32,105,116,115,32,110,97,109,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,108,97,121,101,114,78,97,109,101,32,45,32,84,104,101,32,110,97,109,101,32,111,102,32,116,104,101,32,108,97,121,101,114,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,98,111,117,110,100,115,32,111,102,32,116,104,101,32,108,97,121,101,114,10,32,32,32,32,32,42,10,32,32,32,32,32,42,32,64,101,120,97,109,112,108,101,10,32,32,32,32,32,42,32,96,96,96,116,121,112,101,115,99,114,105,112,116,10,32,32,32,32,32,42,32,47,47,32,68,114,97,119,32,97,32,114,101,99,116,97,110,103,108,101,32,97,114,111,117,110,100,32,116,104,101,32,108,97,121,101,114,32,39,76,97,121,101,114,32,49,39,10,32,32,32,32,32,42,32,100,111,116,76,111,116,116,105,101,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,39,114,101,110,100,101,114,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,32,42,32,32,32,99,111,110,115,116,32,98,111,117,110,100,105,110,103,66,111,120,32,61,32,100,111,116,76,111,116,116,105,101,46,103,101,116,76,97,121,101,114,66,111,117,110,100,105,110,103,66,111,120,40,39,76,97,121,101,114,32,49,39,41,59,10,32,32,32,32,32,42,10,32,32,32,32,32,42,32,32,32,105,102,32,40,98,111,117,110,100,105,110,103,66,111,120,41,32,123,10,32,32,32,32,32,42,32,32,32,32,32,99,111,110,115,116,32,123,32,120,44,32,121,44,32,119,105,100,116,104,44,32,104,101,105,103,104,116,32,125,32,61,32,98,111,117,110,100,105,110,103,66,111,120,59,10,32,32,32,32,32,42,32,32,32,32,32,99,111,110,116,101,120,116,46,115,116,114,111,107,101,82,101,99,116,40,120,44,32,121,44,32,119,105,100,116,104,44,32,104,101,105,103,104,116,41,59,10,32,32,32,32,32,42,32,32,32,125,10,32,32,32,32,32,42,32,125,41,59,10,32,32,32,32,32,42,32,96,96,96,10,32,32,32,32,32,42,47,10,32,32,32,32,103,101,116,76,97,121,101,114,66,111,117,110,100,105,110,103,66,111,120,40,108,97,121,101,114,78,97,109,101,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,59,10,32,32,32,32,32,32,99,111,110,115,116,32,98,111,117,110,100,115,32,61,32,40,95,97,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,103,101,116,76,97,121,101,114,66,111,117,110,100,115,40,108,97,121,101,114,78,97,109,101,41,59,10,32,32,32,32,32,32,105,102,32,40,33,98,111,117,110,100,115,41,32,114,101,116,117,114,110,32,118,111,105,100,32,48,59,10,32,32,32,32,32,32,105,102,32,40,98,111,117,110,100,115,46,115,105,122,101,40,41,32,33,61,61,32,52,41,32,114,101,116,117,114,110,32,118,111,105,100,32,48,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,98,111,117,110,100,115,46,103,101,116,40,48,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,98,111,117,110,100,115,46,103,101,116,40,49,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,119,105,100,116,104,32,61,32,98,111,117,110,100,115,46,103,101,116,40,50,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,104,101,105,103,104,116,32,61,32,98,111,117,110,100,115,46,103,101,116,40,51,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,120,44,10,32,32,32,32,32,32,32,32,121,44,10,32,32,32,32,32,32,32,32,119,105,100,116,104,44,10,32,32,32,32,32,32,32,32,104,101,105,103,104,116,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,116,105,99,32,116,114,97,110,115,102,111,114,109,84,104,101,109,101,84,111,76,111,116,116,105,101,83,108,111,116,115,40,116,104,101,109,101,44,32,115,108,111,116,115,41,32,123,10,32,32,32,32,32,32,118,97,114,32,95,97,44,32,95,98,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,40,95,98,32,61,32,40,95,97,32,61,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,32,61,61,32,110,117,108,108,32,63,32,118,111,105,100,32,48,32,58,32,95,97,46,116,114,97,110,115,102,111,114,109,84,104,101,109,101,84,111,76,111,116,116,105,101,83,108,111,116,115,40,116,104,101,109,101,44,32,115,108,111,116,115,41,41,32,33,61,32,110,117,108,108,32,63,32,95,98,32,58,32,34,34,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,95,68,111,116,76,111,116,116,105,101,44,32,34,95,119,97,115,109,77,111,100,117,108,101,34,44,32,110,117,108,108,41,59,10,32,32,118,97,114,32,68,111,116,76,111,116,116,105,101,32,61,32,95,68,111,116,76,111,116,116,105,101,59,10,10,32,32,47,47,32,115,114,99,47,119,111,114,107,101,114,47,100,111,116,108,111,116,116,105,101,46,119,111,114,107,101,114,46,116,115,10,32,32,118,97,114,32,105,110,115,116,97,110,99,101,115,77,97,112,32,61,32,47,42,32,64,95,95,80,85,82,69,95,95,32,42,47,32,110,101,119,32,77,97,112,40,41,59,10,32,32,118,97,114,32,101,118,101,110,116,72,97,110,100,108,101,114,77,97,112,32,61,32,123,10,32,32,32,32,114,101,97,100,121,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,82,101,97,100,121,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,99,111,109,112,108,101,116,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,67,111,109,112,108,101,116,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,108,111,97,100,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,97,100,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,76,111,97,100,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,108,111,97,100,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,108,111,97,100,69,114,114,111,114,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,97,100,69,114,114,111,114,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,76,111,97,100,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,108,111,97,100,69,114,114,111,114,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,108,111,111,112,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,111,112,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,76,111,111,112,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,108,111,111,112,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,112,108,97,121,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,112,108,97,121,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,80,108,97,121,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,112,108,97,121,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,112,97,117,115,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,112,97,117,115,101,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,80,97,117,115,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,112,97,117,115,101,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,111,112,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,111,112,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,111,112,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,111,112,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,102,114,97,109,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,102,114,97,109,101,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,70,114,97,109,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,102,114,97,109,101,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,114,101,110,100,101,114,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,110,100,101,114,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,82,101,110,100,101,114,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,114,101,110,100,101,114,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,102,114,101,101,122,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,102,114,101,101,122,101,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,70,114,101,101,122,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,102,114,101,101,122,101,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,117,110,102,114,101,101,122,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,117,110,102,114,101,101,122,101,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,85,110,102,114,101,101,122,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,117,110,102,114,101,101,122,101,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,100,101,115,116,114,111,121,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,100,101,115,116,114,111,121,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,68,101,115,116,114,111,121,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,100,101,115,116,114,111,121,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,118,97,114,32,99,111,109,109,97,110,100,115,32,61,32,123,10,32,32,32,32,103,101,116,68,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,83,116,97,116,101,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,32,61,32,123,10,32,32,32,32,32,32,32,32,108,111,111,112,67,111,117,110,116,58,32,105,110,115,116,97,110,99,101,46,108,111,111,112,67,111,117,110,116,44,10,32,32,32,32,32,32,32,32,105,115,76,111,97,100,101,100,58,32,105,110,115,116,97,110,99,101,46,105,115,76,111,97,100,101,100,44,10,32,32,32,32,32,32,32,32,105,115,80,97,117,115,101,100,58,32,105,110,115,116,97,110,99,101,46,105,115,80,97,117,115,101,100,44,10,32,32,32,32,32,32,32,32,105,115,80,108,97,121,105,110,103,58,32,105,110,115,116,97,110,99,101,46,105,115,80,108,97,121,105,110,103,44,10,32,32,32,32,32,32,32,32,105,115,83,116,111,112,112,101,100,58,32,105,110,115,116,97,110,99,101,46,105,115,83,116,111,112,112,101,100,44,10,32,32,32,32,32,32,32,32,105,115,70,114,111,122,101,110,58,32,105,110,115,116,97,110,99,101,46,105,115,70,114,111,122,101,110,44,10,32,32,32,32,32,32,32,32,108,111,111,112,58,32,105,110,115,116,97,110,99,101,46,108,111,111,112,44,10,32,32,32,32,32,32,32,32,109,111,100,101,58,32,105,110,115,116,97,110,99,101,46,109,111,100,101,44,10,32,32,32,32,32,32,32,32,115,112,101,101,100,58,32,105,110,115,116,97,110,99,101,46,115,112,101,101,100,44,10,32,32,32,32,32,32,32,32,99,117,114,114,101,110,116,70,114,97,109,101,58,32,105,110,115,116,97,110,99,101,46,99,117,114,114,101,110,116,70,114,97,109,101,44,10,32,32,32,32,32,32,32,32,116,111,116,97,108,70,114,97,109,101,115,58,32,105,110,115,116,97,110,99,101,46,116,111,116,97,108,70,114,97,109,101,115,44,10,32,32,32,32,32,32,32,32,100,117,114,97,116,105,111,110,58,32,105,110,115,116,97,110,99,101,46,100,117,114,97,116,105,111,110,44,10,32,32,32,32,32,32,32,32,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,58,32,105,110,115,116,97,110,99,101,46,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,44,10,32,32,32,32,32,32,32,32,114,101,110,100,101,114,67,111,110,102,105,103,58,32,105,110,115,116,97,110,99,101,46,114,101,110,100,101,114,67,111,110,102,105,103,44,10,32,32,32,32,32,32,32,32,109,97,114,107,101,114,58,32,105,110,115,116,97,110,99,101,46,109,97,114,107,101,114,44,10,32,32,32,32,32,32,32,32,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,58,32,105,110,115,116,97,110,99,101,46,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,44,10,32,32,32,32,32,32,32,32,109,97,114,107,101,114,115,58,32,105,110,115,116,97,110,99,101,46,109,97,114,107,101,114,115,40,41,44,10,32,32,32,32,32,32,32,32,97,99,116,105,118,101,65,110,105,109,97,116,105,111,110,73,100,58,32,105,110,115,116,97,110,99,101,46,97,99,116,105,118,101,65,110,105,109,97,116,105,111,110,73,100,44,10,32,32,32,32,32,32,32,32,97,99,116,105,118,101,84,104,101,109,101,73,100,58,32,105,110,115,116,97,110,99,101,46,97,99,116,105,118,101,84,104,101,109,101,73,100,44,10,32,32,32,32,32,32,32,32,97,117,116,111,112,108,97,121,58,32,105,110,115,116,97,110,99,101,46,97,117,116,111,112,108,97,121,44,10,32,32,32,32,32,32,32,32,115,101,103,109,101,110,116,58,32,105,110,115,116,97,110,99,101,46,115,101,103,109,101,110,116,44,10,32,32,32,32,32,32,32,32,108,97,121,111,117,116,58,32,105,110,115,116,97,110,99,101,46,108,97,121,111,117,116,44,10,32,32,32,32,32,32,32,32,115,101,103,109,101,110,116,68,117,114,97,116,105,111,110,58,32,105,110,115,116,97,110,99,101,46,115,101,103,109,101,110,116,68,117,114,97,116,105,111,110,44,10,32,32,32,32,32,32,32,32,105,115,82,101,97,100,121,58,32,105,110,115,116,97,110,99,101,46,105,115,82,101,97,100,121,44,10,32,32,32,32,32,32,32,32,109,97,110,105,102,101,115,116,58,32,105,110,115,116,97,110,99,101,46,109,97,110,105,102,101,115,116,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,115,116,97,116,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,76,97,121,111,117,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,97,121,111,117,116,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,108,97,121,111,117,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,76,97,121,111,117,116,40,108,97,121,111,117,116,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,115,117,99,99,101,115,115,58,32,116,114,117,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,44,10,32,32,32,32,103,101,116,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,103,101,116,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,112,111,115,116,80,111,105,110,116,101,114,68,111,119,110,69,118,101,110,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,120,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,121,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,112,111,115,116,80,111,105,110,116,101,114,68,111,119,110,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,44,10,32,32,32,32,112,111,115,116,80,111,105,110,116,101,114,69,110,116,101,114,69,118,101,110,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,120,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,121,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,112,111,115,116,80,111,105,110,116,101,114,69,110,116,101,114,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,44,10,32,32,32,32,112,111,115,116,80,111,105,110,116,101,114,69,120,105,116,69,118,101,110,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,120,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,121,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,112,111,115,116,80,111,105,110,116,101,114,69,120,105,116,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,44,10,32,32,32,32,112,111,115,116,80,111,105,110,116,101,114,77,111,118,101,69,118,101,110,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,120,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,121,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,112,111,115,116,80,111,105,110,116,101,114,77,111,118,101,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,44,10,32,32,32,32,112,111,115,116,80,111,105,110,116,101,114,85,112,69,118,101,110,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,120,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,121,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,112,111,115,116,80,111,105,110,116,101,114,85,112,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,114,116,83,116,97,116,101,77,97,99,104,105,110,101,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,114,116,83,116,97,116,101,77,97,99,104,105,110,101,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,111,112,83,116,97,116,101,77,97,99,104,105,110,101,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,111,112,83,116,97,116,101,77,97,99,104,105,110,101,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,108,111,97,100,83,116,97,116,101,77,97,99,104,105,110,101,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,115,116,97,116,101,77,97,99,104,105,110,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,108,111,97,100,83,116,97,116,101,77,97,99,104,105,110,101,40,115,116,97,116,101,77,97,99,104,105,110,101,73,100,41,59,10,32,32,32,32,125,44,10,32,32,32,32,108,111,97,100,83,116,97,116,101,77,97,99,104,105,110,101,68,97,116,97,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,68,97,116,97,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,115,116,97,116,101,77,97,99,104,105,110,101,68,97,116,97,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,108,111,97,100,83,116,97,116,101,77,97,99,104,105,110,101,68,97,116,97,40,115,116,97,116,101,77,97,99,104,105,110,101,68,97,116,97,41,59,10,32,32,32,32,125,44,10,32,32,32,32,99,114,101,97,116,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,99,111,110,102,105,103,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,99,111,110,102,105,103,59,10,32,32,32,32,32,32,99,111,110,115,116,32,119,105,100,116,104,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,119,105,100,116,104,59,10,32,32,32,32,32,32,99,111,110,115,116,32,104,101,105,103,104,116,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,104,101,105,103,104,116,59,10,32,32,32,32,32,32,105,102,32,40,105,110,115,116,97,110,99,101,115,77,97,112,46,104,97,115,40,105,110,115,116,97,110,99,101,73,100,41,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,97,108,114,101,97,100,121,32,101,120,105,115,116,115,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,110,101,119,32,68,111,116,76,111,116,116,105,101,40,99,111,110,102,105,103,41,59,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,99,97,110,118,97,115,46,104,101,105,103,104,116,32,61,32,104,101,105,103,104,116,59,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,99,97,110,118,97,115,46,119,105,100,116,104,32,61,32,119,105,100,116,104,59,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,115,77,97,112,46,115,101,116,40,105,110,115,116,97,110,99,101,73,100,44,32,105,110,115,116,97,110,99,101,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,101,118,101,110,116,115,32,61,32,91,10,32,32,32,32,32,32,32,32,34,99,111,109,112,108,101,116,101,34,44,10,32,32,32,32,32,32,32,32,34,102,114,97,109,101,34,44,10,32,32,32,32,32,32,32,32,34,108,111,97,100,34,44,10,32,32,32,32,32,32,32,32,34,108,111,97,100,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,34,108,111,111,112,34,44,10,32,32,32,32,32,32,32,32,34,112,97,117,115,101,34,44,10,32,32,32,32,32,32,32,32,34,112,108,97,121,34,44,10,32,32,32,32,32,32,32,32,34,115,116,111,112,34,44,10,32,32,32,32,32,32,32,32,34,100,101,115,116,114,111,121,34,44,10,32,32,32,32,32,32,32,32,34,102,114,101,101,122,101,34,44,10,32,32,32,32,32,32,32,32,34,117,110,102,114,101,101,122,101,34,44,10,32,32,32,32,32,32,32,32,34,114,101,110,100,101,114,34,44,10,32,32,32,32,32,32,32,32,34,114,101,97,100,121,34,10,32,32,32,32,32,32,93,59,10,32,32,32,32,32,32,101,118,101,110,116,115,46,102,111,114,69,97,99,104,40,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,101,118,101,110,116,44,32,101,118,101,110,116,72,97,110,100,108,101,114,77,97,112,91,101,118,101,110,116,93,40,105,110,115,116,97,110,99,101,73,100,41,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,44,10,32,32,32,32,100,101,115,116,114,111,121,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,100,101,115,116,114,111,121,40,41,59,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,115,77,97,112,46,100,101,108,101,116,101,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,125,44,10,32,32,32,32,102,114,101,101,122,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,102,114,101,101,122,101,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,108,111,97,100,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,99,111,110,102,105,103,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,99,111,110,102,105,103,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,108,111,97,100,40,99,111,110,102,105,103,41,59,10,32,32,32,32,125,44,10,32,32,32,32,108,111,97,100,65,110,105,109,97,116,105,111,110,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,97,110,105,109,97,116,105,111,110,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,97,110,105,109,97,116,105,111,110,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,108,111,97,100,65,110,105,109,97,116,105,111,110,40,97,110,105,109,97,116,105,111,110,73,100,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,84,104,101,109,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,116,104,101,109,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,116,104,101,109,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,101,116,84,104,101,109,101,40,116,104,101,109,101,73,100,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,84,104,101,109,101,68,97,116,97,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,116,104,101,109,101,68,97,116,97,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,116,104,101,109,101,68,97,116,97,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,101,116,84,104,101,109,101,68,97,116,97,40,116,104,101,109,101,68,97,116,97,41,59,10,32,32,32,32,125,44,10,32,32,32,32,112,97,117,115,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,112,97,117,115,101,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,112,108,97,121,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,112,108,97,121,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,114,101,115,105,122,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,119,105,100,116,104,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,119,105,100,116,104,59,10,32,32,32,32,32,32,99,111,110,115,116,32,104,101,105,103,104,116,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,104,101,105,103,104,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,99,97,110,118,97,115,46,104,101,105,103,104,116,32,61,32,104,101,105,103,104,116,59,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,99,97,110,118,97,115,46,119,105,100,116,104,32,61,32,119,105,100,116,104,59,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,114,101,115,105,122,101,40,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,115,117,99,99,101,115,115,58,32,116,114,117,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,66,97,99,107,103,114,111,117,110,100,67,111,108,111,114,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,66,97,99,107,103,114,111,117,110,100,67,111,108,111,114,40,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,70,114,97,109,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,102,114,97,109,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,102,114,97,109,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,70,114,97,109,101,40,102,114,97,109,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,77,111,100,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,109,111,100,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,109,111,100,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,77,111,100,101,40,109,111,100,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,82,101,110,100,101,114,67,111,110,102,105,103,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,110,100,101,114,67,111,110,102,105,103,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,114,101,110,100,101,114,67,111,110,102,105,103,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,82,101,110,100,101,114,67,111,110,102,105,103,40,114,101,110,100,101,114,67,111,110,102,105,103,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,83,101,103,109,101,110,116,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,101,103,109,101,110,116,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,115,101,103,109,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,83,101,103,109,101,110,116,40,115,101,103,109,101,110,116,91,48,93,44,32,115,101,103,109,101,110,116,91,49,93,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,83,112,101,101,100,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,112,101,101,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,115,112,101,101,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,83,112,101,101,100,40,115,112,101,101,100,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,85,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,85,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,40,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,87,97,115,109,85,114,108,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,68,111,116,76,111,116,116,105,101,46,115,101,116,87,97,115,109,85,114,108,40,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,117,114,108,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,111,112,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,116,111,112,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,117,110,102,114,101,101,122,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,117,110,102,114,101,101,122,101,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,86,105,101,119,112,111,114,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,120,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,121,59,10,32,32,32,32,32,32,99,111,110,115,116,32,119,105,100,116,104,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,119,105,100,116,104,59,10,32,32,32,32,32,32,99,111,110,115,116,32,104,101,105,103,104,116,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,104,101,105,103,104,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,101,116,86,105,101,119,112,111,114,116,40,120,44,32,121,44,32,119,105,100,116,104,44,32,104,101,105,103,104,116,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,77,97,114,107,101,114,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,109,97,114,107,101,114,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,109,97,114,107,101,114,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,77,97,114,107,101,114,40,109,97,114,107,101,114,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,115,117,99,99,101,115,115,58,32,116,114,117,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,76,111,111,112,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,111,112,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,108,111,111,112,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,76,111,111,112,40,108,111,111,112,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,115,117,99,99,101,115,115,58,32,116,114,117,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,102,117,110,99,116,105,111,110,32,101,120,101,99,117,116,101,67,111,109,109,97,110,100,40,114,112,99,82,101,113,117,101,115,116,41,32,123,10,32,32,32,32,99,111,110,115,116,32,109,101,116,104,111,100,32,61,32,114,112,99,82,101,113,117,101,115,116,46,109,101,116,104,111,100,59,10,32,32,32,32,105,102,32,40,116,121,112,101,111,102,32,99,111,109,109,97,110,100,115,91,109,101,116,104,111,100,93,32,61,61,61,32,34,102,117,110,99,116,105,111,110,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,99,111,109,109,97,110,100,115,91,109,101,116,104,111,100,93,40,114,112,99,82,101,113,117,101,115,116,41,59,10,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,77,101,116,104,111,100,32,36,123,109,101,116,104,111,100,125,32,105,115,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,105,110,32,99,111,109,109,97,110,100,115,46,96,41,59,10,32,32,32,32,125,10,32,32,125,10,32,32,115,101,108,102,46,111,110,109,101,115,115,97,103,101,32,61,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,117,108,116,32,61,32,101,120,101,99,117,116,101,67,111,109,109,97,110,100,40,101,118,101,110,116,46,100,97,116,97,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,101,118,101,110,116,46,100,97,116,97,46,105,100,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,101,118,101,110,116,46,100,97,116,97,46,109,101,116,104,111,100,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,32,99,97,116,99,104,32,40,101,114,114,111,114,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,101,114,114,111,114,82,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,101,118,101,110,116,46,100,97,116,97,46,105,100,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,101,118,101,110,116,46,100,97,116,97,46,109,101,116,104,111,100,44,10,32,32,32,32,32,32,32,32,101,114,114,111,114,58,32,101,114,114,111,114,46,109,101,115,115,97,103,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,101,114,114,111,114,82,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,118,97,114,32,100,117,109,109,121,32,61,32,34,34,59,10,32,32,118,97,114,32,100,111,116,108,111,116,116,105,101,95,119,111,114,107,101,114,95,100,101,102,97,117,108,116,32,61,32,100,117,109,109,121,59,10,125,41,40,41,59,10])],{type:"application/javascript"}),a=URL.createObjectURL(n),r=new Worker(a);return URL.revokeObjectURL(a),r}},J8=K8,W8=class{constructor(){j1(this,"_workers",new Map),j1(this,"_animationWorkerMap",new Map)}getWorker(n){return this._workers.has(n)||this._workers.set(n,new J8),this._workers.get(n)}assignAnimationToWorker(n,a){this._animationWorkerMap.set(n,a)}unassignAnimationFromWorker(n){this._animationWorkerMap.delete(n)}sendMessage(n,a,r){this.getWorker(n).postMessage(a,r||[])}terminateWorker(n){let a=this._workers.get(n);a&&(a.terminate(),this._workers.delete(n))}};function wu(n,a){if(n instanceof HTMLCanvasElement){let{height:r,width:l}=n.getBoundingClientRect();if(r!==0&&l!==0)return{width:l*a,height:r*a}}return{width:n.width,height:n.height}}function xu(){return Date.now().toString(36)+Math.random().toString(36).substr(2,9)}var Su=class Vt{constructor(a){j1(this,"_eventManager",new kc),j1(this,"_id"),j1(this,"_worker"),j1(this,"_canvas"),j1(this,"_dotLottieInstanceState",{loopCount:0,markers:[],autoplay:!1,backgroundColor:"",currentFrame:0,duration:0,loop:!1,mode:"forward",segment:[0,0],segmentDuration:0,speed:1,totalFrames:0,isLoaded:!1,isPlaying:!1,isPaused:!1,isStopped:!0,isFrozen:!1,useFrameInterpolation:!1,renderConfig:{devicePixelRatio:Ft()},activeAnimationId:"",activeThemeId:"",layout:void 0,marker:void 0,isReady:!1,manifest:null}),j1(this,"_created",!1),j1(this,"_pointerUpMethod"),j1(this,"_pointerDownMethod"),j1(this,"_pointerMoveMethod"),j1(this,"_pointerEnterMethod"),j1(this,"_pointerExitMethod");var r,l,s;this._canvas=a.canvas,this._id=`dotlottie-${xu()}`;let c=a.workerId||"defaultWorker";this._worker=Vt._workerManager.getWorker(c),Vt._workerManager.assignAnimationToWorker(this._id,c),Vt._wasmUrl&&this._sendMessage("setWasmUrl",{url:Vt._wasmUrl}),this._create(y3(J2({},a),{renderConfig:y3(J2({},a.renderConfig),{devicePixelRatio:((r=a.renderConfig)==null?void 0:r.devicePixelRatio)||Ft(),freezeOnOffscreen:(s=(l=a.renderConfig)==null?void 0:l.freezeOnOffscreen)!=null?s:!0})})),this._worker.addEventListener("message",this._handleWorkerEvent.bind(this)),this._pointerUpMethod=this._onPointerUp.bind(this),this._pointerDownMethod=this._onPointerDown.bind(this),this._pointerMoveMethod=this._onPointerMove.bind(this),this._pointerEnterMethod=this._onPointerEnter.bind(this),this._pointerExitMethod=this._onPointerLeave.bind(this)}_handleWorkerEvent(a){return $1(this,null,function*(){let r=a.data;r.id||(r.method==="onLoad"&&r.result.instanceId===this._id&&(yield this._updateDotLottieInstanceState(),this._eventManager.dispatch(r.result.event),r3&&this._canvas instanceof HTMLCanvasElement&&(this._dotLottieInstanceState.renderConfig.freezeOnOffscreen&&ge.observe(this._canvas,this),this._dotLottieInstanceState.renderConfig.autoResize&&ye.observe(this._canvas,this))),r.method==="onComplete"&&r.result.instanceId===this._id&&(yield this._updateDotLottieInstanceState(),this._eventManager.dispatch(r.result.event)),r.method==="onDestroy"&&r.result.instanceId===this._id&&this._eventManager.dispatch(r.result.event),r.method==="onUnfreeze"&&r.result.instanceId===this._id&&(yield this._updateDotLottieInstanceState(),this._dotLottieInstanceState.isFrozen=!1,this._eventManager.dispatch(r.result.event)),r.method==="onFrame"&&r.result.instanceId===this._id&&(this._dotLottieInstanceState.currentFrame=r.result.event.currentFrame,this._eventManager.dispatch(r.result.event)),r.method==="onRender"&&r.result.instanceId===this._id&&this._eventManager.dispatch(r.result.event),r.method==="onFreeze"&&r.result.instanceId===this._id&&(yield this._updateDotLottieInstanceState(),this._eventManager.dispatch(r.result.event)),r.method==="onPause"&&r.result.instanceId===this._id&&(yield this._updateDotLottieInstanceState(),this._eventManager.dispatch(r.result.event)),r.method==="onPlay"&&r.result.instanceId===this._id&&(yield this._updateDotLottieInstanceState(),this._eventManager.dispatch(r.result.event)),r.method==="onStop"&&r.result.instanceId===this._id&&(yield this._updateDotLottieInstanceState(),this._eventManager.dispatch(r.result.event)),r.method==="onLoadError"&&r.result.instanceId===this._id&&(yield this._updateDotLottieInstanceState(),this._eventManager.dispatch(r.result.event)),r.method==="onReady"&&r.result.instanceId===this._id&&(yield this._updateDotLottieInstanceState(),this._eventManager.dispatch(r.result.event)),r.method==="onLoop"&&r.result.instanceId===this._id&&(yield this._updateDotLottieInstanceState(),this._eventManager.dispatch(r.result.event)))})}_create(a){return $1(this,null,function*(){var r;let l;this._canvas instanceof HTMLCanvasElement?l=this._canvas.transferControlToOffscreen():l=this._canvas;let{instanceId:s}=yield this._sendMessage("create",J2({instanceId:this._id,config:y3(J2({},a),{canvas:l})},wu(this._canvas,((r=a.renderConfig)==null?void 0:r.devicePixelRatio)||Ft())),[l]);if(s!==this._id)throw new Error("Instance ID mismatch");this._created=!0,yield this._updateDotLottieInstanceState()})}get loopCount(){return this._dotLottieInstanceState.loopCount}get isLoaded(){return this._dotLottieInstanceState.isLoaded}get isPlaying(){return this._dotLottieInstanceState.isPlaying}get isPaused(){return this._dotLottieInstanceState.isPaused}get isStopped(){return this._dotLottieInstanceState.isStopped}get currentFrame(){return this._dotLottieInstanceState.currentFrame}get isFrozen(){return this._dotLottieInstanceState.isFrozen}get segmentDuration(){return this._dotLottieInstanceState.segmentDuration}get totalFrames(){return this._dotLottieInstanceState.totalFrames}get segment(){return this._dotLottieInstanceState.segment}get speed(){return this._dotLottieInstanceState.speed}get duration(){return this._dotLottieInstanceState.duration}get isReady(){return this._dotLottieInstanceState.isReady}get mode(){return this._dotLottieInstanceState.mode}get canvas(){return this._canvas}get autoplay(){return this._dotLottieInstanceState.autoplay}get backgroundColor(){return this._dotLottieInstanceState.backgroundColor}get loop(){return this._dotLottieInstanceState.loop}get useFrameInterpolation(){return this._dotLottieInstanceState.useFrameInterpolation}get renderConfig(){return this._dotLottieInstanceState.renderConfig}get manifest(){return this._dotLottieInstanceState.manifest}get activeAnimationId(){return this._dotLottieInstanceState.activeAnimationId}get marker(){return this._dotLottieInstanceState.marker}get activeThemeId(){return this._dotLottieInstanceState.activeThemeId}get layout(){return this._dotLottieInstanceState.layout}play(){return $1(this,null,function*(){this._created&&(yield this._sendMessage("play",{instanceId:this._id}),yield this._updateDotLottieInstanceState(),r3&&this._canvas instanceof HTMLCanvasElement&&this._dotLottieInstanceState.renderConfig.freezeOnOffscreen&&!Ec(this._canvas)&&(yield this.freeze()))})}pause(){return $1(this,null,function*(){this._created&&(yield this._sendMessage("pause",{instanceId:this._id}),yield this._updateDotLottieInstanceState())})}stop(){return $1(this,null,function*(){this._created&&(yield this._sendMessage("stop",{instanceId:this._id}),yield this._updateDotLottieInstanceState())})}setSpeed(a){return $1(this,null,function*(){this._created&&(yield this._sendMessage("setSpeed",{instanceId:this._id,speed:a}),yield this._updateDotLottieInstanceState())})}setMode(a){return $1(this,null,function*(){this._created&&(yield this._sendMessage("setMode",{instanceId:this._id,mode:a}),yield this._updateDotLottieInstanceState())})}setFrame(a){return $1(this,null,function*(){this._created&&(yield this._sendMessage("setFrame",{frame:a,instanceId:this._id}),yield this._updateDotLottieInstanceState())})}setSegment(a,r){return $1(this,null,function*(){this._created&&(yield this._sendMessage("setSegment",{instanceId:this._id,segment:[a,r]}),yield this._updateDotLottieInstanceState())})}setRenderConfig(a){return $1(this,null,function*(){if(!this._created)return;let r=a,{devicePixelRatio:l,freezeOnOffscreen:s}=r,c=xc(r,["devicePixelRatio","freezeOnOffscreen"]);yield this._sendMessage("setRenderConfig",{instanceId:this._id,renderConfig:y3(J2(J2({},this._dotLottieInstanceState.renderConfig),c),{devicePixelRatio:l||Ft(),freezeOnOffscreen:s??!0})}),yield this._updateDotLottieInstanceState(),r3&&this._canvas instanceof HTMLCanvasElement&&(this._dotLottieInstanceState.renderConfig.autoResize?ye.observe(this._canvas,this):ye.unobserve(this._canvas),this._dotLottieInstanceState.renderConfig.freezeOnOffscreen?ge.observe(this._canvas,this):(ge.unobserve(this._canvas),this._dotLottieInstanceState.isFrozen&&(yield this.unfreeze())))})}setUseFrameInterpolation(a){return $1(this,null,function*(){this._created&&(yield this._sendMessage("setUseFrameInterpolation",{instanceId:this._id,useFrameInterpolation:a}),yield this._updateDotLottieInstanceState())})}setTheme(a){return $1(this,null,function*(){if(!this._created)return!1;let r=this._sendMessage("setTheme",{instanceId:this._id,themeId:a});return yield this._updateDotLottieInstanceState(),r})}load(a){return $1(this,null,function*(){this._created&&(yield this._sendMessage("load",{config:a,instanceId:this._id}),yield this._updateDotLottieInstanceState())})}setLoop(a){return $1(this,null,function*(){this._created&&(yield this._sendMessage("setLoop",{instanceId:this._id,loop:a}),yield this._updateDotLottieInstanceState())})}resize(){return $1(this,null,function*(){if(!this._created)return;let{height:a,width:r}=wu(this._canvas,this._dotLottieInstanceState.renderConfig.devicePixelRatio||Ft());yield this._sendMessage("resize",{height:a,instanceId:this._id,width:r}),yield this._updateDotLottieInstanceState()})}destroy(){return $1(this,null,function*(){this._created&&(this._created=!1,yield this._sendMessage("destroy",{instanceId:this._id}),this._cleanupStateMachineListeners(),Vt._workerManager.unassignAnimationFromWorker(this._id),this._eventManager.removeAllEventListeners(),r3&&this._canvas instanceof HTMLCanvasElement&&(ge.unobserve(this._canvas),ye.unobserve(this._canvas)))})}freeze(){return $1(this,null,function*(){this._created&&(yield this._sendMessage("freeze",{instanceId:this._id}),yield this._updateDotLottieInstanceState())})}unfreeze(){return $1(this,null,function*(){this._created&&(yield this._sendMessage("unfreeze",{instanceId:this._id}),yield this._updateDotLottieInstanceState())})}setBackgroundColor(a){return $1(this,null,function*(){this._created&&(yield this._sendMessage("setBackgroundColor",{instanceId:this._id,backgroundColor:a}),yield this._updateDotLottieInstanceState())})}loadAnimation(a){return $1(this,null,function*(){this._created&&(yield this._sendMessage("loadAnimation",{animationId:a,instanceId:this._id}),yield this._updateDotLottieInstanceState())})}setLayout(a){return $1(this,null,function*(){this._created&&(yield this._sendMessage("setLayout",{instanceId:this._id,layout:a}),yield this._updateDotLottieInstanceState())})}_updateDotLottieInstanceState(){return $1(this,null,function*(){if(!this._created)return;let a=yield this._sendMessage("getDotLottieInstanceState",{instanceId:this._id});this._dotLottieInstanceState=a.state})}markers(){return this._dotLottieInstanceState.markers}setMarker(a){return $1(this,null,function*(){this._created&&(yield this._sendMessage("setMarker",{instanceId:this._id,marker:a}),yield this._updateDotLottieInstanceState())})}setThemeData(a){return $1(this,null,function*(){if(!this._created)return!1;let r=yield this._sendMessage("setThemeData",{instanceId:this._id,themeData:a});return yield this._updateDotLottieInstanceState(),r})}setViewport(a,r,l,s){return $1(this,null,function*(){return this._created?this._sendMessage("setViewport",{x:a,y:r,width:l,height:s,instanceId:this._id}):!1})}_sendMessage(a,r,l){return $1(this,null,function*(){let s={id:`dotlottie-request-${xu()}`,method:a,params:r};return this._worker.postMessage(s,l||[]),new Promise((c,d)=>{let h=v=>{let p=v.data;p.id===s.id&&(this._worker.removeEventListener("message",h),p.error?d(new Error(`Failed to execute method ${a}: ${p.error}`)):c(p.result))};this._worker.addEventListener("message",h)})})}addEventListener(a,r){this._eventManager.addEventListener(a,r)}removeEventListener(a,r){this._eventManager.removeEventListener(a,r)}static setWasmUrl(a){Vt._wasmUrl=a}loadStateMachine(a){return $1(this,null,function*(){if(!this._created)return!1;let r=yield this._sendMessage("loadStateMachine",{instanceId:this._id,stateMachineId:a});return yield this._updateDotLottieInstanceState(),r})}loadStateMachineData(a){return $1(this,null,function*(){if(!this._created)return!1;let r=yield this._sendMessage("loadStateMachineData",{instanceId:this._id,stateMachineData:a});return yield this._updateDotLottieInstanceState(),r})}startStateMachine(){return $1(this,null,function*(){if(!this._created)return!1;this._setupStateMachineListeners();let a=yield this._sendMessage("startStateMachine",{instanceId:this._id});return yield this._updateDotLottieInstanceState(),a})}stopStateMachine(){return $1(this,null,function*(){return this._created?(this._cleanupStateMachineListeners(),this._sendMessage("stopStateMachine",{instanceId:this._id})):!1})}getStateMachineListeners(){return $1(this,null,function*(){return this._created?this._sendMessage("getStateMachineListeners",{instanceId:this._id}):[]})}_getPointerPosition(a){let r=this._canvas.getBoundingClientRect(),l=this._canvas.width/r.width,s=this._canvas.height/r.height,c=this._dotLottieInstanceState.renderConfig.devicePixelRatio||window.devicePixelRatio||1,d=(a.clientX-r.left)*l/c,h=(a.clientY-r.top)*s/c;return{x:d,y:h}}_onPointerUp(a){let{x:r,y:l}=this._getPointerPosition(a);this._sendMessage("postPointerUpEvent",{instanceId:this._id,x:r,y:l})}_onPointerDown(a){let{x:r,y:l}=this._getPointerPosition(a);this._sendMessage("postPointerDownEvent",{instanceId:this._id,x:r,y:l})}_onPointerMove(a){let{x:r,y:l}=this._getPointerPosition(a);this._sendMessage("postPointerMoveEvent",{instanceId:this._id,x:r,y:l})}_onPointerEnter(a){let{x:r,y:l}=this._getPointerPosition(a);this._sendMessage("postPointerEnterEvent",{instanceId:this._id,x:r,y:l})}_onPointerLeave(a){let{x:r,y:l}=this._getPointerPosition(a);this._sendMessage("postPointerExitEvent",{instanceId:this._id,x:r,y:l})}_setupStateMachineListeners(){return $1(this,null,function*(){if(r3&&this._canvas instanceof HTMLCanvasElement&&this.isLoaded){let a=yield this._sendMessage("getStateMachineListeners",{instanceId:this._id});a.includes("PointerUp")&&this._canvas.addEventListener("pointerup",this._pointerUpMethod),a.includes("PointerDown")&&this._canvas.addEventListener("pointerdown",this._pointerDownMethod),a.includes("PointerMove")&&this._canvas.addEventListener("pointermove",this._pointerMoveMethod),a.includes("PointerEnter")&&this._canvas.addEventListener("pointerenter",this._pointerEnterMethod),a.includes("PointerExit")&&this._canvas.addEventListener("pointerleave",this._pointerExitMethod)}})}_cleanupStateMachineListeners(){r3&&this._canvas instanceof HTMLCanvasElement&&(this._canvas.removeEventListener("pointerup",this._pointerUpMethod),this._canvas.removeEventListener("pointerdown",this._pointerDownMethod),this._canvas.removeEventListener("pointermove",this._pointerMoveMethod),this._canvas.removeEventListener("pointerenter",this._pointerEnterMethod),this._canvas.removeEventListener("pointerleave",this._pointerExitMethod))}};j1(Su,"_workerManager",new W8),j1(Su,"_wasmUrl","");var eg=({animationId:n,autoplay:a,backgroundColor:r,className:l,createDotLottie:s,data:c,dotLottieRefCallback:d,layout:h,loop:v,mode:p,playOnHover:_,renderConfig:w,segment:k,speed:S,src:B,style:V,themeData:e1,themeId:$,useFrameInterpolation:n1,workerId:o1,...A1})=>{let[i1,I]=d2.useState(null),v1=d2.useRef(null),_1=d2.useRef(null),t1=d2.useRef(d),f1={speed:S,mode:p,loop:v,useFrameInterpolation:n1,segment:k,backgroundColor:r,autoplay:a,themeId:$,workerId:o1,src:B,data:c,layout:h,renderConfig:w},u1=d2.useRef(f1);t1.current=d,_1.current=i1,u1.current=f1,d2.useEffect(()=>{typeof t1.current=="function"&&i1&&t1.current(i1)},[i1]);let c1=d2.useCallback(Q=>{if(v1.current=Q,Q){let l1=s({...u1.current,canvas:Q});I(l1)}else i1==null||i1.destroy(),I(null)},[]);return d2.useEffect(()=>{var l1,s1;let Q=M=>{var q,P;_&&(M.type==="mouseenter"&&((q=_1.current)==null||q.play()),M.type==="mouseleave"&&((P=_1.current)==null||P.pause()))};return(l1=v1.current)==null||l1.addEventListener("mouseenter",Q),(s1=v1.current)==null||s1.addEventListener("mouseleave",Q),()=>{var M,q;(M=v1.current)==null||M.removeEventListener("mouseenter",Q),(q=v1.current)==null||q.removeEventListener("mouseleave",Q)}},[_]),d2.useEffect(()=>()=>{i1&&(i1.destroy(),I(null))},[i1]),d2.useEffect(()=>{var Q;(Q=_1.current)==null||Q.setSpeed(S??1)},[S]),d2.useEffect(()=>{var Q;(Q=_1.current)==null||Q.setMode(p??"forward")},[p]),d2.useEffect(()=>{var Q;(Q=_1.current)==null||Q.setLoop(v??!1)},[v]),d2.useEffect(()=>{var Q;(Q=_1.current)==null||Q.setUseFrameInterpolation(n1??!0)},[n1]),d2.useEffect(()=>{var Q;typeof(k==null?void 0:k[0])=="number"&&typeof k[1]=="number"&&((Q=_1.current)==null||Q.setSegment(k[0],k[1]))},[k]),d2.useEffect(()=>{var Q;(Q=_1.current)==null||Q.setBackgroundColor(r??"")},[r]),d2.useEffect(()=>{var Q;(Q=_1.current)==null||Q.setRenderConfig(w??{})},[JSON.stringify(w)]),d2.useEffect(()=>{var Q;typeof c!="string"&&typeof c!="object"||((Q=_1.current)==null||Q.load({data:c,...u1.current}))},[c]),d2.useEffect(()=>{var Q;typeof B=="string"&&((Q=_1.current)==null||Q.load({src:B,...u1.current}))},[B]),d2.useEffect(()=>{var Q;(Q=_1.current)==null||Q.setMarker(A1.marker??"")},[A1.marker]),d2.useEffect(()=>{var Q;(Q=_1.current)==null||Q.loadAnimation(n??"")},[n]),d2.useEffect(()=>{var Q;typeof $=="string"&&((Q=_1.current)==null||Q.setTheme($))},[$]),d2.useEffect(()=>{var Q;(Q=_1.current)==null||Q.setThemeData(e1??"")},[e1]),d2.useEffect(()=>{var Q;(Q=_1.current)==null||Q.setLayout(h??{})},[h==null?void 0:h.fit,(h==null?void 0:h.align)&&h.align[0],(h==null?void 0:h.align)&&h.align[1]]),T1.jsx("div",{className:l,...!l&&{style:{width:"100%",height:"100%",lineHeight:0,...V}},children:T1.jsx("canvas",{ref:c1,style:{width:"100%",height:"100%"},...A1})})},tg=n=>new Z8(n),ng=n=>T1.jsx(eg,{...n,createDotLottie:tg});function ig(){return T1.jsxs("section",{className:"loading",children:[T1.jsx(ng,{className:"loading-gif",src:"https://lottie.host/7337ebab-b7b7-4bb7-ac66-dfef1fa00719/s2DOIPc3W8.lottie",loop:!0,autoplay:!0}),T1.jsx("p",{className:"orange-text",children:"Please wait while we stir up your ingredients ..."})]})}function ag(n){const{ingredients:a,getRecipe:r}=n,l=T1.jsxs("div",{className:"flex get-recipe-prompt",children:[T1.jsxs("div",{children:[T1.jsx("h3",{children:"Ready for a recipe?"}),T1.jsx("p",{children:"Generate a recipe from your list of ingredients."})]}),T1.jsx("button",{onClick:r,className:"orange-btn",children:"Get a recipe"})]});return T1.jsx(T1.Fragment,{children:a.length>=4?l:null})}function rg(n,a){const r={};return(n[n.length-1]===""?[...n,""]:n).join((r.padRight?" ":"")+","+(r.padLeft===!1?"":" ")).trim()}const og=/^[$_\p{ID_Start}][$_\u{200C}\u{200D}\p{ID_Continue}]*$/u,lg=/^[$_\p{ID_Start}][-$_\u{200C}\u{200D}\p{ID_Continue}]*$/u,sg={};function Au(n,a){return(sg.jsx?lg:og).test(n)}const ug=/[ \t\n\f\r]/g;function cg(n){return typeof n=="object"?n.type==="text"?ku(n.value):!1:ku(n)}function ku(n){return n.replace(ug,"")===""}class ni{constructor(a,r,l){this.normal=r,this.property=a,l&&(this.space=l)}}ni.prototype.normal={};ni.prototype.property={};ni.prototype.space=void 0;function Cc(n,a){const r={},l={};for(const s of n)Object.assign(r,s.property),Object.assign(l,s.normal);return new ni(r,l,a)}function tl(n){return n.toLowerCase()}class b3{constructor(a,r){this.attribute=r,this.property=a}}b3.prototype.attribute="";b3.prototype.booleanish=!1;b3.prototype.boolean=!1;b3.prototype.commaOrSpaceSeparated=!1;b3.prototype.commaSeparated=!1;b3.prototype.defined=!1;b3.prototype.mustUseProperty=!1;b3.prototype.number=!1;b3.prototype.overloadedBoolean=!1;b3.prototype.property="";b3.prototype.spaceSeparated=!1;b3.prototype.space=void 0;let fg=0;const z1=Pt(),N2=Pt(),Mc=Pt(),W=Pt(),p2=Pt(),U0=Pt(),D3=Pt();function Pt(){return 2**++fg}const nl=Object.freeze(Object.defineProperty({__proto__:null,boolean:z1,booleanish:N2,commaOrSpaceSeparated:D3,commaSeparated:U0,number:W,overloadedBoolean:Mc,spaceSeparated:p2},Symbol.toStringTag,{value:"Module"})),Bo=Object.keys(nl);class yl extends b3{constructor(a,r,l,s){let c=-1;if(super(a,r),Eu(this,"space",s),typeof l=="number")for(;++c<Bo.length;){const d=Bo[c];Eu(this,Bo[c],(l&nl[d])===nl[d])}}}yl.prototype.defined=!0;function Eu(n,a,r){r&&(n[a]=r)}function j0(n){const a={},r={};for(const[l,s]of Object.entries(n.properties)){const c=new yl(l,n.transform(n.attributes||{},l),s,n.space);n.mustUseProperty&&n.mustUseProperty.includes(l)&&(c.mustUseProperty=!0),a[l]=c,r[tl(l)]=l,r[tl(c.attribute)]=l}return new ni(a,r,n.space)}const Oc=j0({properties:{ariaActiveDescendant:null,ariaAtomic:N2,ariaAutoComplete:null,ariaBusy:N2,ariaChecked:N2,ariaColCount:W,ariaColIndex:W,ariaColSpan:W,ariaControls:p2,ariaCurrent:null,ariaDescribedBy:p2,ariaDetails:null,ariaDisabled:N2,ariaDropEffect:p2,ariaErrorMessage:null,ariaExpanded:N2,ariaFlowTo:p2,ariaGrabbed:N2,ariaHasPopup:null,ariaHidden:N2,ariaInvalid:null,ariaKeyShortcuts:null,ariaLabel:null,ariaLabelledBy:p2,ariaLevel:W,ariaLive:null,ariaModal:N2,ariaMultiLine:N2,ariaMultiSelectable:N2,ariaOrientation:null,ariaOwns:p2,ariaPlaceholder:null,ariaPosInSet:W,ariaPressed:N2,ariaReadOnly:N2,ariaRelevant:null,ariaRequired:N2,ariaRoleDescription:p2,ariaRowCount:W,ariaRowIndex:W,ariaRowSpan:W,ariaSelected:N2,ariaSetSize:W,ariaSort:null,ariaValueMax:W,ariaValueMin:W,ariaValueNow:W,ariaValueText:null,role:null},transform(n,a){return a==="role"?a:"aria-"+a.slice(4).toLowerCase()}});function Dc(n,a){return a in n?n[a]:a}function Lc(n,a){return Dc(n,a.toLowerCase())}const dg=j0({attributes:{acceptcharset:"accept-charset",classname:"class",htmlfor:"for",httpequiv:"http-equiv"},mustUseProperty:["checked","multiple","muted","selected"],properties:{abbr:null,accept:U0,acceptCharset:p2,accessKey:p2,action:null,allow:null,allowFullScreen:z1,allowPaymentRequest:z1,allowUserMedia:z1,alt:null,as:null,async:z1,autoCapitalize:null,autoComplete:p2,autoFocus:z1,autoPlay:z1,blocking:p2,capture:null,charSet:null,checked:z1,cite:null,className:p2,cols:W,colSpan:null,content:null,contentEditable:N2,controls:z1,controlsList:p2,coords:W|U0,crossOrigin:null,data:null,dateTime:null,decoding:null,default:z1,defer:z1,dir:null,dirName:null,disabled:z1,download:Mc,draggable:N2,encType:null,enterKeyHint:null,fetchPriority:null,form:null,formAction:null,formEncType:null,formMethod:null,formNoValidate:z1,formTarget:null,headers:p2,height:W,hidden:z1,high:W,href:null,hrefLang:null,htmlFor:p2,httpEquiv:p2,id:null,imageSizes:null,imageSrcSet:null,inert:z1,inputMode:null,integrity:null,is:null,isMap:z1,itemId:null,itemProp:p2,itemRef:p2,itemScope:z1,itemType:p2,kind:null,label:null,lang:null,language:null,list:null,loading:null,loop:z1,low:W,manifest:null,max:null,maxLength:W,media:null,method:null,min:null,minLength:W,multiple:z1,muted:z1,name:null,nonce:null,noModule:z1,noValidate:z1,onAbort:null,onAfterPrint:null,onAuxClick:null,onBeforeMatch:null,onBeforePrint:null,onBeforeToggle:null,onBeforeUnload:null,onBlur:null,onCancel:null,onCanPlay:null,onCanPlayThrough:null,onChange:null,onClick:null,onClose:null,onContextLost:null,onContextMenu:null,onContextRestored:null,onCopy:null,onCueChange:null,onCut:null,onDblClick:null,onDrag:null,onDragEnd:null,onDragEnter:null,onDragExit:null,onDragLeave:null,onDragOver:null,onDragStart:null,onDrop:null,onDurationChange:null,onEmptied:null,onEnded:null,onError:null,onFocus:null,onFormData:null,onHashChange:null,onInput:null,onInvalid:null,onKeyDown:null,onKeyPress:null,onKeyUp:null,onLanguageChange:null,onLoad:null,onLoadedData:null,onLoadedMetadata:null,onLoadEnd:null,onLoadStart:null,onMessage:null,onMessageError:null,onMouseDown:null,onMouseEnter:null,onMouseLeave:null,onMouseMove:null,onMouseOut:null,onMouseOver:null,onMouseUp:null,onOffline:null,onOnline:null,onPageHide:null,onPageShow:null,onPaste:null,onPause:null,onPlay:null,onPlaying:null,onPopState:null,onProgress:null,onRateChange:null,onRejectionHandled:null,onReset:null,onResize:null,onScroll:null,onScrollEnd:null,onSecurityPolicyViolation:null,onSeeked:null,onSeeking:null,onSelect:null,onSlotChange:null,onStalled:null,onStorage:null,onSubmit:null,onSuspend:null,onTimeUpdate:null,onToggle:null,onUnhandledRejection:null,onUnload:null,onVolumeChange:null,onWaiting:null,onWheel:null,open:z1,optimum:W,pattern:null,ping:p2,placeholder:null,playsInline:z1,popover:null,popoverTarget:null,popoverTargetAction:null,poster:null,preload:null,readOnly:z1,referrerPolicy:null,rel:p2,required:z1,reversed:z1,rows:W,rowSpan:W,sandbox:p2,scope:null,scoped:z1,seamless:z1,selected:z1,shadowRootClonable:z1,shadowRootDelegatesFocus:z1,shadowRootMode:null,shape:null,size:W,sizes:null,slot:null,span:W,spellCheck:N2,src:null,srcDoc:null,srcLang:null,srcSet:null,start:W,step:null,style:null,tabIndex:W,target:null,title:null,translate:null,type:null,typeMustMatch:z1,useMap:null,value:N2,width:W,wrap:null,writingSuggestions:null,align:null,aLink:null,archive:p2,axis:null,background:null,bgColor:null,border:W,borderColor:null,bottomMargin:W,cellPadding:null,cellSpacing:null,char:null,charOff:null,classId:null,clear:null,code:null,codeBase:null,codeType:null,color:null,compact:z1,declare:z1,event:null,face:null,frame:null,frameBorder:null,hSpace:W,leftMargin:W,link:null,longDesc:null,lowSrc:null,marginHeight:W,marginWidth:W,noResize:z1,noHref:z1,noShade:z1,noWrap:z1,object:null,profile:null,prompt:null,rev:null,rightMargin:W,rules:null,scheme:null,scrolling:N2,standby:null,summary:null,text:null,topMargin:W,valueType:null,version:null,vAlign:null,vLink:null,vSpace:W,allowTransparency:null,autoCorrect:null,autoSave:null,disablePictureInPicture:z1,disableRemotePlayback:z1,prefix:null,property:null,results:W,security:null,unselectable:null},space:"html",transform:Lc}),pg=j0({attributes:{accentHeight:"accent-height",alignmentBaseline:"alignment-baseline",arabicForm:"arabic-form",baselineShift:"baseline-shift",capHeight:"cap-height",className:"class",clipPath:"clip-path",clipRule:"clip-rule",colorInterpolation:"color-interpolation",colorInterpolationFilters:"color-interpolation-filters",colorProfile:"color-profile",colorRendering:"color-rendering",crossOrigin:"crossorigin",dataType:"datatype",dominantBaseline:"dominant-baseline",enableBackground:"enable-background",fillOpacity:"fill-opacity",fillRule:"fill-rule",floodColor:"flood-color",floodOpacity:"flood-opacity",fontFamily:"font-family",fontSize:"font-size",fontSizeAdjust:"font-size-adjust",fontStretch:"font-stretch",fontStyle:"font-style",fontVariant:"font-variant",fontWeight:"font-weight",glyphName:"glyph-name",glyphOrientationHorizontal:"glyph-orientation-horizontal",glyphOrientationVertical:"glyph-orientation-vertical",hrefLang:"hreflang",horizAdvX:"horiz-adv-x",horizOriginX:"horiz-origin-x",horizOriginY:"horiz-origin-y",imageRendering:"image-rendering",letterSpacing:"letter-spacing",lightingColor:"lighting-color",markerEnd:"marker-end",markerMid:"marker-mid",markerStart:"marker-start",navDown:"nav-down",navDownLeft:"nav-down-left",navDownRight:"nav-down-right",navLeft:"nav-left",navNext:"nav-next",navPrev:"nav-prev",navRight:"nav-right",navUp:"nav-up",navUpLeft:"nav-up-left",navUpRight:"nav-up-right",onAbort:"onabort",onActivate:"onactivate",onAfterPrint:"onafterprint",onBeforePrint:"onbeforeprint",onBegin:"onbegin",onCancel:"oncancel",onCanPlay:"oncanplay",onCanPlayThrough:"oncanplaythrough",onChange:"onchange",onClick:"onclick",onClose:"onclose",onCopy:"oncopy",onCueChange:"oncuechange",onCut:"oncut",onDblClick:"ondblclick",onDrag:"ondrag",onDragEnd:"ondragend",onDragEnter:"ondragenter",onDragExit:"ondragexit",onDragLeave:"ondragleave",onDragOver:"ondragover",onDragStart:"ondragstart",onDrop:"ondrop",onDurationChange:"ondurationchange",onEmptied:"onemptied",onEnd:"onend",onEnded:"onended",onError:"onerror",onFocus:"onfocus",onFocusIn:"onfocusin",onFocusOut:"onfocusout",onHashChange:"onhashchange",onInput:"oninput",onInvalid:"oninvalid",onKeyDown:"onkeydown",onKeyPress:"onkeypress",onKeyUp:"onkeyup",onLoad:"onload",onLoadedData:"onloadeddata",onLoadedMetadata:"onloadedmetadata",onLoadStart:"onloadstart",onMessage:"onmessage",onMouseDown:"onmousedown",onMouseEnter:"onmouseenter",onMouseLeave:"onmouseleave",onMouseMove:"onmousemove",onMouseOut:"onmouseout",onMouseOver:"onmouseover",onMouseUp:"onmouseup",onMouseWheel:"onmousewheel",onOffline:"onoffline",onOnline:"ononline",onPageHide:"onpagehide",onPageShow:"onpageshow",onPaste:"onpaste",onPause:"onpause",onPlay:"onplay",onPlaying:"onplaying",onPopState:"onpopstate",onProgress:"onprogress",onRateChange:"onratechange",onRepeat:"onrepeat",onReset:"onreset",onResize:"onresize",onScroll:"onscroll",onSeeked:"onseeked",onSeeking:"onseeking",onSelect:"onselect",onShow:"onshow",onStalled:"onstalled",onStorage:"onstorage",onSubmit:"onsubmit",onSuspend:"onsuspend",onTimeUpdate:"ontimeupdate",onToggle:"ontoggle",onUnload:"onunload",onVolumeChange:"onvolumechange",onWaiting:"onwaiting",onZoom:"onzoom",overlinePosition:"overline-position",overlineThickness:"overline-thickness",paintOrder:"paint-order",panose1:"panose-1",pointerEvents:"pointer-events",referrerPolicy:"referrerpolicy",renderingIntent:"rendering-intent",shapeRendering:"shape-rendering",stopColor:"stop-color",stopOpacity:"stop-opacity",strikethroughPosition:"strikethrough-position",strikethroughThickness:"strikethrough-thickness",strokeDashArray:"stroke-dasharray",strokeDashOffset:"stroke-dashoffset",strokeLineCap:"stroke-linecap",strokeLineJoin:"stroke-linejoin",strokeMiterLimit:"stroke-miterlimit",strokeOpacity:"stroke-opacity",strokeWidth:"stroke-width",tabIndex:"tabindex",textAnchor:"text-anchor",textDecoration:"text-decoration",textRendering:"text-rendering",transformOrigin:"transform-origin",typeOf:"typeof",underlinePosition:"underline-position",underlineThickness:"underline-thickness",unicodeBidi:"unicode-bidi",unicodeRange:"unicode-range",unitsPerEm:"units-per-em",vAlphabetic:"v-alphabetic",vHanging:"v-hanging",vIdeographic:"v-ideographic",vMathematical:"v-mathematical",vectorEffect:"vector-effect",vertAdvY:"vert-adv-y",vertOriginX:"vert-origin-x",vertOriginY:"vert-origin-y",wordSpacing:"word-spacing",writingMode:"writing-mode",xHeight:"x-height",playbackOrder:"playbackorder",timelineBegin:"timelinebegin"},properties:{about:D3,accentHeight:W,accumulate:null,additive:null,alignmentBaseline:null,alphabetic:W,amplitude:W,arabicForm:null,ascent:W,attributeName:null,attributeType:null,azimuth:W,bandwidth:null,baselineShift:null,baseFrequency:null,baseProfile:null,bbox:null,begin:null,bias:W,by:null,calcMode:null,capHeight:W,className:p2,clip:null,clipPath:null,clipPathUnits:null,clipRule:null,color:null,colorInterpolation:null,colorInterpolationFilters:null,colorProfile:null,colorRendering:null,content:null,contentScriptType:null,contentStyleType:null,crossOrigin:null,cursor:null,cx:null,cy:null,d:null,dataType:null,defaultAction:null,descent:W,diffuseConstant:W,direction:null,display:null,dur:null,divisor:W,dominantBaseline:null,download:z1,dx:null,dy:null,edgeMode:null,editable:null,elevation:W,enableBackground:null,end:null,event:null,exponent:W,externalResourcesRequired:null,fill:null,fillOpacity:W,fillRule:null,filter:null,filterRes:null,filterUnits:null,floodColor:null,floodOpacity:null,focusable:null,focusHighlight:null,fontFamily:null,fontSize:null,fontSizeAdjust:null,fontStretch:null,fontStyle:null,fontVariant:null,fontWeight:null,format:null,fr:null,from:null,fx:null,fy:null,g1:U0,g2:U0,glyphName:U0,glyphOrientationHorizontal:null,glyphOrientationVertical:null,glyphRef:null,gradientTransform:null,gradientUnits:null,handler:null,hanging:W,hatchContentUnits:null,hatchUnits:null,height:null,href:null,hrefLang:null,horizAdvX:W,horizOriginX:W,horizOriginY:W,id:null,ideographic:W,imageRendering:null,initialVisibility:null,in:null,in2:null,intercept:W,k:W,k1:W,k2:W,k3:W,k4:W,kernelMatrix:D3,kernelUnitLength:null,keyPoints:null,keySplines:null,keyTimes:null,kerning:null,lang:null,lengthAdjust:null,letterSpacing:null,lightingColor:null,limitingConeAngle:W,local:null,markerEnd:null,markerMid:null,markerStart:null,markerHeight:null,markerUnits:null,markerWidth:null,mask:null,maskContentUnits:null,maskUnits:null,mathematical:null,max:null,media:null,mediaCharacterEncoding:null,mediaContentEncodings:null,mediaSize:W,mediaTime:null,method:null,min:null,mode:null,name:null,navDown:null,navDownLeft:null,navDownRight:null,navLeft:null,navNext:null,navPrev:null,navRight:null,navUp:null,navUpLeft:null,navUpRight:null,numOctaves:null,observer:null,offset:null,onAbort:null,onActivate:null,onAfterPrint:null,onBeforePrint:null,onBegin:null,onCancel:null,onCanPlay:null,onCanPlayThrough:null,onChange:null,onClick:null,onClose:null,onCopy:null,onCueChange:null,onCut:null,onDblClick:null,onDrag:null,onDragEnd:null,onDragEnter:null,onDragExit:null,onDragLeave:null,onDragOver:null,onDragStart:null,onDrop:null,onDurationChange:null,onEmptied:null,onEnd:null,onEnded:null,onError:null,onFocus:null,onFocusIn:null,onFocusOut:null,onHashChange:null,onInput:null,onInvalid:null,onKeyDown:null,onKeyPress:null,onKeyUp:null,onLoad:null,onLoadedData:null,onLoadedMetadata:null,onLoadStart:null,onMessage:null,onMouseDown:null,onMouseEnter:null,onMouseLeave:null,onMouseMove:null,onMouseOut:null,onMouseOver:null,onMouseUp:null,onMouseWheel:null,onOffline:null,onOnline:null,onPageHide:null,onPageShow:null,onPaste:null,onPause:null,onPlay:null,onPlaying:null,onPopState:null,onProgress:null,onRateChange:null,onRepeat:null,onReset:null,onResize:null,onScroll:null,onSeeked:null,onSeeking:null,onSelect:null,onShow:null,onStalled:null,onStorage:null,onSubmit:null,onSuspend:null,onTimeUpdate:null,onToggle:null,onUnload:null,onVolumeChange:null,onWaiting:null,onZoom:null,opacity:null,operator:null,order:null,orient:null,orientation:null,origin:null,overflow:null,overlay:null,overlinePosition:W,overlineThickness:W,paintOrder:null,panose1:null,path:null,pathLength:W,patternContentUnits:null,patternTransform:null,patternUnits:null,phase:null,ping:p2,pitch:null,playbackOrder:null,pointerEvents:null,points:null,pointsAtX:W,pointsAtY:W,pointsAtZ:W,preserveAlpha:null,preserveAspectRatio:null,primitiveUnits:null,propagate:null,property:D3,r:null,radius:null,referrerPolicy:null,refX:null,refY:null,rel:D3,rev:D3,renderingIntent:null,repeatCount:null,repeatDur:null,requiredExtensions:D3,requiredFeatures:D3,requiredFonts:D3,requiredFormats:D3,resource:null,restart:null,result:null,rotate:null,rx:null,ry:null,scale:null,seed:null,shapeRendering:null,side:null,slope:null,snapshotTime:null,specularConstant:W,specularExponent:W,spreadMethod:null,spacing:null,startOffset:null,stdDeviation:null,stemh:null,stemv:null,stitchTiles:null,stopColor:null,stopOpacity:null,strikethroughPosition:W,strikethroughThickness:W,string:null,stroke:null,strokeDashArray:D3,strokeDashOffset:null,strokeLineCap:null,strokeLineJoin:null,strokeMiterLimit:W,strokeOpacity:W,strokeWidth:null,style:null,surfaceScale:W,syncBehavior:null,syncBehaviorDefault:null,syncMaster:null,syncTolerance:null,syncToleranceDefault:null,systemLanguage:D3,tabIndex:W,tableValues:null,target:null,targetX:W,targetY:W,textAnchor:null,textDecoration:null,textRendering:null,textLength:null,timelineBegin:null,title:null,transformBehavior:null,type:null,typeOf:D3,to:null,transform:null,transformOrigin:null,u1:null,u2:null,underlinePosition:W,underlineThickness:W,unicode:null,unicodeBidi:null,unicodeRange:null,unitsPerEm:W,values:null,vAlphabetic:W,vMathematical:W,vectorEffect:null,vHanging:W,vIdeographic:W,version:null,vertAdvY:W,vertOriginX:W,vertOriginY:W,viewBox:null,viewTarget:null,visibility:null,width:null,widths:null,wordSpacing:null,writingMode:null,x:null,x1:null,x2:null,xChannelSelector:null,xHeight:W,y:null,y1:null,y2:null,yChannelSelector:null,z:null,zoomAndPan:null},space:"svg",transform:Dc}),Rc=j0({properties:{xLinkActuate:null,xLinkArcRole:null,xLinkHref:null,xLinkRole:null,xLinkShow:null,xLinkTitle:null,xLinkType:null},space:"xlink",transform(n,a){return"xlink:"+a.slice(5).toLowerCase()}}),Uc=j0({attributes:{xmlnsxlink:"xmlns:xlink"},properties:{xmlnsXLink:null,xmlns:null},space:"xmlns",transform:Lc}),zc=j0({properties:{xmlBase:null,xmlLang:null,xmlSpace:null},space:"xml",transform(n,a){return"xml:"+a.slice(3).toLowerCase()}}),hg={classId:"classID",dataType:"datatype",itemId:"itemID",strokeDashArray:"strokeDasharray",strokeDashOffset:"strokeDashoffset",strokeLineCap:"strokeLinecap",strokeLineJoin:"strokeLinejoin",strokeMiterLimit:"strokeMiterlimit",typeOf:"typeof",xLinkActuate:"xlinkActuate",xLinkArcRole:"xlinkArcrole",xLinkHref:"xlinkHref",xLinkRole:"xlinkRole",xLinkShow:"xlinkShow",xLinkTitle:"xlinkTitle",xLinkType:"xlinkType",xmlnsXLink:"xmlnsXlink"},mg=/[A-Z]/g,Tu=/-[a-z]/g,gg=/^data[-\w.:]+$/i;function yg(n,a){const r=tl(a);let l=a,s=b3;if(r in n.normal)return n.property[n.normal[r]];if(r.length>4&&r.slice(0,4)==="data"&&gg.test(a)){if(a.charAt(4)==="-"){const c=a.slice(5).replace(Tu,bg);l="data"+c.charAt(0).toUpperCase()+c.slice(1)}else{const c=a.slice(4);if(!Tu.test(c)){let d=c.replace(mg,vg);d.charAt(0)!=="-"&&(d="-"+d),a="data"+d}}s=yl}return new s(l,a)}function vg(n){return"-"+n.toLowerCase()}function bg(n){return n.charAt(1).toUpperCase()}const _g=Cc([Oc,dg,Rc,Uc,zc],"html"),vl=Cc([Oc,pg,Rc,Uc,zc],"svg");function wg(n){return n.join(" ").trim()}var L0={},qo,Cu;function xg(){if(Cu)return qo;Cu=1;var n=/\/\*[^*]*\*+([^/*][^*]*\*+)*\//g,a=/\n/g,r=/^\s*/,l=/^(\*?[-#/*\\\w]+(\[[0-9a-z_-]+\])?)\s*/,s=/^:\s*/,c=/^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};])+)/,d=/^[;\s]*/,h=/^\s+|\s+$/g,v=`
`,p="/",_="*",w="",k="comment",S="declaration";qo=function(V,e1){if(typeof V!="string")throw new TypeError("First argument must be a string");if(!V)return[];e1=e1||{};var $=1,n1=1;function o1(Q){var l1=Q.match(a);l1&&($+=l1.length);var s1=Q.lastIndexOf(v);n1=~s1?Q.length-s1:n1+Q.length}function A1(){var Q={line:$,column:n1};return function(l1){return l1.position=new i1(Q),_1(),l1}}function i1(Q){this.start=Q,this.end={line:$,column:n1},this.source=e1.source}i1.prototype.content=V;function I(Q){var l1=new Error(e1.source+":"+$+":"+n1+": "+Q);if(l1.reason=Q,l1.filename=e1.source,l1.line=$,l1.column=n1,l1.source=V,!e1.silent)throw l1}function v1(Q){var l1=Q.exec(V);if(l1){var s1=l1[0];return o1(s1),V=V.slice(s1.length),l1}}function _1(){v1(r)}function t1(Q){var l1;for(Q=Q||[];l1=f1();)l1!==!1&&Q.push(l1);return Q}function f1(){var Q=A1();if(!(p!=V.charAt(0)||_!=V.charAt(1))){for(var l1=2;w!=V.charAt(l1)&&(_!=V.charAt(l1)||p!=V.charAt(l1+1));)++l1;if(l1+=2,w===V.charAt(l1-1))return I("End of comment missing");var s1=V.slice(2,l1-2);return n1+=2,o1(s1),V=V.slice(l1),n1+=2,Q({type:k,comment:s1})}}function u1(){var Q=A1(),l1=v1(l);if(l1){if(f1(),!v1(s))return I("property missing ':'");var s1=v1(c),M=Q({type:S,property:B(l1[0].replace(n,w)),value:s1?B(s1[0].replace(n,w)):w});return v1(d),M}}function c1(){var Q=[];t1(Q);for(var l1;l1=u1();)l1!==!1&&(Q.push(l1),t1(Q));return Q}return _1(),c1()};function B(V){return V?V.replace(h,w):w}return qo}var Mu;function Sg(){if(Mu)return L0;Mu=1;var n=L0&&L0.__importDefault||function(l){return l&&l.__esModule?l:{default:l}};Object.defineProperty(L0,"__esModule",{value:!0}),L0.default=r;var a=n(xg());function r(l,s){var c=null;if(!l||typeof l!="string")return c;var d=(0,a.default)(l),h=typeof s=="function";return d.forEach(function(v){if(v.type==="declaration"){var p=v.property,_=v.value;h?s(p,_,v):_&&(c=c||{},c[p]=_)}}),c}return L0}var Yn={},Ou;function Ag(){if(Ou)return Yn;Ou=1,Object.defineProperty(Yn,"__esModule",{value:!0}),Yn.camelCase=void 0;var n=/^--[a-zA-Z0-9_-]+$/,a=/-([a-z])/g,r=/^[^-]+$/,l=/^-(webkit|moz|ms|o|khtml)-/,s=/^-(ms)-/,c=function(p){return!p||r.test(p)||n.test(p)},d=function(p,_){return _.toUpperCase()},h=function(p,_){return"".concat(_,"-")},v=function(p,_){return _===void 0&&(_={}),c(p)?p:(p=p.toLowerCase(),_.reactCompat?p=p.replace(s,h):p=p.replace(l,h),p.replace(a,d))};return Yn.camelCase=v,Yn}var Qn,Du;function kg(){if(Du)return Qn;Du=1;var n=Qn&&Qn.__importDefault||function(s){return s&&s.__esModule?s:{default:s}},a=n(Sg()),r=Ag();function l(s,c){var d={};return!s||typeof s!="string"||(0,a.default)(s,function(h,v){h&&v&&(d[(0,r.camelCase)(h,c)]=v)}),d}return l.default=l,Qn=l,Qn}var Eg=kg();const Tg=cl(Eg),Nc=Ic("end"),bl=Ic("start");function Ic(n){return a;function a(r){const l=r&&r.position&&r.position[n]||{};if(typeof l.line=="number"&&l.line>0&&typeof l.column=="number"&&l.column>0)return{line:l.line,column:l.column,offset:typeof l.offset=="number"&&l.offset>-1?l.offset:void 0}}}function Cg(n){const a=bl(n),r=Nc(n);if(a&&r)return{start:a,end:r}}function Kn(n){return!n||typeof n!="object"?"":"position"in n||"type"in n?Lu(n.position):"start"in n||"end"in n?Lu(n):"line"in n||"column"in n?il(n):""}function il(n){return Ru(n&&n.line)+":"+Ru(n&&n.column)}function Lu(n){return il(n&&n.start)+"-"+il(n&&n.end)}function Ru(n){return n&&typeof n=="number"?n:1}class o3 extends Error{constructor(a,r,l){super(),typeof r=="string"&&(l=r,r=void 0);let s="",c={},d=!1;if(r&&("line"in r&&"column"in r?c={place:r}:"start"in r&&"end"in r?c={place:r}:"type"in r?c={ancestors:[r],place:r.position}:c={...r}),typeof a=="string"?s=a:!c.cause&&a&&(d=!0,s=a.message,c.cause=a),!c.ruleId&&!c.source&&typeof l=="string"){const v=l.indexOf(":");v===-1?c.ruleId=l:(c.source=l.slice(0,v),c.ruleId=l.slice(v+1))}if(!c.place&&c.ancestors&&c.ancestors){const v=c.ancestors[c.ancestors.length-1];v&&(c.place=v.position)}const h=c.place&&"start"in c.place?c.place.start:c.place;this.ancestors=c.ancestors||void 0,this.cause=c.cause||void 0,this.column=h?h.column:void 0,this.fatal=void 0,this.file,this.message=s,this.line=h?h.line:void 0,this.name=Kn(c.place)||"1:1",this.place=c.place||void 0,this.reason=this.message,this.ruleId=c.ruleId||void 0,this.source=c.source||void 0,this.stack=d&&c.cause&&typeof c.cause.stack=="string"?c.cause.stack:"",this.actual,this.expected,this.note,this.url}}o3.prototype.file="";o3.prototype.name="";o3.prototype.reason="";o3.prototype.message="";o3.prototype.stack="";o3.prototype.column=void 0;o3.prototype.line=void 0;o3.prototype.ancestors=void 0;o3.prototype.cause=void 0;o3.prototype.fatal=void 0;o3.prototype.place=void 0;o3.prototype.ruleId=void 0;o3.prototype.source=void 0;const _l={}.hasOwnProperty,Mg=new Map,Og=/[A-Z]/g,Dg=new Set(["table","tbody","thead","tfoot","tr"]),Lg=new Set(["td","th"]),jc="https://github.com/syntax-tree/hast-util-to-jsx-runtime";function Rg(n,a){if(!a||a.Fragment===void 0)throw new TypeError("Expected `Fragment` in options");const r=a.filePath||void 0;let l;if(a.development){if(typeof a.jsxDEV!="function")throw new TypeError("Expected `jsxDEV` in options when `development: true`");l=Hg(r,a.jsxDEV)}else{if(typeof a.jsx!="function")throw new TypeError("Expected `jsx` in production options");if(typeof a.jsxs!="function")throw new TypeError("Expected `jsxs` in production options");l=qg(r,a.jsx,a.jsxs)}const s={Fragment:a.Fragment,ancestors:[],components:a.components||{},create:l,elementAttributeNameCase:a.elementAttributeNameCase||"react",evaluater:a.createEvaluater?a.createEvaluater():void 0,filePath:r,ignoreInvalidStyle:a.ignoreInvalidStyle||!1,passKeys:a.passKeys!==!1,passNode:a.passNode||!1,schema:a.space==="svg"?vl:_g,stylePropertyNameCase:a.stylePropertyNameCase||"dom",tableCellAlignToStyle:a.tableCellAlignToStyle!==!1},c=Bc(s,n,void 0);return c&&typeof c!="string"?c:s.create(n,s.Fragment,{children:c||void 0},void 0)}function Bc(n,a,r){if(a.type==="element")return Ug(n,a,r);if(a.type==="mdxFlowExpression"||a.type==="mdxTextExpression")return zg(n,a);if(a.type==="mdxJsxFlowElement"||a.type==="mdxJsxTextElement")return Ig(n,a,r);if(a.type==="mdxjsEsm")return Ng(n,a);if(a.type==="root")return jg(n,a,r);if(a.type==="text")return Bg(n,a)}function Ug(n,a,r){const l=n.schema;let s=l;a.tagName.toLowerCase()==="svg"&&l.space==="html"&&(s=vl,n.schema=s),n.ancestors.push(a);const c=Hc(n,a.tagName,!1),d=Vg(n,a);let h=xl(n,a);return Dg.has(a.tagName)&&(h=h.filter(function(v){return typeof v=="string"?!cg(v):!0})),qc(n,d,c,a),wl(d,h),n.ancestors.pop(),n.schema=l,n.create(a,c,d,r)}function zg(n,a){if(a.data&&a.data.estree&&n.evaluater){const l=a.data.estree.body[0];return l.type,n.evaluater.evaluateExpression(l.expression)}ei(n,a.position)}function Ng(n,a){if(a.data&&a.data.estree&&n.evaluater)return n.evaluater.evaluateProgram(a.data.estree);ei(n,a.position)}function Ig(n,a,r){const l=n.schema;let s=l;a.name==="svg"&&l.space==="html"&&(s=vl,n.schema=s),n.ancestors.push(a);const c=a.name===null?n.Fragment:Hc(n,a.name,!0),d=Fg(n,a),h=xl(n,a);return qc(n,d,c,a),wl(d,h),n.ancestors.pop(),n.schema=l,n.create(a,c,d,r)}function jg(n,a,r){const l={};return wl(l,xl(n,a)),n.create(a,n.Fragment,l,r)}function Bg(n,a){return a.value}function qc(n,a,r,l){typeof r!="string"&&r!==n.Fragment&&n.passNode&&(a.node=l)}function wl(n,a){if(a.length>0){const r=a.length>1?a:a[0];r&&(n.children=r)}}function qg(n,a,r){return l;function l(s,c,d,h){const p=Array.isArray(d.children)?r:a;return h?p(c,d,h):p(c,d)}}function Hg(n,a){return r;function r(l,s,c,d){const h=Array.isArray(c.children),v=bl(l);return a(s,c,d,h,{columnNumber:v?v.column-1:void 0,fileName:n,lineNumber:v?v.line:void 0},void 0)}}function Vg(n,a){const r={};let l,s;for(s in a.properties)if(s!=="children"&&_l.call(a.properties,s)){const c=$g(n,s,a.properties[s]);if(c){const[d,h]=c;n.tableCellAlignToStyle&&d==="align"&&typeof h=="string"&&Lg.has(a.tagName)?l=h:r[d]=h}}if(l){const c=r.style||(r.style={});c[n.stylePropertyNameCase==="css"?"text-align":"textAlign"]=l}return r}function Fg(n,a){const r={};for(const l of a.attributes)if(l.type==="mdxJsxExpressionAttribute")if(l.data&&l.data.estree&&n.evaluater){const c=l.data.estree.body[0];c.type;const d=c.expression;d.type;const h=d.properties[0];h.type,Object.assign(r,n.evaluater.evaluateExpression(h.argument))}else ei(n,a.position);else{const s=l.name;let c;if(l.value&&typeof l.value=="object")if(l.value.data&&l.value.data.estree&&n.evaluater){const h=l.value.data.estree.body[0];h.type,c=n.evaluater.evaluateExpression(h.expression)}else ei(n,a.position);else c=l.value===null?!0:l.value;r[s]=c}return r}function xl(n,a){const r=[];let l=-1;const s=n.passKeys?new Map:Mg;for(;++l<a.children.length;){const c=a.children[l];let d;if(n.passKeys){const v=c.type==="element"?c.tagName:c.type==="mdxJsxFlowElement"||c.type==="mdxJsxTextElement"?c.name:void 0;if(v){const p=s.get(v)||0;d=v+"-"+p,s.set(v,p+1)}}const h=Bc(n,c,d);h!==void 0&&r.push(h)}return r}function $g(n,a,r){const l=yg(n.schema,a);if(!(r==null||typeof r=="number"&&Number.isNaN(r))){if(Array.isArray(r)&&(r=l.commaSeparated?rg(r):wg(r)),l.property==="style"){let s=typeof r=="object"?r:Pg(n,String(r));return n.stylePropertyNameCase==="css"&&(s=Yg(s)),["style",s]}return[n.elementAttributeNameCase==="react"&&l.space?hg[l.property]||l.property:l.attribute,r]}}function Pg(n,a){try{return Tg(a,{reactCompat:!0})}catch(r){if(n.ignoreInvalidStyle)return{};const l=r,s=new o3("Cannot parse `style` attribute",{ancestors:n.ancestors,cause:l,ruleId:"style",source:"hast-util-to-jsx-runtime"});throw s.file=n.filePath||void 0,s.url=jc+"#cannot-parse-style-attribute",s}}function Hc(n,a,r){let l;if(!r)l={type:"Literal",value:a};else if(a.includes(".")){const s=a.split(".");let c=-1,d;for(;++c<s.length;){const h=Au(s[c])?{type:"Identifier",name:s[c]}:{type:"Literal",value:s[c]};d=d?{type:"MemberExpression",object:d,property:h,computed:!!(c&&h.type==="Literal"),optional:!1}:h}l=d}else l=Au(a)&&!/^[a-z]/.test(a)?{type:"Identifier",name:a}:{type:"Literal",value:a};if(l.type==="Literal"){const s=l.value;return _l.call(n.components,s)?n.components[s]:s}if(n.evaluater)return n.evaluater.evaluateExpression(l);ei(n)}function ei(n,a){const r=new o3("Cannot handle MDX estrees without `createEvaluater`",{ancestors:n.ancestors,place:a,ruleId:"mdx-estree",source:"hast-util-to-jsx-runtime"});throw r.file=n.filePath||void 0,r.url=jc+"#cannot-handle-mdx-estrees-without-createevaluater",r}function Yg(n){const a={};let r;for(r in n)_l.call(n,r)&&(a[Qg(r)]=n[r]);return a}function Qg(n){let a=n.replace(Og,Xg);return a.slice(0,3)==="ms-"&&(a="-"+a),a}function Xg(n){return"-"+n.toLowerCase()}const Ho={action:["form"],cite:["blockquote","del","ins","q"],data:["object"],formAction:["button","input"],href:["a","area","base","link"],icon:["menuitem"],itemId:null,manifest:["html"],ping:["a","area"],poster:["video"],src:["audio","embed","iframe","img","input","script","source","track","video"]},Gg={};function Zg(n,a){const r=Gg,l=typeof r.includeImageAlt=="boolean"?r.includeImageAlt:!0,s=typeof r.includeHtml=="boolean"?r.includeHtml:!0;return Vc(n,l,s)}function Vc(n,a,r){if(Kg(n)){if("value"in n)return n.type==="html"&&!r?"":n.value;if(a&&"alt"in n&&n.alt)return n.alt;if("children"in n)return Uu(n.children,a,r)}return Array.isArray(n)?Uu(n,a,r):""}function Uu(n,a,r){const l=[];let s=-1;for(;++s<n.length;)l[s]=Vc(n[s],a,r);return l.join("")}function Kg(n){return!!(n&&typeof n=="object")}const zu=document.createElement("i");function Sl(n){const a="&"+n+";";zu.innerHTML=a;const r=zu.textContent;return r.charCodeAt(r.length-1)===59&&n!=="semi"||r===a?!1:r}function ve(n,a,r,l){const s=n.length;let c=0,d;if(a<0?a=-a>s?0:s+a:a=a>s?s:a,r=r>0?r:0,l.length<1e4)d=Array.from(l),d.unshift(a,r),n.splice(...d);else for(r&&n.splice(a,r);c<l.length;)d=l.slice(c,c+1e4),d.unshift(a,0),n.splice(...d),c+=1e4,a+=1e4}function G3(n,a){return n.length>0?(ve(n,n.length,0,a),n):a}const Nu={}.hasOwnProperty;function Jg(n){const a={};let r=-1;for(;++r<n.length;)Wg(a,n[r]);return a}function Wg(n,a){let r;for(r in a){const s=(Nu.call(n,r)?n[r]:void 0)||(n[r]={}),c=a[r];let d;if(c)for(d in c){Nu.call(s,d)||(s[d]=[]);const h=c[d];ey(s[d],Array.isArray(h)?h:h?[h]:[])}}}function ey(n,a){let r=-1;const l=[];for(;++r<a.length;)(a[r].add==="after"?n:l).push(a[r]);ve(n,0,0,l)}function Fc(n,a){const r=Number.parseInt(n,a);return r<9||r===11||r>13&&r<32||r>126&&r<160||r>55295&&r<57344||r>64975&&r<65008||(r&65535)===65535||(r&65535)===65534||r>1114111?"�":String.fromCodePoint(r)}function z0(n){return n.replace(/[\t\n\r ]+/g," ").replace(/^ | $/g,"").toLowerCase().toUpperCase()}const me=pt(/[A-Za-z]/),U3=pt(/[\dA-Za-z]/),ty=pt(/[#-'*+\--9=?A-Z^-~]/);function al(n){return n!==null&&(n<32||n===127)}const rl=pt(/\d/),ny=pt(/[\dA-Fa-f]/),iy=pt(/[!-/:-@[-`{-~]/);function O1(n){return n!==null&&n<-2}function v3(n){return n!==null&&(n<0||n===32)}function W1(n){return n===-2||n===-1||n===32}const ay=pt(new RegExp("\\p{P}|\\p{S}","u")),ry=pt(/\s/);function pt(n){return a;function a(r){return r!==null&&r>-1&&n.test(String.fromCharCode(r))}}function B0(n){const a=[];let r=-1,l=0,s=0;for(;++r<n.length;){const c=n.charCodeAt(r);let d="";if(c===37&&U3(n.charCodeAt(r+1))&&U3(n.charCodeAt(r+2)))s=2;else if(c<128)/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(c))||(d=String.fromCharCode(c));else if(c>55295&&c<57344){const h=n.charCodeAt(r+1);c<56320&&h>56319&&h<57344?(d=String.fromCharCode(c,h),s=1):d="�"}else d=String.fromCharCode(c);d&&(a.push(n.slice(l,r),encodeURIComponent(d)),l=r+s+1,d=""),s&&(r+=s,s=0)}return a.join("")+n.slice(l)}function h2(n,a,r,l){const s=l?l-1:Number.POSITIVE_INFINITY;let c=0;return d;function d(v){return W1(v)?(n.enter(r),h(v)):a(v)}function h(v){return W1(v)&&c++<s?(n.consume(v),h):(n.exit(r),a(v))}}const oy={tokenize:ly};function ly(n){const a=n.attempt(this.parser.constructs.contentInitial,l,s);let r;return a;function l(h){if(h===null){n.consume(h);return}return n.enter("lineEnding"),n.consume(h),n.exit("lineEnding"),h2(n,a,"linePrefix")}function s(h){return n.enter("paragraph"),c(h)}function c(h){const v=n.enter("chunkText",{contentType:"text",previous:r});return r&&(r.next=v),r=v,d(h)}function d(h){if(h===null){n.exit("chunkText"),n.exit("paragraph"),n.consume(h);return}return O1(h)?(n.consume(h),n.exit("chunkText"),c):(n.consume(h),d)}}const sy={tokenize:uy},Iu={tokenize:cy};function uy(n){const a=this,r=[];let l=0,s,c,d;return h;function h(o1){if(l<r.length){const A1=r[l];return a.containerState=A1[1],n.attempt(A1[0].continuation,v,p)(o1)}return p(o1)}function v(o1){if(l++,a.containerState._closeFlow){a.containerState._closeFlow=void 0,s&&n1();const A1=a.events.length;let i1=A1,I;for(;i1--;)if(a.events[i1][0]==="exit"&&a.events[i1][1].type==="chunkFlow"){I=a.events[i1][1].end;break}$(l);let v1=A1;for(;v1<a.events.length;)a.events[v1][1].end={...I},v1++;return ve(a.events,i1+1,0,a.events.slice(A1)),a.events.length=v1,p(o1)}return h(o1)}function p(o1){if(l===r.length){if(!s)return k(o1);if(s.currentConstruct&&s.currentConstruct.concrete)return B(o1);a.interrupt=!!(s.currentConstruct&&!s._gfmTableDynamicInterruptHack)}return a.containerState={},n.check(Iu,_,w)(o1)}function _(o1){return s&&n1(),$(l),k(o1)}function w(o1){return a.parser.lazy[a.now().line]=l!==r.length,d=a.now().offset,B(o1)}function k(o1){return a.containerState={},n.attempt(Iu,S,B)(o1)}function S(o1){return l++,r.push([a.currentConstruct,a.containerState]),k(o1)}function B(o1){if(o1===null){s&&n1(),$(0),n.consume(o1);return}return s=s||a.parser.flow(a.now()),n.enter("chunkFlow",{_tokenizer:s,contentType:"flow",previous:c}),V(o1)}function V(o1){if(o1===null){e1(n.exit("chunkFlow"),!0),$(0),n.consume(o1);return}return O1(o1)?(n.consume(o1),e1(n.exit("chunkFlow")),l=0,a.interrupt=void 0,h):(n.consume(o1),V)}function e1(o1,A1){const i1=a.sliceStream(o1);if(A1&&i1.push(null),o1.previous=c,c&&(c.next=o1),c=o1,s.defineSkip(o1.start),s.write(i1),a.parser.lazy[o1.start.line]){let I=s.events.length;for(;I--;)if(s.events[I][1].start.offset<d&&(!s.events[I][1].end||s.events[I][1].end.offset>d))return;const v1=a.events.length;let _1=v1,t1,f1;for(;_1--;)if(a.events[_1][0]==="exit"&&a.events[_1][1].type==="chunkFlow"){if(t1){f1=a.events[_1][1].end;break}t1=!0}for($(l),I=v1;I<a.events.length;)a.events[I][1].end={...f1},I++;ve(a.events,_1+1,0,a.events.slice(v1)),a.events.length=I}}function $(o1){let A1=r.length;for(;A1-- >o1;){const i1=r[A1];a.containerState=i1[1],i1[0].exit.call(a,n)}r.length=o1}function n1(){s.write([null]),c=void 0,s=void 0,a.containerState._closeFlow=void 0}}function cy(n,a,r){return h2(n,n.attempt(this.parser.constructs.document,a,r),"linePrefix",this.parser.constructs.disable.null.includes("codeIndented")?void 0:4)}function ju(n){if(n===null||v3(n)||ry(n))return 1;if(ay(n))return 2}function Al(n,a,r){const l=[];let s=-1;for(;++s<n.length;){const c=n[s].resolveAll;c&&!l.includes(c)&&(a=c(a,r),l.push(c))}return a}const ol={name:"attention",resolveAll:fy,tokenize:dy};function fy(n,a){let r=-1,l,s,c,d,h,v,p,_;for(;++r<n.length;)if(n[r][0]==="enter"&&n[r][1].type==="attentionSequence"&&n[r][1]._close){for(l=r;l--;)if(n[l][0]==="exit"&&n[l][1].type==="attentionSequence"&&n[l][1]._open&&a.sliceSerialize(n[l][1]).charCodeAt(0)===a.sliceSerialize(n[r][1]).charCodeAt(0)){if((n[l][1]._close||n[r][1]._open)&&(n[r][1].end.offset-n[r][1].start.offset)%3&&!((n[l][1].end.offset-n[l][1].start.offset+n[r][1].end.offset-n[r][1].start.offset)%3))continue;v=n[l][1].end.offset-n[l][1].start.offset>1&&n[r][1].end.offset-n[r][1].start.offset>1?2:1;const w={...n[l][1].end},k={...n[r][1].start};Bu(w,-v),Bu(k,v),d={type:v>1?"strongSequence":"emphasisSequence",start:w,end:{...n[l][1].end}},h={type:v>1?"strongSequence":"emphasisSequence",start:{...n[r][1].start},end:k},c={type:v>1?"strongText":"emphasisText",start:{...n[l][1].end},end:{...n[r][1].start}},s={type:v>1?"strong":"emphasis",start:{...d.start},end:{...h.end}},n[l][1].end={...d.start},n[r][1].start={...h.end},p=[],n[l][1].end.offset-n[l][1].start.offset&&(p=G3(p,[["enter",n[l][1],a],["exit",n[l][1],a]])),p=G3(p,[["enter",s,a],["enter",d,a],["exit",d,a],["enter",c,a]]),p=G3(p,Al(a.parser.constructs.insideSpan.null,n.slice(l+1,r),a)),p=G3(p,[["exit",c,a],["enter",h,a],["exit",h,a],["exit",s,a]]),n[r][1].end.offset-n[r][1].start.offset?(_=2,p=G3(p,[["enter",n[r][1],a],["exit",n[r][1],a]])):_=0,ve(n,l-1,r-l+3,p),r=l+p.length-_-2;break}}for(r=-1;++r<n.length;)n[r][1].type==="attentionSequence"&&(n[r][1].type="data");return n}function dy(n,a){const r=this.parser.constructs.attentionMarkers.null,l=this.previous,s=ju(l);let c;return d;function d(v){return c=v,n.enter("attentionSequence"),h(v)}function h(v){if(v===c)return n.consume(v),h;const p=n.exit("attentionSequence"),_=ju(v),w=!_||_===2&&s||r.includes(v),k=!s||s===2&&_||r.includes(l);return p._open=!!(c===42?w:w&&(s||!k)),p._close=!!(c===42?k:k&&(_||!w)),a(v)}}function Bu(n,a){n.column+=a,n.offset+=a,n._bufferIndex+=a}const py={name:"autolink",tokenize:hy};function hy(n,a,r){let l=0;return s;function s(S){return n.enter("autolink"),n.enter("autolinkMarker"),n.consume(S),n.exit("autolinkMarker"),n.enter("autolinkProtocol"),c}function c(S){return me(S)?(n.consume(S),d):S===64?r(S):p(S)}function d(S){return S===43||S===45||S===46||U3(S)?(l=1,h(S)):p(S)}function h(S){return S===58?(n.consume(S),l=0,v):(S===43||S===45||S===46||U3(S))&&l++<32?(n.consume(S),h):(l=0,p(S))}function v(S){return S===62?(n.exit("autolinkProtocol"),n.enter("autolinkMarker"),n.consume(S),n.exit("autolinkMarker"),n.exit("autolink"),a):S===null||S===32||S===60||al(S)?r(S):(n.consume(S),v)}function p(S){return S===64?(n.consume(S),_):ty(S)?(n.consume(S),p):r(S)}function _(S){return U3(S)?w(S):r(S)}function w(S){return S===46?(n.consume(S),l=0,_):S===62?(n.exit("autolinkProtocol").type="autolinkEmail",n.enter("autolinkMarker"),n.consume(S),n.exit("autolinkMarker"),n.exit("autolink"),a):k(S)}function k(S){if((S===45||U3(S))&&l++<63){const B=S===45?k:w;return n.consume(S),B}return r(S)}}const ka={partial:!0,tokenize:my};function my(n,a,r){return l;function l(c){return W1(c)?h2(n,s,"linePrefix")(c):s(c)}function s(c){return c===null||O1(c)?a(c):r(c)}}const $c={continuation:{tokenize:yy},exit:vy,name:"blockQuote",tokenize:gy};function gy(n,a,r){const l=this;return s;function s(d){if(d===62){const h=l.containerState;return h.open||(n.enter("blockQuote",{_container:!0}),h.open=!0),n.enter("blockQuotePrefix"),n.enter("blockQuoteMarker"),n.consume(d),n.exit("blockQuoteMarker"),c}return r(d)}function c(d){return W1(d)?(n.enter("blockQuotePrefixWhitespace"),n.consume(d),n.exit("blockQuotePrefixWhitespace"),n.exit("blockQuotePrefix"),a):(n.exit("blockQuotePrefix"),a(d))}}function yy(n,a,r){const l=this;return s;function s(d){return W1(d)?h2(n,c,"linePrefix",l.parser.constructs.disable.null.includes("codeIndented")?void 0:4)(d):c(d)}function c(d){return n.attempt($c,a,r)(d)}}function vy(n){n.exit("blockQuote")}const Pc={name:"characterEscape",tokenize:by};function by(n,a,r){return l;function l(c){return n.enter("characterEscape"),n.enter("escapeMarker"),n.consume(c),n.exit("escapeMarker"),s}function s(c){return iy(c)?(n.enter("characterEscapeValue"),n.consume(c),n.exit("characterEscapeValue"),n.exit("characterEscape"),a):r(c)}}const Yc={name:"characterReference",tokenize:_y};function _y(n,a,r){const l=this;let s=0,c,d;return h;function h(w){return n.enter("characterReference"),n.enter("characterReferenceMarker"),n.consume(w),n.exit("characterReferenceMarker"),v}function v(w){return w===35?(n.enter("characterReferenceMarkerNumeric"),n.consume(w),n.exit("characterReferenceMarkerNumeric"),p):(n.enter("characterReferenceValue"),c=31,d=U3,_(w))}function p(w){return w===88||w===120?(n.enter("characterReferenceMarkerHexadecimal"),n.consume(w),n.exit("characterReferenceMarkerHexadecimal"),n.enter("characterReferenceValue"),c=6,d=ny,_):(n.enter("characterReferenceValue"),c=7,d=rl,_(w))}function _(w){if(w===59&&s){const k=n.exit("characterReferenceValue");return d===U3&&!Sl(l.sliceSerialize(k))?r(w):(n.enter("characterReferenceMarker"),n.consume(w),n.exit("characterReferenceMarker"),n.exit("characterReference"),a)}return d(w)&&s++<c?(n.consume(w),_):r(w)}}const qu={partial:!0,tokenize:xy},Hu={concrete:!0,name:"codeFenced",tokenize:wy};function wy(n,a,r){const l=this,s={partial:!0,tokenize:i1};let c=0,d=0,h;return v;function v(I){return p(I)}function p(I){const v1=l.events[l.events.length-1];return c=v1&&v1[1].type==="linePrefix"?v1[2].sliceSerialize(v1[1],!0).length:0,h=I,n.enter("codeFenced"),n.enter("codeFencedFence"),n.enter("codeFencedFenceSequence"),_(I)}function _(I){return I===h?(d++,n.consume(I),_):d<3?r(I):(n.exit("codeFencedFenceSequence"),W1(I)?h2(n,w,"whitespace")(I):w(I))}function w(I){return I===null||O1(I)?(n.exit("codeFencedFence"),l.interrupt?a(I):n.check(qu,V,A1)(I)):(n.enter("codeFencedFenceInfo"),n.enter("chunkString",{contentType:"string"}),k(I))}function k(I){return I===null||O1(I)?(n.exit("chunkString"),n.exit("codeFencedFenceInfo"),w(I)):W1(I)?(n.exit("chunkString"),n.exit("codeFencedFenceInfo"),h2(n,S,"whitespace")(I)):I===96&&I===h?r(I):(n.consume(I),k)}function S(I){return I===null||O1(I)?w(I):(n.enter("codeFencedFenceMeta"),n.enter("chunkString",{contentType:"string"}),B(I))}function B(I){return I===null||O1(I)?(n.exit("chunkString"),n.exit("codeFencedFenceMeta"),w(I)):I===96&&I===h?r(I):(n.consume(I),B)}function V(I){return n.attempt(s,A1,e1)(I)}function e1(I){return n.enter("lineEnding"),n.consume(I),n.exit("lineEnding"),$}function $(I){return c>0&&W1(I)?h2(n,n1,"linePrefix",c+1)(I):n1(I)}function n1(I){return I===null||O1(I)?n.check(qu,V,A1)(I):(n.enter("codeFlowValue"),o1(I))}function o1(I){return I===null||O1(I)?(n.exit("codeFlowValue"),n1(I)):(n.consume(I),o1)}function A1(I){return n.exit("codeFenced"),a(I)}function i1(I,v1,_1){let t1=0;return f1;function f1(s1){return I.enter("lineEnding"),I.consume(s1),I.exit("lineEnding"),u1}function u1(s1){return I.enter("codeFencedFence"),W1(s1)?h2(I,c1,"linePrefix",l.parser.constructs.disable.null.includes("codeIndented")?void 0:4)(s1):c1(s1)}function c1(s1){return s1===h?(I.enter("codeFencedFenceSequence"),Q(s1)):_1(s1)}function Q(s1){return s1===h?(t1++,I.consume(s1),Q):t1>=d?(I.exit("codeFencedFenceSequence"),W1(s1)?h2(I,l1,"whitespace")(s1):l1(s1)):_1(s1)}function l1(s1){return s1===null||O1(s1)?(I.exit("codeFencedFence"),v1(s1)):_1(s1)}}}function xy(n,a,r){const l=this;return s;function s(d){return d===null?r(d):(n.enter("lineEnding"),n.consume(d),n.exit("lineEnding"),c)}function c(d){return l.parser.lazy[l.now().line]?r(d):a(d)}}const Vo={name:"codeIndented",tokenize:Ay},Sy={partial:!0,tokenize:ky};function Ay(n,a,r){const l=this;return s;function s(p){return n.enter("codeIndented"),h2(n,c,"linePrefix",5)(p)}function c(p){const _=l.events[l.events.length-1];return _&&_[1].type==="linePrefix"&&_[2].sliceSerialize(_[1],!0).length>=4?d(p):r(p)}function d(p){return p===null?v(p):O1(p)?n.attempt(Sy,d,v)(p):(n.enter("codeFlowValue"),h(p))}function h(p){return p===null||O1(p)?(n.exit("codeFlowValue"),d(p)):(n.consume(p),h)}function v(p){return n.exit("codeIndented"),a(p)}}function ky(n,a,r){const l=this;return s;function s(d){return l.parser.lazy[l.now().line]?r(d):O1(d)?(n.enter("lineEnding"),n.consume(d),n.exit("lineEnding"),s):h2(n,c,"linePrefix",5)(d)}function c(d){const h=l.events[l.events.length-1];return h&&h[1].type==="linePrefix"&&h[2].sliceSerialize(h[1],!0).length>=4?a(d):O1(d)?s(d):r(d)}}const Ey={name:"codeText",previous:Cy,resolve:Ty,tokenize:My};function Ty(n){let a=n.length-4,r=3,l,s;if((n[r][1].type==="lineEnding"||n[r][1].type==="space")&&(n[a][1].type==="lineEnding"||n[a][1].type==="space")){for(l=r;++l<a;)if(n[l][1].type==="codeTextData"){n[r][1].type="codeTextPadding",n[a][1].type="codeTextPadding",r+=2,a-=2;break}}for(l=r-1,a++;++l<=a;)s===void 0?l!==a&&n[l][1].type!=="lineEnding"&&(s=l):(l===a||n[l][1].type==="lineEnding")&&(n[s][1].type="codeTextData",l!==s+2&&(n[s][1].end=n[l-1][1].end,n.splice(s+2,l-s-2),a-=l-s-2,l=s+2),s=void 0);return n}function Cy(n){return n!==96||this.events[this.events.length-1][1].type==="characterEscape"}function My(n,a,r){let l=0,s,c;return d;function d(w){return n.enter("codeText"),n.enter("codeTextSequence"),h(w)}function h(w){return w===96?(n.consume(w),l++,h):(n.exit("codeTextSequence"),v(w))}function v(w){return w===null?r(w):w===32?(n.enter("space"),n.consume(w),n.exit("space"),v):w===96?(c=n.enter("codeTextSequence"),s=0,_(w)):O1(w)?(n.enter("lineEnding"),n.consume(w),n.exit("lineEnding"),v):(n.enter("codeTextData"),p(w))}function p(w){return w===null||w===32||w===96||O1(w)?(n.exit("codeTextData"),v(w)):(n.consume(w),p)}function _(w){return w===96?(n.consume(w),s++,_):s===l?(n.exit("codeTextSequence"),n.exit("codeText"),a(w)):(c.type="codeTextData",p(w))}}class Oy{constructor(a){this.left=a?[...a]:[],this.right=[]}get(a){if(a<0||a>=this.left.length+this.right.length)throw new RangeError("Cannot access index `"+a+"` in a splice buffer of size `"+(this.left.length+this.right.length)+"`");return a<this.left.length?this.left[a]:this.right[this.right.length-a+this.left.length-1]}get length(){return this.left.length+this.right.length}shift(){return this.setCursor(0),this.right.pop()}slice(a,r){const l=r??Number.POSITIVE_INFINITY;return l<this.left.length?this.left.slice(a,l):a>this.left.length?this.right.slice(this.right.length-l+this.left.length,this.right.length-a+this.left.length).reverse():this.left.slice(a).concat(this.right.slice(this.right.length-l+this.left.length).reverse())}splice(a,r,l){const s=r||0;this.setCursor(Math.trunc(a));const c=this.right.splice(this.right.length-s,Number.POSITIVE_INFINITY);return l&&Xn(this.left,l),c.reverse()}pop(){return this.setCursor(Number.POSITIVE_INFINITY),this.left.pop()}push(a){this.setCursor(Number.POSITIVE_INFINITY),this.left.push(a)}pushMany(a){this.setCursor(Number.POSITIVE_INFINITY),Xn(this.left,a)}unshift(a){this.setCursor(0),this.right.push(a)}unshiftMany(a){this.setCursor(0),Xn(this.right,a.reverse())}setCursor(a){if(!(a===this.left.length||a>this.left.length&&this.right.length===0||a<0&&this.left.length===0))if(a<this.left.length){const r=this.left.splice(a,Number.POSITIVE_INFINITY);Xn(this.right,r.reverse())}else{const r=this.right.splice(this.left.length+this.right.length-a,Number.POSITIVE_INFINITY);Xn(this.left,r.reverse())}}}function Xn(n,a){let r=0;if(a.length<1e4)n.push(...a);else for(;r<a.length;)n.push(...a.slice(r,r+1e4)),r+=1e4}function Qc(n){const a={};let r=-1,l,s,c,d,h,v,p;const _=new Oy(n);for(;++r<_.length;){for(;r in a;)r=a[r];if(l=_.get(r),r&&l[1].type==="chunkFlow"&&_.get(r-1)[1].type==="listItemPrefix"&&(v=l[1]._tokenizer.events,c=0,c<v.length&&v[c][1].type==="lineEndingBlank"&&(c+=2),c<v.length&&v[c][1].type==="content"))for(;++c<v.length&&v[c][1].type!=="content";)v[c][1].type==="chunkText"&&(v[c][1]._isInFirstContentOfListItem=!0,c++);if(l[0]==="enter")l[1].contentType&&(Object.assign(a,Dy(_,r)),r=a[r],p=!0);else if(l[1]._container){for(c=r,s=void 0;c--;)if(d=_.get(c),d[1].type==="lineEnding"||d[1].type==="lineEndingBlank")d[0]==="enter"&&(s&&(_.get(s)[1].type="lineEndingBlank"),d[1].type="lineEnding",s=c);else if(!(d[1].type==="linePrefix"||d[1].type==="listItemIndent"))break;s&&(l[1].end={..._.get(s)[1].start},h=_.slice(s,r),h.unshift(l),_.splice(s,r-s+1,h))}}return ve(n,0,Number.POSITIVE_INFINITY,_.slice(0)),!p}function Dy(n,a){const r=n.get(a)[1],l=n.get(a)[2];let s=a-1;const c=[];let d=r._tokenizer;d||(d=l.parser[r.contentType](r.start),r._contentTypeTextTrailing&&(d._contentTypeTextTrailing=!0));const h=d.events,v=[],p={};let _,w,k=-1,S=r,B=0,V=0;const e1=[V];for(;S;){for(;n.get(++s)[1]!==S;);c.push(s),S._tokenizer||(_=l.sliceStream(S),S.next||_.push(null),w&&d.defineSkip(S.start),S._isInFirstContentOfListItem&&(d._gfmTasklistFirstContentOfListItem=!0),d.write(_),S._isInFirstContentOfListItem&&(d._gfmTasklistFirstContentOfListItem=void 0)),w=S,S=S.next}for(S=r;++k<h.length;)h[k][0]==="exit"&&h[k-1][0]==="enter"&&h[k][1].type===h[k-1][1].type&&h[k][1].start.line!==h[k][1].end.line&&(V=k+1,e1.push(V),S._tokenizer=void 0,S.previous=void 0,S=S.next);for(d.events=[],S?(S._tokenizer=void 0,S.previous=void 0):e1.pop(),k=e1.length;k--;){const $=h.slice(e1[k],e1[k+1]),n1=c.pop();v.push([n1,n1+$.length-1]),n.splice(n1,2,$)}for(v.reverse(),k=-1;++k<v.length;)p[B+v[k][0]]=B+v[k][1],B+=v[k][1]-v[k][0]-1;return p}const Ly={resolve:Uy,tokenize:zy},Ry={partial:!0,tokenize:Ny};function Uy(n){return Qc(n),n}function zy(n,a){let r;return l;function l(h){return n.enter("content"),r=n.enter("chunkContent",{contentType:"content"}),s(h)}function s(h){return h===null?c(h):O1(h)?n.check(Ry,d,c)(h):(n.consume(h),s)}function c(h){return n.exit("chunkContent"),n.exit("content"),a(h)}function d(h){return n.consume(h),n.exit("chunkContent"),r.next=n.enter("chunkContent",{contentType:"content",previous:r}),r=r.next,s}}function Ny(n,a,r){const l=this;return s;function s(d){return n.exit("chunkContent"),n.enter("lineEnding"),n.consume(d),n.exit("lineEnding"),h2(n,c,"linePrefix")}function c(d){if(d===null||O1(d))return r(d);const h=l.events[l.events.length-1];return!l.parser.constructs.disable.null.includes("codeIndented")&&h&&h[1].type==="linePrefix"&&h[2].sliceSerialize(h[1],!0).length>=4?a(d):n.interrupt(l.parser.constructs.flow,r,a)(d)}}function Xc(n,a,r,l,s,c,d,h,v){const p=v||Number.POSITIVE_INFINITY;let _=0;return w;function w($){return $===60?(n.enter(l),n.enter(s),n.enter(c),n.consume($),n.exit(c),k):$===null||$===32||$===41||al($)?r($):(n.enter(l),n.enter(d),n.enter(h),n.enter("chunkString",{contentType:"string"}),V($))}function k($){return $===62?(n.enter(c),n.consume($),n.exit(c),n.exit(s),n.exit(l),a):(n.enter(h),n.enter("chunkString",{contentType:"string"}),S($))}function S($){return $===62?(n.exit("chunkString"),n.exit(h),k($)):$===null||$===60||O1($)?r($):(n.consume($),$===92?B:S)}function B($){return $===60||$===62||$===92?(n.consume($),S):S($)}function V($){return!_&&($===null||$===41||v3($))?(n.exit("chunkString"),n.exit(h),n.exit(d),n.exit(l),a($)):_<p&&$===40?(n.consume($),_++,V):$===41?(n.consume($),_--,V):$===null||$===32||$===40||al($)?r($):(n.consume($),$===92?e1:V)}function e1($){return $===40||$===41||$===92?(n.consume($),V):V($)}}function Gc(n,a,r,l,s,c){const d=this;let h=0,v;return p;function p(S){return n.enter(l),n.enter(s),n.consume(S),n.exit(s),n.enter(c),_}function _(S){return h>999||S===null||S===91||S===93&&!v||S===94&&!h&&"_hiddenFootnoteSupport"in d.parser.constructs?r(S):S===93?(n.exit(c),n.enter(s),n.consume(S),n.exit(s),n.exit(l),a):O1(S)?(n.enter("lineEnding"),n.consume(S),n.exit("lineEnding"),_):(n.enter("chunkString",{contentType:"string"}),w(S))}function w(S){return S===null||S===91||S===93||O1(S)||h++>999?(n.exit("chunkString"),_(S)):(n.consume(S),v||(v=!W1(S)),S===92?k:w)}function k(S){return S===91||S===92||S===93?(n.consume(S),h++,w):w(S)}}function Zc(n,a,r,l,s,c){let d;return h;function h(k){return k===34||k===39||k===40?(n.enter(l),n.enter(s),n.consume(k),n.exit(s),d=k===40?41:k,v):r(k)}function v(k){return k===d?(n.enter(s),n.consume(k),n.exit(s),n.exit(l),a):(n.enter(c),p(k))}function p(k){return k===d?(n.exit(c),v(d)):k===null?r(k):O1(k)?(n.enter("lineEnding"),n.consume(k),n.exit("lineEnding"),h2(n,p,"linePrefix")):(n.enter("chunkString",{contentType:"string"}),_(k))}function _(k){return k===d||k===null||O1(k)?(n.exit("chunkString"),p(k)):(n.consume(k),k===92?w:_)}function w(k){return k===d||k===92?(n.consume(k),_):_(k)}}function Jn(n,a){let r;return l;function l(s){return O1(s)?(n.enter("lineEnding"),n.consume(s),n.exit("lineEnding"),r=!0,l):W1(s)?h2(n,l,r?"linePrefix":"lineSuffix")(s):a(s)}}const Iy={name:"definition",tokenize:By},jy={partial:!0,tokenize:qy};function By(n,a,r){const l=this;let s;return c;function c(S){return n.enter("definition"),d(S)}function d(S){return Gc.call(l,n,h,r,"definitionLabel","definitionLabelMarker","definitionLabelString")(S)}function h(S){return s=z0(l.sliceSerialize(l.events[l.events.length-1][1]).slice(1,-1)),S===58?(n.enter("definitionMarker"),n.consume(S),n.exit("definitionMarker"),v):r(S)}function v(S){return v3(S)?Jn(n,p)(S):p(S)}function p(S){return Xc(n,_,r,"definitionDestination","definitionDestinationLiteral","definitionDestinationLiteralMarker","definitionDestinationRaw","definitionDestinationString")(S)}function _(S){return n.attempt(jy,w,w)(S)}function w(S){return W1(S)?h2(n,k,"whitespace")(S):k(S)}function k(S){return S===null||O1(S)?(n.exit("definition"),l.parser.defined.push(s),a(S)):r(S)}}function qy(n,a,r){return l;function l(h){return v3(h)?Jn(n,s)(h):r(h)}function s(h){return Zc(n,c,r,"definitionTitle","definitionTitleMarker","definitionTitleString")(h)}function c(h){return W1(h)?h2(n,d,"whitespace")(h):d(h)}function d(h){return h===null||O1(h)?a(h):r(h)}}const Hy={name:"hardBreakEscape",tokenize:Vy};function Vy(n,a,r){return l;function l(c){return n.enter("hardBreakEscape"),n.consume(c),s}function s(c){return O1(c)?(n.exit("hardBreakEscape"),a(c)):r(c)}}const Fy={name:"headingAtx",resolve:$y,tokenize:Py};function $y(n,a){let r=n.length-2,l=3,s,c;return n[l][1].type==="whitespace"&&(l+=2),r-2>l&&n[r][1].type==="whitespace"&&(r-=2),n[r][1].type==="atxHeadingSequence"&&(l===r-1||r-4>l&&n[r-2][1].type==="whitespace")&&(r-=l+1===r?2:4),r>l&&(s={type:"atxHeadingText",start:n[l][1].start,end:n[r][1].end},c={type:"chunkText",start:n[l][1].start,end:n[r][1].end,contentType:"text"},ve(n,l,r-l+1,[["enter",s,a],["enter",c,a],["exit",c,a],["exit",s,a]])),n}function Py(n,a,r){let l=0;return s;function s(_){return n.enter("atxHeading"),c(_)}function c(_){return n.enter("atxHeadingSequence"),d(_)}function d(_){return _===35&&l++<6?(n.consume(_),d):_===null||v3(_)?(n.exit("atxHeadingSequence"),h(_)):r(_)}function h(_){return _===35?(n.enter("atxHeadingSequence"),v(_)):_===null||O1(_)?(n.exit("atxHeading"),a(_)):W1(_)?h2(n,h,"whitespace")(_):(n.enter("atxHeadingText"),p(_))}function v(_){return _===35?(n.consume(_),v):(n.exit("atxHeadingSequence"),h(_))}function p(_){return _===null||_===35||v3(_)?(n.exit("atxHeadingText"),h(_)):(n.consume(_),p)}}const Yy=["address","article","aside","base","basefont","blockquote","body","caption","center","col","colgroup","dd","details","dialog","dir","div","dl","dt","fieldset","figcaption","figure","footer","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","header","hr","html","iframe","legend","li","link","main","menu","menuitem","nav","noframes","ol","optgroup","option","p","param","search","section","summary","table","tbody","td","tfoot","th","thead","title","tr","track","ul"],Vu=["pre","script","style","textarea"],Qy={concrete:!0,name:"htmlFlow",resolveTo:Zy,tokenize:Ky},Xy={partial:!0,tokenize:Wy},Gy={partial:!0,tokenize:Jy};function Zy(n){let a=n.length;for(;a--&&!(n[a][0]==="enter"&&n[a][1].type==="htmlFlow"););return a>1&&n[a-2][1].type==="linePrefix"&&(n[a][1].start=n[a-2][1].start,n[a+1][1].start=n[a-2][1].start,n.splice(a-2,2)),n}function Ky(n,a,r){const l=this;let s,c,d,h,v;return p;function p(T){return _(T)}function _(T){return n.enter("htmlFlow"),n.enter("htmlFlowData"),n.consume(T),w}function w(T){return T===33?(n.consume(T),k):T===47?(n.consume(T),c=!0,V):T===63?(n.consume(T),s=3,l.interrupt?a:b):me(T)?(n.consume(T),d=String.fromCharCode(T),e1):r(T)}function k(T){return T===45?(n.consume(T),s=2,S):T===91?(n.consume(T),s=5,h=0,B):me(T)?(n.consume(T),s=4,l.interrupt?a:b):r(T)}function S(T){return T===45?(n.consume(T),l.interrupt?a:b):r(T)}function B(T){const a1="CDATA[";return T===a1.charCodeAt(h++)?(n.consume(T),h===a1.length?l.interrupt?a:c1:B):r(T)}function V(T){return me(T)?(n.consume(T),d=String.fromCharCode(T),e1):r(T)}function e1(T){if(T===null||T===47||T===62||v3(T)){const a1=T===47,E1=d.toLowerCase();return!a1&&!c&&Vu.includes(E1)?(s=1,l.interrupt?a(T):c1(T)):Yy.includes(d.toLowerCase())?(s=6,a1?(n.consume(T),$):l.interrupt?a(T):c1(T)):(s=7,l.interrupt&&!l.parser.lazy[l.now().line]?r(T):c?n1(T):o1(T))}return T===45||U3(T)?(n.consume(T),d+=String.fromCharCode(T),e1):r(T)}function $(T){return T===62?(n.consume(T),l.interrupt?a:c1):r(T)}function n1(T){return W1(T)?(n.consume(T),n1):f1(T)}function o1(T){return T===47?(n.consume(T),f1):T===58||T===95||me(T)?(n.consume(T),A1):W1(T)?(n.consume(T),o1):f1(T)}function A1(T){return T===45||T===46||T===58||T===95||U3(T)?(n.consume(T),A1):i1(T)}function i1(T){return T===61?(n.consume(T),I):W1(T)?(n.consume(T),i1):o1(T)}function I(T){return T===null||T===60||T===61||T===62||T===96?r(T):T===34||T===39?(n.consume(T),v=T,v1):W1(T)?(n.consume(T),I):_1(T)}function v1(T){return T===v?(n.consume(T),v=null,t1):T===null||O1(T)?r(T):(n.consume(T),v1)}function _1(T){return T===null||T===34||T===39||T===47||T===60||T===61||T===62||T===96||v3(T)?i1(T):(n.consume(T),_1)}function t1(T){return T===47||T===62||W1(T)?o1(T):r(T)}function f1(T){return T===62?(n.consume(T),u1):r(T)}function u1(T){return T===null||O1(T)?c1(T):W1(T)?(n.consume(T),u1):r(T)}function c1(T){return T===45&&s===2?(n.consume(T),M):T===60&&s===1?(n.consume(T),q):T===62&&s===4?(n.consume(T),Z):T===63&&s===3?(n.consume(T),b):T===93&&s===5?(n.consume(T),x1):O1(T)&&(s===6||s===7)?(n.exit("htmlFlowData"),n.check(Xy,h1,Q)(T)):T===null||O1(T)?(n.exit("htmlFlowData"),Q(T)):(n.consume(T),c1)}function Q(T){return n.check(Gy,l1,h1)(T)}function l1(T){return n.enter("lineEnding"),n.consume(T),n.exit("lineEnding"),s1}function s1(T){return T===null||O1(T)?Q(T):(n.enter("htmlFlowData"),c1(T))}function M(T){return T===45?(n.consume(T),b):c1(T)}function q(T){return T===47?(n.consume(T),d="",P):c1(T)}function P(T){if(T===62){const a1=d.toLowerCase();return Vu.includes(a1)?(n.consume(T),Z):c1(T)}return me(T)&&d.length<8?(n.consume(T),d+=String.fromCharCode(T),P):c1(T)}function x1(T){return T===93?(n.consume(T),b):c1(T)}function b(T){return T===62?(n.consume(T),Z):T===45&&s===2?(n.consume(T),b):c1(T)}function Z(T){return T===null||O1(T)?(n.exit("htmlFlowData"),h1(T)):(n.consume(T),Z)}function h1(T){return n.exit("htmlFlow"),a(T)}}function Jy(n,a,r){const l=this;return s;function s(d){return O1(d)?(n.enter("lineEnding"),n.consume(d),n.exit("lineEnding"),c):r(d)}function c(d){return l.parser.lazy[l.now().line]?r(d):a(d)}}function Wy(n,a,r){return l;function l(s){return n.enter("lineEnding"),n.consume(s),n.exit("lineEnding"),n.attempt(ka,a,r)}}const ev={name:"htmlText",tokenize:tv};function tv(n,a,r){const l=this;let s,c,d;return h;function h(b){return n.enter("htmlText"),n.enter("htmlTextData"),n.consume(b),v}function v(b){return b===33?(n.consume(b),p):b===47?(n.consume(b),i1):b===63?(n.consume(b),o1):me(b)?(n.consume(b),_1):r(b)}function p(b){return b===45?(n.consume(b),_):b===91?(n.consume(b),c=0,B):me(b)?(n.consume(b),n1):r(b)}function _(b){return b===45?(n.consume(b),S):r(b)}function w(b){return b===null?r(b):b===45?(n.consume(b),k):O1(b)?(d=w,q(b)):(n.consume(b),w)}function k(b){return b===45?(n.consume(b),S):w(b)}function S(b){return b===62?M(b):b===45?k(b):w(b)}function B(b){const Z="CDATA[";return b===Z.charCodeAt(c++)?(n.consume(b),c===Z.length?V:B):r(b)}function V(b){return b===null?r(b):b===93?(n.consume(b),e1):O1(b)?(d=V,q(b)):(n.consume(b),V)}function e1(b){return b===93?(n.consume(b),$):V(b)}function $(b){return b===62?M(b):b===93?(n.consume(b),$):V(b)}function n1(b){return b===null||b===62?M(b):O1(b)?(d=n1,q(b)):(n.consume(b),n1)}function o1(b){return b===null?r(b):b===63?(n.consume(b),A1):O1(b)?(d=o1,q(b)):(n.consume(b),o1)}function A1(b){return b===62?M(b):o1(b)}function i1(b){return me(b)?(n.consume(b),I):r(b)}function I(b){return b===45||U3(b)?(n.consume(b),I):v1(b)}function v1(b){return O1(b)?(d=v1,q(b)):W1(b)?(n.consume(b),v1):M(b)}function _1(b){return b===45||U3(b)?(n.consume(b),_1):b===47||b===62||v3(b)?t1(b):r(b)}function t1(b){return b===47?(n.consume(b),M):b===58||b===95||me(b)?(n.consume(b),f1):O1(b)?(d=t1,q(b)):W1(b)?(n.consume(b),t1):M(b)}function f1(b){return b===45||b===46||b===58||b===95||U3(b)?(n.consume(b),f1):u1(b)}function u1(b){return b===61?(n.consume(b),c1):O1(b)?(d=u1,q(b)):W1(b)?(n.consume(b),u1):t1(b)}function c1(b){return b===null||b===60||b===61||b===62||b===96?r(b):b===34||b===39?(n.consume(b),s=b,Q):O1(b)?(d=c1,q(b)):W1(b)?(n.consume(b),c1):(n.consume(b),l1)}function Q(b){return b===s?(n.consume(b),s=void 0,s1):b===null?r(b):O1(b)?(d=Q,q(b)):(n.consume(b),Q)}function l1(b){return b===null||b===34||b===39||b===60||b===61||b===96?r(b):b===47||b===62||v3(b)?t1(b):(n.consume(b),l1)}function s1(b){return b===47||b===62||v3(b)?t1(b):r(b)}function M(b){return b===62?(n.consume(b),n.exit("htmlTextData"),n.exit("htmlText"),a):r(b)}function q(b){return n.exit("htmlTextData"),n.enter("lineEnding"),n.consume(b),n.exit("lineEnding"),P}function P(b){return W1(b)?h2(n,x1,"linePrefix",l.parser.constructs.disable.null.includes("codeIndented")?void 0:4)(b):x1(b)}function x1(b){return n.enter("htmlTextData"),d(b)}}const kl={name:"labelEnd",resolveAll:rv,resolveTo:ov,tokenize:lv},nv={tokenize:sv},iv={tokenize:uv},av={tokenize:cv};function rv(n){let a=-1;const r=[];for(;++a<n.length;){const l=n[a][1];if(r.push(n[a]),l.type==="labelImage"||l.type==="labelLink"||l.type==="labelEnd"){const s=l.type==="labelImage"?4:2;l.type="data",a+=s}}return n.length!==r.length&&ve(n,0,n.length,r),n}function ov(n,a){let r=n.length,l=0,s,c,d,h;for(;r--;)if(s=n[r][1],c){if(s.type==="link"||s.type==="labelLink"&&s._inactive)break;n[r][0]==="enter"&&s.type==="labelLink"&&(s._inactive=!0)}else if(d){if(n[r][0]==="enter"&&(s.type==="labelImage"||s.type==="labelLink")&&!s._balanced&&(c=r,s.type!=="labelLink")){l=2;break}}else s.type==="labelEnd"&&(d=r);const v={type:n[c][1].type==="labelLink"?"link":"image",start:{...n[c][1].start},end:{...n[n.length-1][1].end}},p={type:"label",start:{...n[c][1].start},end:{...n[d][1].end}},_={type:"labelText",start:{...n[c+l+2][1].end},end:{...n[d-2][1].start}};return h=[["enter",v,a],["enter",p,a]],h=G3(h,n.slice(c+1,c+l+3)),h=G3(h,[["enter",_,a]]),h=G3(h,Al(a.parser.constructs.insideSpan.null,n.slice(c+l+4,d-3),a)),h=G3(h,[["exit",_,a],n[d-2],n[d-1],["exit",p,a]]),h=G3(h,n.slice(d+1)),h=G3(h,[["exit",v,a]]),ve(n,c,n.length,h),n}function lv(n,a,r){const l=this;let s=l.events.length,c,d;for(;s--;)if((l.events[s][1].type==="labelImage"||l.events[s][1].type==="labelLink")&&!l.events[s][1]._balanced){c=l.events[s][1];break}return h;function h(k){return c?c._inactive?w(k):(d=l.parser.defined.includes(z0(l.sliceSerialize({start:c.end,end:l.now()}))),n.enter("labelEnd"),n.enter("labelMarker"),n.consume(k),n.exit("labelMarker"),n.exit("labelEnd"),v):r(k)}function v(k){return k===40?n.attempt(nv,_,d?_:w)(k):k===91?n.attempt(iv,_,d?p:w)(k):d?_(k):w(k)}function p(k){return n.attempt(av,_,w)(k)}function _(k){return a(k)}function w(k){return c._balanced=!0,r(k)}}function sv(n,a,r){return l;function l(w){return n.enter("resource"),n.enter("resourceMarker"),n.consume(w),n.exit("resourceMarker"),s}function s(w){return v3(w)?Jn(n,c)(w):c(w)}function c(w){return w===41?_(w):Xc(n,d,h,"resourceDestination","resourceDestinationLiteral","resourceDestinationLiteralMarker","resourceDestinationRaw","resourceDestinationString",32)(w)}function d(w){return v3(w)?Jn(n,v)(w):_(w)}function h(w){return r(w)}function v(w){return w===34||w===39||w===40?Zc(n,p,r,"resourceTitle","resourceTitleMarker","resourceTitleString")(w):_(w)}function p(w){return v3(w)?Jn(n,_)(w):_(w)}function _(w){return w===41?(n.enter("resourceMarker"),n.consume(w),n.exit("resourceMarker"),n.exit("resource"),a):r(w)}}function uv(n,a,r){const l=this;return s;function s(h){return Gc.call(l,n,c,d,"reference","referenceMarker","referenceString")(h)}function c(h){return l.parser.defined.includes(z0(l.sliceSerialize(l.events[l.events.length-1][1]).slice(1,-1)))?a(h):r(h)}function d(h){return r(h)}}function cv(n,a,r){return l;function l(c){return n.enter("reference"),n.enter("referenceMarker"),n.consume(c),n.exit("referenceMarker"),s}function s(c){return c===93?(n.enter("referenceMarker"),n.consume(c),n.exit("referenceMarker"),n.exit("reference"),a):r(c)}}const fv={name:"labelStartImage",resolveAll:kl.resolveAll,tokenize:dv};function dv(n,a,r){const l=this;return s;function s(h){return n.enter("labelImage"),n.enter("labelImageMarker"),n.consume(h),n.exit("labelImageMarker"),c}function c(h){return h===91?(n.enter("labelMarker"),n.consume(h),n.exit("labelMarker"),n.exit("labelImage"),d):r(h)}function d(h){return h===94&&"_hiddenFootnoteSupport"in l.parser.constructs?r(h):a(h)}}const pv={name:"labelStartLink",resolveAll:kl.resolveAll,tokenize:hv};function hv(n,a,r){const l=this;return s;function s(d){return n.enter("labelLink"),n.enter("labelMarker"),n.consume(d),n.exit("labelMarker"),n.exit("labelLink"),c}function c(d){return d===94&&"_hiddenFootnoteSupport"in l.parser.constructs?r(d):a(d)}}const Fo={name:"lineEnding",tokenize:mv};function mv(n,a){return r;function r(l){return n.enter("lineEnding"),n.consume(l),n.exit("lineEnding"),h2(n,a,"linePrefix")}}const ga={name:"thematicBreak",tokenize:gv};function gv(n,a,r){let l=0,s;return c;function c(p){return n.enter("thematicBreak"),d(p)}function d(p){return s=p,h(p)}function h(p){return p===s?(n.enter("thematicBreakSequence"),v(p)):l>=3&&(p===null||O1(p))?(n.exit("thematicBreak"),a(p)):r(p)}function v(p){return p===s?(n.consume(p),l++,v):(n.exit("thematicBreakSequence"),W1(p)?h2(n,h,"whitespace")(p):h(p))}}const g3={continuation:{tokenize:_v},exit:xv,name:"list",tokenize:bv},yv={partial:!0,tokenize:Sv},vv={partial:!0,tokenize:wv};function bv(n,a,r){const l=this,s=l.events[l.events.length-1];let c=s&&s[1].type==="linePrefix"?s[2].sliceSerialize(s[1],!0).length:0,d=0;return h;function h(S){const B=l.containerState.type||(S===42||S===43||S===45?"listUnordered":"listOrdered");if(B==="listUnordered"?!l.containerState.marker||S===l.containerState.marker:rl(S)){if(l.containerState.type||(l.containerState.type=B,n.enter(B,{_container:!0})),B==="listUnordered")return n.enter("listItemPrefix"),S===42||S===45?n.check(ga,r,p)(S):p(S);if(!l.interrupt||S===49)return n.enter("listItemPrefix"),n.enter("listItemValue"),v(S)}return r(S)}function v(S){return rl(S)&&++d<10?(n.consume(S),v):(!l.interrupt||d<2)&&(l.containerState.marker?S===l.containerState.marker:S===41||S===46)?(n.exit("listItemValue"),p(S)):r(S)}function p(S){return n.enter("listItemMarker"),n.consume(S),n.exit("listItemMarker"),l.containerState.marker=l.containerState.marker||S,n.check(ka,l.interrupt?r:_,n.attempt(yv,k,w))}function _(S){return l.containerState.initialBlankLine=!0,c++,k(S)}function w(S){return W1(S)?(n.enter("listItemPrefixWhitespace"),n.consume(S),n.exit("listItemPrefixWhitespace"),k):r(S)}function k(S){return l.containerState.size=c+l.sliceSerialize(n.exit("listItemPrefix"),!0).length,a(S)}}function _v(n,a,r){const l=this;return l.containerState._closeFlow=void 0,n.check(ka,s,c);function s(h){return l.containerState.furtherBlankLines=l.containerState.furtherBlankLines||l.containerState.initialBlankLine,h2(n,a,"listItemIndent",l.containerState.size+1)(h)}function c(h){return l.containerState.furtherBlankLines||!W1(h)?(l.containerState.furtherBlankLines=void 0,l.containerState.initialBlankLine=void 0,d(h)):(l.containerState.furtherBlankLines=void 0,l.containerState.initialBlankLine=void 0,n.attempt(vv,a,d)(h))}function d(h){return l.containerState._closeFlow=!0,l.interrupt=void 0,h2(n,n.attempt(g3,a,r),"linePrefix",l.parser.constructs.disable.null.includes("codeIndented")?void 0:4)(h)}}function wv(n,a,r){const l=this;return h2(n,s,"listItemIndent",l.containerState.size+1);function s(c){const d=l.events[l.events.length-1];return d&&d[1].type==="listItemIndent"&&d[2].sliceSerialize(d[1],!0).length===l.containerState.size?a(c):r(c)}}function xv(n){n.exit(this.containerState.type)}function Sv(n,a,r){const l=this;return h2(n,s,"listItemPrefixWhitespace",l.parser.constructs.disable.null.includes("codeIndented")?void 0:5);function s(c){const d=l.events[l.events.length-1];return!W1(c)&&d&&d[1].type==="listItemPrefixWhitespace"?a(c):r(c)}}const Fu={name:"setextUnderline",resolveTo:Av,tokenize:kv};function Av(n,a){let r=n.length,l,s,c;for(;r--;)if(n[r][0]==="enter"){if(n[r][1].type==="content"){l=r;break}n[r][1].type==="paragraph"&&(s=r)}else n[r][1].type==="content"&&n.splice(r,1),!c&&n[r][1].type==="definition"&&(c=r);const d={type:"setextHeading",start:{...n[l][1].start},end:{...n[n.length-1][1].end}};return n[s][1].type="setextHeadingText",c?(n.splice(s,0,["enter",d,a]),n.splice(c+1,0,["exit",n[l][1],a]),n[l][1].end={...n[c][1].end}):n[l][1]=d,n.push(["exit",d,a]),n}function kv(n,a,r){const l=this;let s;return c;function c(p){let _=l.events.length,w;for(;_--;)if(l.events[_][1].type!=="lineEnding"&&l.events[_][1].type!=="linePrefix"&&l.events[_][1].type!=="content"){w=l.events[_][1].type==="paragraph";break}return!l.parser.lazy[l.now().line]&&(l.interrupt||w)?(n.enter("setextHeadingLine"),s=p,d(p)):r(p)}function d(p){return n.enter("setextHeadingLineSequence"),h(p)}function h(p){return p===s?(n.consume(p),h):(n.exit("setextHeadingLineSequence"),W1(p)?h2(n,v,"lineSuffix")(p):v(p))}function v(p){return p===null||O1(p)?(n.exit("setextHeadingLine"),a(p)):r(p)}}const Ev={tokenize:Tv};function Tv(n){const a=this,r=n.attempt(ka,l,n.attempt(this.parser.constructs.flowInitial,s,h2(n,n.attempt(this.parser.constructs.flow,s,n.attempt(Ly,s)),"linePrefix")));return r;function l(c){if(c===null){n.consume(c);return}return n.enter("lineEndingBlank"),n.consume(c),n.exit("lineEndingBlank"),a.currentConstruct=void 0,r}function s(c){if(c===null){n.consume(c);return}return n.enter("lineEnding"),n.consume(c),n.exit("lineEnding"),a.currentConstruct=void 0,r}}const Cv={resolveAll:Jc()},Mv=Kc("string"),Ov=Kc("text");function Kc(n){return{resolveAll:Jc(n==="text"?Dv:void 0),tokenize:a};function a(r){const l=this,s=this.parser.constructs[n],c=r.attempt(s,d,h);return d;function d(_){return p(_)?c(_):h(_)}function h(_){if(_===null){r.consume(_);return}return r.enter("data"),r.consume(_),v}function v(_){return p(_)?(r.exit("data"),c(_)):(r.consume(_),v)}function p(_){if(_===null)return!0;const w=s[_];let k=-1;if(w)for(;++k<w.length;){const S=w[k];if(!S.previous||S.previous.call(l,l.previous))return!0}return!1}}}function Jc(n){return a;function a(r,l){let s=-1,c;for(;++s<=r.length;)c===void 0?r[s]&&r[s][1].type==="data"&&(c=s,s++):(!r[s]||r[s][1].type!=="data")&&(s!==c+2&&(r[c][1].end=r[s-1][1].end,r.splice(c+2,s-c-2),s=c+2),c=void 0);return n?n(r,l):r}}function Dv(n,a){let r=0;for(;++r<=n.length;)if((r===n.length||n[r][1].type==="lineEnding")&&n[r-1][1].type==="data"){const l=n[r-1][1],s=a.sliceStream(l);let c=s.length,d=-1,h=0,v;for(;c--;){const p=s[c];if(typeof p=="string"){for(d=p.length;p.charCodeAt(d-1)===32;)h++,d--;if(d)break;d=-1}else if(p===-2)v=!0,h++;else if(p!==-1){c++;break}}if(a._contentTypeTextTrailing&&r===n.length&&(h=0),h){const p={type:r===n.length||v||h<2?"lineSuffix":"hardBreakTrailing",start:{_bufferIndex:c?d:l.start._bufferIndex+d,_index:l.start._index+c,line:l.end.line,column:l.end.column-h,offset:l.end.offset-h},end:{...l.end}};l.end={...p.start},l.start.offset===l.end.offset?Object.assign(l,p):(n.splice(r,0,["enter",p,a],["exit",p,a]),r+=2)}r++}return n}const Lv={42:g3,43:g3,45:g3,48:g3,49:g3,50:g3,51:g3,52:g3,53:g3,54:g3,55:g3,56:g3,57:g3,62:$c},Rv={91:Iy},Uv={[-2]:Vo,[-1]:Vo,32:Vo},zv={35:Fy,42:ga,45:[Fu,ga],60:Qy,61:Fu,95:ga,96:Hu,126:Hu},Nv={38:Yc,92:Pc},Iv={[-5]:Fo,[-4]:Fo,[-3]:Fo,33:fv,38:Yc,42:ol,60:[py,ev],91:pv,92:[Hy,Pc],93:kl,95:ol,96:Ey},jv={null:[ol,Cv]},Bv={null:[42,95]},qv={null:[]},Hv=Object.freeze(Object.defineProperty({__proto__:null,attentionMarkers:Bv,contentInitial:Rv,disable:qv,document:Lv,flow:zv,flowInitial:Uv,insideSpan:jv,string:Nv,text:Iv},Symbol.toStringTag,{value:"Module"}));function Vv(n,a,r){let l={_bufferIndex:-1,_index:0,line:r&&r.line||1,column:r&&r.column||1,offset:r&&r.offset||0};const s={},c=[];let d=[],h=[];const v={attempt:v1(i1),check:v1(I),consume:n1,enter:o1,exit:A1,interrupt:v1(I,{interrupt:!0})},p={code:null,containerState:{},defineSkip:V,events:[],now:B,parser:n,previous:null,sliceSerialize:k,sliceStream:S,write:w};let _=a.tokenize.call(p,v);return a.resolveAll&&c.push(a),p;function w(u1){return d=G3(d,u1),e1(),d[d.length-1]!==null?[]:(_1(a,0),p.events=Al(c,p.events,p),p.events)}function k(u1,c1){return $v(S(u1),c1)}function S(u1){return Fv(d,u1)}function B(){const{_bufferIndex:u1,_index:c1,line:Q,column:l1,offset:s1}=l;return{_bufferIndex:u1,_index:c1,line:Q,column:l1,offset:s1}}function V(u1){s[u1.line]=u1.column,f1()}function e1(){let u1;for(;l._index<d.length;){const c1=d[l._index];if(typeof c1=="string")for(u1=l._index,l._bufferIndex<0&&(l._bufferIndex=0);l._index===u1&&l._bufferIndex<c1.length;)$(c1.charCodeAt(l._bufferIndex));else $(c1)}}function $(u1){_=_(u1)}function n1(u1){O1(u1)?(l.line++,l.column=1,l.offset+=u1===-3?2:1,f1()):u1!==-1&&(l.column++,l.offset++),l._bufferIndex<0?l._index++:(l._bufferIndex++,l._bufferIndex===d[l._index].length&&(l._bufferIndex=-1,l._index++)),p.previous=u1}function o1(u1,c1){const Q=c1||{};return Q.type=u1,Q.start=B(),p.events.push(["enter",Q,p]),h.push(Q),Q}function A1(u1){const c1=h.pop();return c1.end=B(),p.events.push(["exit",c1,p]),c1}function i1(u1,c1){_1(u1,c1.from)}function I(u1,c1){c1.restore()}function v1(u1,c1){return Q;function Q(l1,s1,M){let q,P,x1,b;return Array.isArray(l1)?h1(l1):"tokenize"in l1?h1([l1]):Z(l1);function Z(g1){return o2;function o2(N1){const e2=N1!==null&&g1[N1],V1=N1!==null&&g1.null,M2=[...Array.isArray(e2)?e2:e2?[e2]:[],...Array.isArray(V1)?V1:V1?[V1]:[]];return h1(M2)(N1)}}function h1(g1){return q=g1,P=0,g1.length===0?M:T(g1[P])}function T(g1){return o2;function o2(N1){return b=t1(),x1=g1,g1.partial||(p.currentConstruct=g1),g1.name&&p.parser.constructs.disable.null.includes(g1.name)?E1():g1.tokenize.call(c1?Object.assign(Object.create(p),c1):p,v,a1,E1)(N1)}}function a1(g1){return u1(x1,b),s1}function E1(g1){return b.restore(),++P<q.length?T(q[P]):M}}}function _1(u1,c1){u1.resolveAll&&!c.includes(u1)&&c.push(u1),u1.resolve&&ve(p.events,c1,p.events.length-c1,u1.resolve(p.events.slice(c1),p)),u1.resolveTo&&(p.events=u1.resolveTo(p.events,p))}function t1(){const u1=B(),c1=p.previous,Q=p.currentConstruct,l1=p.events.length,s1=Array.from(h);return{from:l1,restore:M};function M(){l=u1,p.previous=c1,p.currentConstruct=Q,p.events.length=l1,h=s1,f1()}}function f1(){l.line in s&&l.column<2&&(l.column=s[l.line],l.offset+=s[l.line]-1)}}function Fv(n,a){const r=a.start._index,l=a.start._bufferIndex,s=a.end._index,c=a.end._bufferIndex;let d;if(r===s)d=[n[r].slice(l,c)];else{if(d=n.slice(r,s),l>-1){const h=d[0];typeof h=="string"?d[0]=h.slice(l):d.shift()}c>0&&d.push(n[s].slice(0,c))}return d}function $v(n,a){let r=-1;const l=[];let s;for(;++r<n.length;){const c=n[r];let d;if(typeof c=="string")d=c;else switch(c){case-5:{d="\r";break}case-4:{d=`
`;break}case-3:{d=`\r
`;break}case-2:{d=a?" ":"	";break}case-1:{if(!a&&s)continue;d=" ";break}default:d=String.fromCharCode(c)}s=c===-2,l.push(d)}return l.join("")}function Pv(n){const l={constructs:Jg([Hv,...(n||{}).extensions||[]]),content:s(oy),defined:[],document:s(sy),flow:s(Ev),lazy:{},string:s(Mv),text:s(Ov)};return l;function s(c){return d;function d(h){return Vv(l,c,h)}}}function Yv(n){for(;!Qc(n););return n}const $u=/[\0\t\n\r]/g;function Qv(){let n=1,a="",r=!0,l;return s;function s(c,d,h){const v=[];let p,_,w,k,S;for(c=a+(typeof c=="string"?c.toString():new TextDecoder(d||void 0).decode(c)),w=0,a="",r&&(c.charCodeAt(0)===65279&&w++,r=void 0);w<c.length;){if($u.lastIndex=w,p=$u.exec(c),k=p&&p.index!==void 0?p.index:c.length,S=c.charCodeAt(k),!p){a=c.slice(w);break}if(S===10&&w===k&&l)v.push(-3),l=void 0;else switch(l&&(v.push(-5),l=void 0),w<k&&(v.push(c.slice(w,k)),n+=k-w),S){case 0:{v.push(65533),n++;break}case 9:{for(_=Math.ceil(n/4)*4,v.push(-2);n++<_;)v.push(-1);break}case 10:{v.push(-4),n=1;break}default:l=!0,n=1}w=k+1}return h&&(l&&v.push(-5),a&&v.push(a),v.push(null)),v}}const Xv=/\\([!-/:-@[-`{-~])|&(#(?:\d{1,7}|x[\da-f]{1,6})|[\da-z]{1,31});/gi;function Gv(n){return n.replace(Xv,Zv)}function Zv(n,a,r){if(a)return a;if(r.charCodeAt(0)===35){const s=r.charCodeAt(1),c=s===120||s===88;return Fc(r.slice(c?2:1),c?16:10)}return Sl(r)||n}const Wc={}.hasOwnProperty;function Kv(n,a,r){return typeof a!="string"&&(r=a,a=void 0),Jv(r)(Yv(Pv(r).document().write(Qv()(n,a,!0))))}function Jv(n){const a={transforms:[],canContainEols:["emphasis","fragment","heading","paragraph","strong"],enter:{autolink:c(be),autolinkProtocol:t1,autolinkEmail:t1,atxHeading:c(l3),blockQuote:c(V1),characterEscape:t1,characterReference:t1,codeFenced:c(M2),codeFencedFenceInfo:d,codeFencedFenceMeta:d,codeIndented:c(M2,d),codeText:c(Z3,d),codeTextData:t1,data:t1,codeFlowValue:t1,definition:c(W2),definitionDestinationString:d,definitionLabelString:d,definitionTitleString:d,emphasis:c(_3),hardBreakEscape:c(p3),hardBreakTrailing:c(p3),htmlFlow:c(z3,d),htmlFlowData:t1,htmlText:c(z3,d),htmlTextData:t1,image:c(s3),label:d,link:c(be),listItem:c(R1),listItemValue:k,listOrdered:c(g2,w),listUnordered:c(g2),paragraph:c(q0),reference:T,referenceString:d,resourceDestinationString:d,resourceTitleString:d,setextHeading:c(l3),strong:c(u3),thematicBreak:c(ht)},exit:{atxHeading:v(),atxHeadingSequence:i1,autolink:v(),autolinkEmail:e2,autolinkProtocol:N1,blockQuote:v(),characterEscapeValue:f1,characterReferenceMarkerHexadecimal:E1,characterReferenceMarkerNumeric:E1,characterReferenceValue:g1,characterReference:o2,codeFenced:v(e1),codeFencedFence:V,codeFencedFenceInfo:S,codeFencedFenceMeta:B,codeFlowValue:f1,codeIndented:v($),codeText:v(s1),codeTextData:f1,data:f1,definition:v(),definitionDestinationString:A1,definitionLabelString:n1,definitionTitleString:o1,emphasis:v(),hardBreakEscape:v(c1),hardBreakTrailing:v(c1),htmlFlow:v(Q),htmlFlowData:f1,htmlText:v(l1),htmlTextData:f1,image:v(q),label:x1,labelText:P,lineEnding:u1,link:v(M),listItem:v(),listOrdered:v(),listUnordered:v(),paragraph:v(),referenceString:a1,resourceDestinationString:b,resourceTitleString:Z,resource:h1,setextHeading:v(_1),setextHeadingLineSequence:v1,setextHeadingText:I,strong:v(),thematicBreak:v()}};e6(a,(n||{}).mdastExtensions||[]);const r={};return l;function l(F){let r1={type:"root",children:[]};const S1={stack:[r1],tokenStack:[],config:a,enter:h,exit:p,buffer:d,resume:_,data:r},B1=[];let G1=-1;for(;++G1<F.length;)if(F[G1][1].type==="listOrdered"||F[G1][1].type==="listUnordered")if(F[G1][0]==="enter")B1.push(G1);else{const B2=B1.pop();G1=s(F,B2,G1)}for(G1=-1;++G1<F.length;){const B2=a[F[G1][0]];Wc.call(B2,F[G1][1].type)&&B2[F[G1][1].type].call(Object.assign({sliceSerialize:F[G1][2].sliceSerialize},S1),F[G1][1])}if(S1.tokenStack.length>0){const B2=S1.tokenStack[S1.tokenStack.length-1];(B2[1]||Pu).call(S1,void 0,B2[0])}for(r1.position={start:ft(F.length>0?F[0][1].start:{line:1,column:1,offset:0}),end:ft(F.length>0?F[F.length-2][1].end:{line:1,column:1,offset:0})},G1=-1;++G1<a.transforms.length;)r1=a.transforms[G1](r1)||r1;return r1}function s(F,r1,S1){let B1=r1-1,G1=-1,B2=!1,c3,O2,m2,le;for(;++B1<=S1;){const l2=F[B1];switch(l2[1].type){case"listUnordered":case"listOrdered":case"blockQuote":{l2[0]==="enter"?G1++:G1--,le=void 0;break}case"lineEndingBlank":{l2[0]==="enter"&&(c3&&!le&&!G1&&!m2&&(m2=B1),le=void 0);break}case"linePrefix":case"listItemValue":case"listItemMarker":case"listItemPrefix":case"listItemPrefixWhitespace":break;default:le=void 0}if(!G1&&l2[0]==="enter"&&l2[1].type==="listItemPrefix"||G1===-1&&l2[0]==="exit"&&(l2[1].type==="listUnordered"||l2[1].type==="listOrdered")){if(c3){let x2=B1;for(O2=void 0;x2--;){const w3=F[x2];if(w3[1].type==="lineEnding"||w3[1].type==="lineEndingBlank"){if(w3[0]==="exit")continue;O2&&(F[O2][1].type="lineEndingBlank",B2=!0),w3[1].type="lineEnding",O2=x2}else if(!(w3[1].type==="linePrefix"||w3[1].type==="blockQuotePrefix"||w3[1].type==="blockQuotePrefixWhitespace"||w3[1].type==="blockQuoteMarker"||w3[1].type==="listItemIndent"))break}m2&&(!O2||m2<O2)&&(c3._spread=!0),c3.end=Object.assign({},O2?F[O2][1].start:l2[1].end),F.splice(O2||B1,0,["exit",c3,l2[2]]),B1++,S1++}if(l2[1].type==="listItemPrefix"){const x2={type:"listItem",_spread:!1,start:Object.assign({},l2[1].start),end:void 0};c3=x2,F.splice(B1,0,["enter",x2,l2[2]]),B1++,S1++,m2=void 0,le=!0}}}return F[r1][1]._spread=B2,S1}function c(F,r1){return S1;function S1(B1){h.call(this,F(B1),B1),r1&&r1.call(this,B1)}}function d(){this.stack.push({type:"fragment",children:[]})}function h(F,r1,S1){this.stack[this.stack.length-1].children.push(F),this.stack.push(F),this.tokenStack.push([r1,S1||void 0]),F.position={start:ft(r1.start),end:void 0}}function v(F){return r1;function r1(S1){F&&F.call(this,S1),p.call(this,S1)}}function p(F,r1){const S1=this.stack.pop(),B1=this.tokenStack.pop();if(B1)B1[0].type!==F.type&&(r1?r1.call(this,F,B1[0]):(B1[1]||Pu).call(this,F,B1[0]));else throw new Error("Cannot close `"+F.type+"` ("+Kn({start:F.start,end:F.end})+"): it’s not open");S1.position.end=ft(F.end)}function _(){return Zg(this.stack.pop())}function w(){this.data.expectingFirstListItemValue=!0}function k(F){if(this.data.expectingFirstListItemValue){const r1=this.stack[this.stack.length-2];r1.start=Number.parseInt(this.sliceSerialize(F),10),this.data.expectingFirstListItemValue=void 0}}function S(){const F=this.resume(),r1=this.stack[this.stack.length-1];r1.lang=F}function B(){const F=this.resume(),r1=this.stack[this.stack.length-1];r1.meta=F}function V(){this.data.flowCodeInside||(this.buffer(),this.data.flowCodeInside=!0)}function e1(){const F=this.resume(),r1=this.stack[this.stack.length-1];r1.value=F.replace(/^(\r?\n|\r)|(\r?\n|\r)$/g,""),this.data.flowCodeInside=void 0}function $(){const F=this.resume(),r1=this.stack[this.stack.length-1];r1.value=F.replace(/(\r?\n|\r)$/g,"")}function n1(F){const r1=this.resume(),S1=this.stack[this.stack.length-1];S1.label=r1,S1.identifier=z0(this.sliceSerialize(F)).toLowerCase()}function o1(){const F=this.resume(),r1=this.stack[this.stack.length-1];r1.title=F}function A1(){const F=this.resume(),r1=this.stack[this.stack.length-1];r1.url=F}function i1(F){const r1=this.stack[this.stack.length-1];if(!r1.depth){const S1=this.sliceSerialize(F).length;r1.depth=S1}}function I(){this.data.setextHeadingSlurpLineEnding=!0}function v1(F){const r1=this.stack[this.stack.length-1];r1.depth=this.sliceSerialize(F).codePointAt(0)===61?1:2}function _1(){this.data.setextHeadingSlurpLineEnding=void 0}function t1(F){const S1=this.stack[this.stack.length-1].children;let B1=S1[S1.length-1];(!B1||B1.type!=="text")&&(B1=e3(),B1.position={start:ft(F.start),end:void 0},S1.push(B1)),this.stack.push(B1)}function f1(F){const r1=this.stack.pop();r1.value+=this.sliceSerialize(F),r1.position.end=ft(F.end)}function u1(F){const r1=this.stack[this.stack.length-1];if(this.data.atHardBreak){const S1=r1.children[r1.children.length-1];S1.position.end=ft(F.end),this.data.atHardBreak=void 0;return}!this.data.setextHeadingSlurpLineEnding&&a.canContainEols.includes(r1.type)&&(t1.call(this,F),f1.call(this,F))}function c1(){this.data.atHardBreak=!0}function Q(){const F=this.resume(),r1=this.stack[this.stack.length-1];r1.value=F}function l1(){const F=this.resume(),r1=this.stack[this.stack.length-1];r1.value=F}function s1(){const F=this.resume(),r1=this.stack[this.stack.length-1];r1.value=F}function M(){const F=this.stack[this.stack.length-1];if(this.data.inReference){const r1=this.data.referenceType||"shortcut";F.type+="Reference",F.referenceType=r1,delete F.url,delete F.title}else delete F.identifier,delete F.label;this.data.referenceType=void 0}function q(){const F=this.stack[this.stack.length-1];if(this.data.inReference){const r1=this.data.referenceType||"shortcut";F.type+="Reference",F.referenceType=r1,delete F.url,delete F.title}else delete F.identifier,delete F.label;this.data.referenceType=void 0}function P(F){const r1=this.sliceSerialize(F),S1=this.stack[this.stack.length-2];S1.label=Gv(r1),S1.identifier=z0(r1).toLowerCase()}function x1(){const F=this.stack[this.stack.length-1],r1=this.resume(),S1=this.stack[this.stack.length-1];if(this.data.inReference=!0,S1.type==="link"){const B1=F.children;S1.children=B1}else S1.alt=r1}function b(){const F=this.resume(),r1=this.stack[this.stack.length-1];r1.url=F}function Z(){const F=this.resume(),r1=this.stack[this.stack.length-1];r1.title=F}function h1(){this.data.inReference=void 0}function T(){this.data.referenceType="collapsed"}function a1(F){const r1=this.resume(),S1=this.stack[this.stack.length-1];S1.label=r1,S1.identifier=z0(this.sliceSerialize(F)).toLowerCase(),this.data.referenceType="full"}function E1(F){this.data.characterReferenceType=F.type}function g1(F){const r1=this.sliceSerialize(F),S1=this.data.characterReferenceType;let B1;S1?(B1=Fc(r1,S1==="characterReferenceMarkerNumeric"?10:16),this.data.characterReferenceType=void 0):B1=Sl(r1);const G1=this.stack[this.stack.length-1];G1.value+=B1}function o2(F){const r1=this.stack.pop();r1.position.end=ft(F.end)}function N1(F){f1.call(this,F);const r1=this.stack[this.stack.length-1];r1.url=this.sliceSerialize(F)}function e2(F){f1.call(this,F);const r1=this.stack[this.stack.length-1];r1.url="mailto:"+this.sliceSerialize(F)}function V1(){return{type:"blockquote",children:[]}}function M2(){return{type:"code",lang:null,meta:null,value:""}}function Z3(){return{type:"inlineCode",value:""}}function W2(){return{type:"definition",identifier:"",label:null,title:null,url:""}}function _3(){return{type:"emphasis",children:[]}}function l3(){return{type:"heading",depth:0,children:[]}}function p3(){return{type:"break"}}function z3(){return{type:"html",value:""}}function s3(){return{type:"image",title:null,url:"",alt:null}}function be(){return{type:"link",title:null,url:"",children:[]}}function g2(F){return{type:"list",ordered:F.type==="listOrdered",start:null,spread:F._spread,children:[]}}function R1(F){return{type:"listItem",spread:F._spread,checked:null,children:[]}}function q0(){return{type:"paragraph",children:[]}}function u3(){return{type:"strong",children:[]}}function e3(){return{type:"text",value:""}}function ht(){return{type:"thematicBreak"}}}function ft(n){return{line:n.line,column:n.column,offset:n.offset}}function e6(n,a){let r=-1;for(;++r<a.length;){const l=a[r];Array.isArray(l)?e6(n,l):Wv(n,l)}}function Wv(n,a){let r;for(r in a)if(Wc.call(a,r))switch(r){case"canContainEols":{const l=a[r];l&&n[r].push(...l);break}case"transforms":{const l=a[r];l&&n[r].push(...l);break}case"enter":case"exit":{const l=a[r];l&&Object.assign(n[r],l);break}}}function Pu(n,a){throw n?new Error("Cannot close `"+n.type+"` ("+Kn({start:n.start,end:n.end})+"): a different token (`"+a.type+"`, "+Kn({start:a.start,end:a.end})+") is open"):new Error("Cannot close document, a token (`"+a.type+"`, "+Kn({start:a.start,end:a.end})+") is still open")}function eb(n){const a=this;a.parser=r;function r(l){return Kv(l,{...a.data("settings"),...n,extensions:a.data("micromarkExtensions")||[],mdastExtensions:a.data("fromMarkdownExtensions")||[]})}}function tb(n,a){const r={type:"element",tagName:"blockquote",properties:{},children:n.wrap(n.all(a),!0)};return n.patch(a,r),n.applyData(a,r)}function nb(n,a){const r={type:"element",tagName:"br",properties:{},children:[]};return n.patch(a,r),[n.applyData(a,r),{type:"text",value:`
`}]}function ib(n,a){const r=a.value?a.value+`
`:"",l={};a.lang&&(l.className=["language-"+a.lang]);let s={type:"element",tagName:"code",properties:l,children:[{type:"text",value:r}]};return a.meta&&(s.data={meta:a.meta}),n.patch(a,s),s=n.applyData(a,s),s={type:"element",tagName:"pre",properties:{},children:[s]},n.patch(a,s),s}function ab(n,a){const r={type:"element",tagName:"del",properties:{},children:n.all(a)};return n.patch(a,r),n.applyData(a,r)}function rb(n,a){const r={type:"element",tagName:"em",properties:{},children:n.all(a)};return n.patch(a,r),n.applyData(a,r)}function ob(n,a){const r=typeof n.options.clobberPrefix=="string"?n.options.clobberPrefix:"user-content-",l=String(a.identifier).toUpperCase(),s=B0(l.toLowerCase()),c=n.footnoteOrder.indexOf(l);let d,h=n.footnoteCounts.get(l);h===void 0?(h=0,n.footnoteOrder.push(l),d=n.footnoteOrder.length):d=c+1,h+=1,n.footnoteCounts.set(l,h);const v={type:"element",tagName:"a",properties:{href:"#"+r+"fn-"+s,id:r+"fnref-"+s+(h>1?"-"+h:""),dataFootnoteRef:!0,ariaDescribedBy:["footnote-label"]},children:[{type:"text",value:String(d)}]};n.patch(a,v);const p={type:"element",tagName:"sup",properties:{},children:[v]};return n.patch(a,p),n.applyData(a,p)}function lb(n,a){const r={type:"element",tagName:"h"+a.depth,properties:{},children:n.all(a)};return n.patch(a,r),n.applyData(a,r)}function sb(n,a){if(n.options.allowDangerousHtml){const r={type:"raw",value:a.value};return n.patch(a,r),n.applyData(a,r)}}function t6(n,a){const r=a.referenceType;let l="]";if(r==="collapsed"?l+="[]":r==="full"&&(l+="["+(a.label||a.identifier)+"]"),a.type==="imageReference")return[{type:"text",value:"!["+a.alt+l}];const s=n.all(a),c=s[0];c&&c.type==="text"?c.value="["+c.value:s.unshift({type:"text",value:"["});const d=s[s.length-1];return d&&d.type==="text"?d.value+=l:s.push({type:"text",value:l}),s}function ub(n,a){const r=String(a.identifier).toUpperCase(),l=n.definitionById.get(r);if(!l)return t6(n,a);const s={src:B0(l.url||""),alt:a.alt};l.title!==null&&l.title!==void 0&&(s.title=l.title);const c={type:"element",tagName:"img",properties:s,children:[]};return n.patch(a,c),n.applyData(a,c)}function cb(n,a){const r={src:B0(a.url)};a.alt!==null&&a.alt!==void 0&&(r.alt=a.alt),a.title!==null&&a.title!==void 0&&(r.title=a.title);const l={type:"element",tagName:"img",properties:r,children:[]};return n.patch(a,l),n.applyData(a,l)}function fb(n,a){const r={type:"text",value:a.value.replace(/\r?\n|\r/g," ")};n.patch(a,r);const l={type:"element",tagName:"code",properties:{},children:[r]};return n.patch(a,l),n.applyData(a,l)}function db(n,a){const r=String(a.identifier).toUpperCase(),l=n.definitionById.get(r);if(!l)return t6(n,a);const s={href:B0(l.url||"")};l.title!==null&&l.title!==void 0&&(s.title=l.title);const c={type:"element",tagName:"a",properties:s,children:n.all(a)};return n.patch(a,c),n.applyData(a,c)}function pb(n,a){const r={href:B0(a.url)};a.title!==null&&a.title!==void 0&&(r.title=a.title);const l={type:"element",tagName:"a",properties:r,children:n.all(a)};return n.patch(a,l),n.applyData(a,l)}function hb(n,a,r){const l=n.all(a),s=r?mb(r):n6(a),c={},d=[];if(typeof a.checked=="boolean"){const _=l[0];let w;_&&_.type==="element"&&_.tagName==="p"?w=_:(w={type:"element",tagName:"p",properties:{},children:[]},l.unshift(w)),w.children.length>0&&w.children.unshift({type:"text",value:" "}),w.children.unshift({type:"element",tagName:"input",properties:{type:"checkbox",checked:a.checked,disabled:!0},children:[]}),c.className=["task-list-item"]}let h=-1;for(;++h<l.length;){const _=l[h];(s||h!==0||_.type!=="element"||_.tagName!=="p")&&d.push({type:"text",value:`
`}),_.type==="element"&&_.tagName==="p"&&!s?d.push(..._.children):d.push(_)}const v=l[l.length-1];v&&(s||v.type!=="element"||v.tagName!=="p")&&d.push({type:"text",value:`
`});const p={type:"element",tagName:"li",properties:c,children:d};return n.patch(a,p),n.applyData(a,p)}function mb(n){let a=!1;if(n.type==="list"){a=n.spread||!1;const r=n.children;let l=-1;for(;!a&&++l<r.length;)a=n6(r[l])}return a}function n6(n){const a=n.spread;return a??n.children.length>1}function gb(n,a){const r={},l=n.all(a);let s=-1;for(typeof a.start=="number"&&a.start!==1&&(r.start=a.start);++s<l.length;){const d=l[s];if(d.type==="element"&&d.tagName==="li"&&d.properties&&Array.isArray(d.properties.className)&&d.properties.className.includes("task-list-item")){r.className=["contains-task-list"];break}}const c={type:"element",tagName:a.ordered?"ol":"ul",properties:r,children:n.wrap(l,!0)};return n.patch(a,c),n.applyData(a,c)}function yb(n,a){const r={type:"element",tagName:"p",properties:{},children:n.all(a)};return n.patch(a,r),n.applyData(a,r)}function vb(n,a){const r={type:"root",children:n.wrap(n.all(a))};return n.patch(a,r),n.applyData(a,r)}function bb(n,a){const r={type:"element",tagName:"strong",properties:{},children:n.all(a)};return n.patch(a,r),n.applyData(a,r)}function _b(n,a){const r=n.all(a),l=r.shift(),s=[];if(l){const d={type:"element",tagName:"thead",properties:{},children:n.wrap([l],!0)};n.patch(a.children[0],d),s.push(d)}if(r.length>0){const d={type:"element",tagName:"tbody",properties:{},children:n.wrap(r,!0)},h=bl(a.children[1]),v=Nc(a.children[a.children.length-1]);h&&v&&(d.position={start:h,end:v}),s.push(d)}const c={type:"element",tagName:"table",properties:{},children:n.wrap(s,!0)};return n.patch(a,c),n.applyData(a,c)}function wb(n,a,r){const l=r?r.children:void 0,c=(l?l.indexOf(a):1)===0?"th":"td",d=r&&r.type==="table"?r.align:void 0,h=d?d.length:a.children.length;let v=-1;const p=[];for(;++v<h;){const w=a.children[v],k={},S=d?d[v]:void 0;S&&(k.align=S);let B={type:"element",tagName:c,properties:k,children:[]};w&&(B.children=n.all(w),n.patch(w,B),B=n.applyData(w,B)),p.push(B)}const _={type:"element",tagName:"tr",properties:{},children:n.wrap(p,!0)};return n.patch(a,_),n.applyData(a,_)}function xb(n,a){const r={type:"element",tagName:"td",properties:{},children:n.all(a)};return n.patch(a,r),n.applyData(a,r)}const Yu=9,Qu=32;function Sb(n){const a=String(n),r=/\r?\n|\r/g;let l=r.exec(a),s=0;const c=[];for(;l;)c.push(Xu(a.slice(s,l.index),s>0,!0),l[0]),s=l.index+l[0].length,l=r.exec(a);return c.push(Xu(a.slice(s),s>0,!1)),c.join("")}function Xu(n,a,r){let l=0,s=n.length;if(a){let c=n.codePointAt(l);for(;c===Yu||c===Qu;)l++,c=n.codePointAt(l)}if(r){let c=n.codePointAt(s-1);for(;c===Yu||c===Qu;)s--,c=n.codePointAt(s-1)}return s>l?n.slice(l,s):""}function Ab(n,a){const r={type:"text",value:Sb(String(a.value))};return n.patch(a,r),n.applyData(a,r)}function kb(n,a){const r={type:"element",tagName:"hr",properties:{},children:[]};return n.patch(a,r),n.applyData(a,r)}const Eb={blockquote:tb,break:nb,code:ib,delete:ab,emphasis:rb,footnoteReference:ob,heading:lb,html:sb,imageReference:ub,image:cb,inlineCode:fb,linkReference:db,link:pb,listItem:hb,list:gb,paragraph:yb,root:vb,strong:bb,table:_b,tableCell:xb,tableRow:wb,text:Ab,thematicBreak:kb,toml:ca,yaml:ca,definition:ca,footnoteDefinition:ca};function ca(){}const i6=-1,Ea=0,Wn=1,_a=2,El=3,Tl=4,Cl=5,Ml=6,a6=7,r6=8,Gu=typeof self=="object"?self:globalThis,Tb=(n,a)=>{const r=(s,c)=>(n.set(c,s),s),l=s=>{if(n.has(s))return n.get(s);const[c,d]=a[s];switch(c){case Ea:case i6:return r(d,s);case Wn:{const h=r([],s);for(const v of d)h.push(l(v));return h}case _a:{const h=r({},s);for(const[v,p]of d)h[l(v)]=l(p);return h}case El:return r(new Date(d),s);case Tl:{const{source:h,flags:v}=d;return r(new RegExp(h,v),s)}case Cl:{const h=r(new Map,s);for(const[v,p]of d)h.set(l(v),l(p));return h}case Ml:{const h=r(new Set,s);for(const v of d)h.add(l(v));return h}case a6:{const{name:h,message:v}=d;return r(new Gu[h](v),s)}case r6:return r(BigInt(d),s);case"BigInt":return r(Object(BigInt(d)),s);case"ArrayBuffer":return r(new Uint8Array(d).buffer,d);case"DataView":{const{buffer:h}=new Uint8Array(d);return r(new DataView(h),d)}}return r(new Gu[c](d),s)};return l},Zu=n=>Tb(new Map,n)(0),R0="",{toString:Cb}={},{keys:Mb}=Object,Gn=n=>{const a=typeof n;if(a!=="object"||!n)return[Ea,a];const r=Cb.call(n).slice(8,-1);switch(r){case"Array":return[Wn,R0];case"Object":return[_a,R0];case"Date":return[El,R0];case"RegExp":return[Tl,R0];case"Map":return[Cl,R0];case"Set":return[Ml,R0];case"DataView":return[Wn,r]}return r.includes("Array")?[Wn,r]:r.includes("Error")?[a6,r]:[_a,r]},fa=([n,a])=>n===Ea&&(a==="function"||a==="symbol"),Ob=(n,a,r,l)=>{const s=(d,h)=>{const v=l.push(d)-1;return r.set(h,v),v},c=d=>{if(r.has(d))return r.get(d);let[h,v]=Gn(d);switch(h){case Ea:{let _=d;switch(v){case"bigint":h=r6,_=d.toString();break;case"function":case"symbol":if(n)throw new TypeError("unable to serialize "+v);_=null;break;case"undefined":return s([i6],d)}return s([h,_],d)}case Wn:{if(v){let k=d;return v==="DataView"?k=new Uint8Array(d.buffer):v==="ArrayBuffer"&&(k=new Uint8Array(d)),s([v,[...k]],d)}const _=[],w=s([h,_],d);for(const k of d)_.push(c(k));return w}case _a:{if(v)switch(v){case"BigInt":return s([v,d.toString()],d);case"Boolean":case"Number":case"String":return s([v,d.valueOf()],d)}if(a&&"toJSON"in d)return c(d.toJSON());const _=[],w=s([h,_],d);for(const k of Mb(d))(n||!fa(Gn(d[k])))&&_.push([c(k),c(d[k])]);return w}case El:return s([h,d.toISOString()],d);case Tl:{const{source:_,flags:w}=d;return s([h,{source:_,flags:w}],d)}case Cl:{const _=[],w=s([h,_],d);for(const[k,S]of d)(n||!(fa(Gn(k))||fa(Gn(S))))&&_.push([c(k),c(S)]);return w}case Ml:{const _=[],w=s([h,_],d);for(const k of d)(n||!fa(Gn(k)))&&_.push(c(k));return w}}const{message:p}=d;return s([h,{name:v,message:p}],d)};return c},Ku=(n,{json:a,lossy:r}={})=>{const l=[];return Ob(!(a||r),!!a,new Map,l)(n),l},wa=typeof structuredClone=="function"?(n,a)=>a&&("json"in a||"lossy"in a)?Zu(Ku(n,a)):structuredClone(n):(n,a)=>Zu(Ku(n,a));function Db(n,a){const r=[{type:"text",value:"↩"}];return a>1&&r.push({type:"element",tagName:"sup",properties:{},children:[{type:"text",value:String(a)}]}),r}function Lb(n,a){return"Back to reference "+(n+1)+(a>1?"-"+a:"")}function Rb(n){const a=typeof n.options.clobberPrefix=="string"?n.options.clobberPrefix:"user-content-",r=n.options.footnoteBackContent||Db,l=n.options.footnoteBackLabel||Lb,s=n.options.footnoteLabel||"Footnotes",c=n.options.footnoteLabelTagName||"h2",d=n.options.footnoteLabelProperties||{className:["sr-only"]},h=[];let v=-1;for(;++v<n.footnoteOrder.length;){const p=n.footnoteById.get(n.footnoteOrder[v]);if(!p)continue;const _=n.all(p),w=String(p.identifier).toUpperCase(),k=B0(w.toLowerCase());let S=0;const B=[],V=n.footnoteCounts.get(w);for(;V!==void 0&&++S<=V;){B.length>0&&B.push({type:"text",value:" "});let n1=typeof r=="string"?r:r(v,S);typeof n1=="string"&&(n1={type:"text",value:n1}),B.push({type:"element",tagName:"a",properties:{href:"#"+a+"fnref-"+k+(S>1?"-"+S:""),dataFootnoteBackref:"",ariaLabel:typeof l=="string"?l:l(v,S),className:["data-footnote-backref"]},children:Array.isArray(n1)?n1:[n1]})}const e1=_[_.length-1];if(e1&&e1.type==="element"&&e1.tagName==="p"){const n1=e1.children[e1.children.length-1];n1&&n1.type==="text"?n1.value+=" ":e1.children.push({type:"text",value:" "}),e1.children.push(...B)}else _.push(...B);const $={type:"element",tagName:"li",properties:{id:a+"fn-"+k},children:n.wrap(_,!0)};n.patch(p,$),h.push($)}if(h.length!==0)return{type:"element",tagName:"section",properties:{dataFootnotes:!0,className:["footnotes"]},children:[{type:"element",tagName:c,properties:{...wa(d),id:"footnote-label"},children:[{type:"text",value:s}]},{type:"text",value:`
`},{type:"element",tagName:"ol",properties:{},children:n.wrap(h,!0)},{type:"text",value:`
`}]}}const o6=function(n){if(n==null)return Ib;if(typeof n=="function")return Ta(n);if(typeof n=="object")return Array.isArray(n)?Ub(n):zb(n);if(typeof n=="string")return Nb(n);throw new Error("Expected function, string, or object as test")};function Ub(n){const a=[];let r=-1;for(;++r<n.length;)a[r]=o6(n[r]);return Ta(l);function l(...s){let c=-1;for(;++c<a.length;)if(a[c].apply(this,s))return!0;return!1}}function zb(n){const a=n;return Ta(r);function r(l){const s=l;let c;for(c in n)if(s[c]!==a[c])return!1;return!0}}function Nb(n){return Ta(a);function a(r){return r&&r.type===n}}function Ta(n){return a;function a(r,l,s){return!!(jb(r)&&n.call(this,r,typeof l=="number"?l:void 0,s||void 0))}}function Ib(){return!0}function jb(n){return n!==null&&typeof n=="object"&&"type"in n}const l6=[],Bb=!0,Ju=!1,qb="skip";function Hb(n,a,r,l){let s;typeof a=="function"&&typeof r!="function"?(l=r,r=a):s=a;const c=o6(s),d=l?-1:1;h(n,void 0,[])();function h(v,p,_){const w=v&&typeof v=="object"?v:{};if(typeof w.type=="string"){const S=typeof w.tagName=="string"?w.tagName:typeof w.name=="string"?w.name:void 0;Object.defineProperty(k,"name",{value:"node ("+(v.type+(S?"<"+S+">":""))+")"})}return k;function k(){let S=l6,B,V,e1;if((!a||c(v,p,_[_.length-1]||void 0))&&(S=Vb(r(v,_)),S[0]===Ju))return S;if("children"in v&&v.children){const $=v;if($.children&&S[0]!==qb)for(V=(l?$.children.length:-1)+d,e1=_.concat($);V>-1&&V<$.children.length;){const n1=$.children[V];if(B=h(n1,V,e1)(),B[0]===Ju)return B;V=typeof B[1]=="number"?B[1]:V+d}}return S}}}function Vb(n){return Array.isArray(n)?n:typeof n=="number"?[Bb,n]:n==null?l6:[n]}function s6(n,a,r,l){let s,c,d;typeof a=="function"?(c=void 0,d=a,s=r):(c=a,d=r,s=l),Hb(n,c,h,s);function h(v,p){const _=p[p.length-1],w=_?_.children.indexOf(v):void 0;return d(v,w,_)}}const ll={}.hasOwnProperty,Fb={};function $b(n,a){const r=a||Fb,l=new Map,s=new Map,c=new Map,d={...Eb,...r.handlers},h={all:p,applyData:Yb,definitionById:l,footnoteById:s,footnoteCounts:c,footnoteOrder:[],handlers:d,one:v,options:r,patch:Pb,wrap:Xb};return s6(n,function(_){if(_.type==="definition"||_.type==="footnoteDefinition"){const w=_.type==="definition"?l:s,k=String(_.identifier).toUpperCase();w.has(k)||w.set(k,_)}}),h;function v(_,w){const k=_.type,S=h.handlers[k];if(ll.call(h.handlers,k)&&S)return S(h,_,w);if(h.options.passThrough&&h.options.passThrough.includes(k)){if("children"in _){const{children:V,...e1}=_,$=wa(e1);return $.children=h.all(_),$}return wa(_)}return(h.options.unknownHandler||Qb)(h,_,w)}function p(_){const w=[];if("children"in _){const k=_.children;let S=-1;for(;++S<k.length;){const B=h.one(k[S],_);if(B){if(S&&k[S-1].type==="break"&&(!Array.isArray(B)&&B.type==="text"&&(B.value=Wu(B.value)),!Array.isArray(B)&&B.type==="element")){const V=B.children[0];V&&V.type==="text"&&(V.value=Wu(V.value))}Array.isArray(B)?w.push(...B):w.push(B)}}}return w}}function Pb(n,a){n.position&&(a.position=Cg(n))}function Yb(n,a){let r=a;if(n&&n.data){const l=n.data.hName,s=n.data.hChildren,c=n.data.hProperties;if(typeof l=="string")if(r.type==="element")r.tagName=l;else{const d="children"in r?r.children:[r];r={type:"element",tagName:l,properties:{},children:d}}r.type==="element"&&c&&Object.assign(r.properties,wa(c)),"children"in r&&r.children&&s!==null&&s!==void 0&&(r.children=s)}return r}function Qb(n,a){const r=a.data||{},l="value"in a&&!(ll.call(r,"hProperties")||ll.call(r,"hChildren"))?{type:"text",value:a.value}:{type:"element",tagName:"div",properties:{},children:n.all(a)};return n.patch(a,l),n.applyData(a,l)}function Xb(n,a){const r=[];let l=-1;for(a&&r.push({type:"text",value:`
`});++l<n.length;)l&&r.push({type:"text",value:`
`}),r.push(n[l]);return a&&n.length>0&&r.push({type:"text",value:`
`}),r}function Wu(n){let a=0,r=n.charCodeAt(a);for(;r===9||r===32;)a++,r=n.charCodeAt(a);return n.slice(a)}function ec(n,a){const r=$b(n,a),l=r.one(n,void 0),s=Rb(r),c=Array.isArray(l)?{type:"root",children:l}:l||{type:"root",children:[]};return s&&c.children.push({type:"text",value:`
`},s),c}function Gb(n,a){return n&&"run"in n?async function(r,l){const s=ec(r,{file:l,...a});await n.run(s,l)}:function(r,l){return ec(r,{file:l,...n||a})}}function tc(n){if(n)throw n}var $o,nc;function Zb(){if(nc)return $o;nc=1;var n=Object.prototype.hasOwnProperty,a=Object.prototype.toString,r=Object.defineProperty,l=Object.getOwnPropertyDescriptor,s=function(p){return typeof Array.isArray=="function"?Array.isArray(p):a.call(p)==="[object Array]"},c=function(p){if(!p||a.call(p)!=="[object Object]")return!1;var _=n.call(p,"constructor"),w=p.constructor&&p.constructor.prototype&&n.call(p.constructor.prototype,"isPrototypeOf");if(p.constructor&&!_&&!w)return!1;var k;for(k in p);return typeof k>"u"||n.call(p,k)},d=function(p,_){r&&_.name==="__proto__"?r(p,_.name,{enumerable:!0,configurable:!0,value:_.newValue,writable:!0}):p[_.name]=_.newValue},h=function(p,_){if(_==="__proto__")if(n.call(p,_)){if(l)return l(p,_).value}else return;return p[_]};return $o=function v(){var p,_,w,k,S,B,V=arguments[0],e1=1,$=arguments.length,n1=!1;for(typeof V=="boolean"&&(n1=V,V=arguments[1]||{},e1=2),(V==null||typeof V!="object"&&typeof V!="function")&&(V={});e1<$;++e1)if(p=arguments[e1],p!=null)for(_ in p)w=h(V,_),k=h(p,_),V!==k&&(n1&&k&&(c(k)||(S=s(k)))?(S?(S=!1,B=w&&s(w)?w:[]):B=w&&c(w)?w:{},d(V,{name:_,newValue:v(n1,B,k)})):typeof k<"u"&&d(V,{name:_,newValue:k}));return V},$o}var Kb=Zb();const Po=cl(Kb);function sl(n){if(typeof n!="object"||n===null)return!1;const a=Object.getPrototypeOf(n);return(a===null||a===Object.prototype||Object.getPrototypeOf(a)===null)&&!(Symbol.toStringTag in n)&&!(Symbol.iterator in n)}function Jb(){const n=[],a={run:r,use:l};return a;function r(...s){let c=-1;const d=s.pop();if(typeof d!="function")throw new TypeError("Expected function as last argument, not "+d);h(null,...s);function h(v,...p){const _=n[++c];let w=-1;if(v){d(v);return}for(;++w<s.length;)(p[w]===null||p[w]===void 0)&&(p[w]=s[w]);s=p,_?Wb(_,h)(...p):d(null,...p)}}function l(s){if(typeof s!="function")throw new TypeError("Expected `middelware` to be a function, not "+s);return n.push(s),a}}function Wb(n,a){let r;return l;function l(...d){const h=n.length>d.length;let v;h&&d.push(s);try{v=n.apply(this,d)}catch(p){const _=p;if(h&&r)throw _;return s(_)}h||(v&&v.then&&typeof v.then=="function"?v.then(c,s):v instanceof Error?s(v):c(v))}function s(d,...h){r||(r=!0,a(d,...h))}function c(d){s(null,d)}}const he={basename:e_,dirname:t_,extname:n_,join:i_,sep:"/"};function e_(n,a){if(a!==void 0&&typeof a!="string")throw new TypeError('"ext" argument must be a string');ii(n);let r=0,l=-1,s=n.length,c;if(a===void 0||a.length===0||a.length>n.length){for(;s--;)if(n.codePointAt(s)===47){if(c){r=s+1;break}}else l<0&&(c=!0,l=s+1);return l<0?"":n.slice(r,l)}if(a===n)return"";let d=-1,h=a.length-1;for(;s--;)if(n.codePointAt(s)===47){if(c){r=s+1;break}}else d<0&&(c=!0,d=s+1),h>-1&&(n.codePointAt(s)===a.codePointAt(h--)?h<0&&(l=s):(h=-1,l=d));return r===l?l=d:l<0&&(l=n.length),n.slice(r,l)}function t_(n){if(ii(n),n.length===0)return".";let a=-1,r=n.length,l;for(;--r;)if(n.codePointAt(r)===47){if(l){a=r;break}}else l||(l=!0);return a<0?n.codePointAt(0)===47?"/":".":a===1&&n.codePointAt(0)===47?"//":n.slice(0,a)}function n_(n){ii(n);let a=n.length,r=-1,l=0,s=-1,c=0,d;for(;a--;){const h=n.codePointAt(a);if(h===47){if(d){l=a+1;break}continue}r<0&&(d=!0,r=a+1),h===46?s<0?s=a:c!==1&&(c=1):s>-1&&(c=-1)}return s<0||r<0||c===0||c===1&&s===r-1&&s===l+1?"":n.slice(s,r)}function i_(...n){let a=-1,r;for(;++a<n.length;)ii(n[a]),n[a]&&(r=r===void 0?n[a]:r+"/"+n[a]);return r===void 0?".":a_(r)}function a_(n){ii(n);const a=n.codePointAt(0)===47;let r=r_(n,!a);return r.length===0&&!a&&(r="."),r.length>0&&n.codePointAt(n.length-1)===47&&(r+="/"),a?"/"+r:r}function r_(n,a){let r="",l=0,s=-1,c=0,d=-1,h,v;for(;++d<=n.length;){if(d<n.length)h=n.codePointAt(d);else{if(h===47)break;h=47}if(h===47){if(!(s===d-1||c===1))if(s!==d-1&&c===2){if(r.length<2||l!==2||r.codePointAt(r.length-1)!==46||r.codePointAt(r.length-2)!==46){if(r.length>2){if(v=r.lastIndexOf("/"),v!==r.length-1){v<0?(r="",l=0):(r=r.slice(0,v),l=r.length-1-r.lastIndexOf("/")),s=d,c=0;continue}}else if(r.length>0){r="",l=0,s=d,c=0;continue}}a&&(r=r.length>0?r+"/..":"..",l=2)}else r.length>0?r+="/"+n.slice(s+1,d):r=n.slice(s+1,d),l=d-s-1;s=d,c=0}else h===46&&c>-1?c++:c=-1}return r}function ii(n){if(typeof n!="string")throw new TypeError("Path must be a string. Received "+JSON.stringify(n))}const o_={cwd:l_};function l_(){return"/"}function ul(n){return!!(n!==null&&typeof n=="object"&&"href"in n&&n.href&&"protocol"in n&&n.protocol&&n.auth===void 0)}function s_(n){if(typeof n=="string")n=new URL(n);else if(!ul(n)){const a=new TypeError('The "path" argument must be of type string or an instance of URL. Received `'+n+"`");throw a.code="ERR_INVALID_ARG_TYPE",a}if(n.protocol!=="file:"){const a=new TypeError("The URL must be of scheme file");throw a.code="ERR_INVALID_URL_SCHEME",a}return u_(n)}function u_(n){if(n.hostname!==""){const l=new TypeError('File URL host must be "localhost" or empty on darwin');throw l.code="ERR_INVALID_FILE_URL_HOST",l}const a=n.pathname;let r=-1;for(;++r<a.length;)if(a.codePointAt(r)===37&&a.codePointAt(r+1)===50){const l=a.codePointAt(r+2);if(l===70||l===102){const s=new TypeError("File URL path must not include encoded / characters");throw s.code="ERR_INVALID_FILE_URL_PATH",s}}return decodeURIComponent(a)}const Yo=["history","path","basename","stem","extname","dirname"];class u6{constructor(a){let r;a?ul(a)?r={path:a}:typeof a=="string"||c_(a)?r={value:a}:r=a:r={},this.cwd="cwd"in r?"":o_.cwd(),this.data={},this.history=[],this.messages=[],this.value,this.map,this.result,this.stored;let l=-1;for(;++l<Yo.length;){const c=Yo[l];c in r&&r[c]!==void 0&&r[c]!==null&&(this[c]=c==="history"?[...r[c]]:r[c])}let s;for(s in r)Yo.includes(s)||(this[s]=r[s])}get basename(){return typeof this.path=="string"?he.basename(this.path):void 0}set basename(a){Xo(a,"basename"),Qo(a,"basename"),this.path=he.join(this.dirname||"",a)}get dirname(){return typeof this.path=="string"?he.dirname(this.path):void 0}set dirname(a){ic(this.basename,"dirname"),this.path=he.join(a||"",this.basename)}get extname(){return typeof this.path=="string"?he.extname(this.path):void 0}set extname(a){if(Qo(a,"extname"),ic(this.dirname,"extname"),a){if(a.codePointAt(0)!==46)throw new Error("`extname` must start with `.`");if(a.includes(".",1))throw new Error("`extname` cannot contain multiple dots")}this.path=he.join(this.dirname,this.stem+(a||""))}get path(){return this.history[this.history.length-1]}set path(a){ul(a)&&(a=s_(a)),Xo(a,"path"),this.path!==a&&this.history.push(a)}get stem(){return typeof this.path=="string"?he.basename(this.path,this.extname):void 0}set stem(a){Xo(a,"stem"),Qo(a,"stem"),this.path=he.join(this.dirname||"",a+(this.extname||""))}fail(a,r,l){const s=this.message(a,r,l);throw s.fatal=!0,s}info(a,r,l){const s=this.message(a,r,l);return s.fatal=void 0,s}message(a,r,l){const s=new o3(a,r,l);return this.path&&(s.name=this.path+":"+s.name,s.file=this.path),s.fatal=!1,this.messages.push(s),s}toString(a){return this.value===void 0?"":typeof this.value=="string"?this.value:new TextDecoder(a||void 0).decode(this.value)}}function Qo(n,a){if(n&&n.includes(he.sep))throw new Error("`"+a+"` cannot be a path: did not expect `"+he.sep+"`")}function Xo(n,a){if(!n)throw new Error("`"+a+"` cannot be empty")}function ic(n,a){if(!n)throw new Error("Setting `"+a+"` requires `path` to be set too")}function c_(n){return!!(n&&typeof n=="object"&&"byteLength"in n&&"byteOffset"in n)}const f_=function(n){const l=this.constructor.prototype,s=l[n],c=function(){return s.apply(c,arguments)};return Object.setPrototypeOf(c,l),c},d_={}.hasOwnProperty;class Ol extends f_{constructor(){super("copy"),this.Compiler=void 0,this.Parser=void 0,this.attachers=[],this.compiler=void 0,this.freezeIndex=-1,this.frozen=void 0,this.namespace={},this.parser=void 0,this.transformers=Jb()}copy(){const a=new Ol;let r=-1;for(;++r<this.attachers.length;){const l=this.attachers[r];a.use(...l)}return a.data(Po(!0,{},this.namespace)),a}data(a,r){return typeof a=="string"?arguments.length===2?(Ko("data",this.frozen),this.namespace[a]=r,this):d_.call(this.namespace,a)&&this.namespace[a]||void 0:a?(Ko("data",this.frozen),this.namespace=a,this):this.namespace}freeze(){if(this.frozen)return this;const a=this;for(;++this.freezeIndex<this.attachers.length;){const[r,...l]=this.attachers[this.freezeIndex];if(l[0]===!1)continue;l[0]===!0&&(l[0]=void 0);const s=r.call(a,...l);typeof s=="function"&&this.transformers.use(s)}return this.frozen=!0,this.freezeIndex=Number.POSITIVE_INFINITY,this}parse(a){this.freeze();const r=da(a),l=this.parser||this.Parser;return Go("parse",l),l(String(r),r)}process(a,r){const l=this;return this.freeze(),Go("process",this.parser||this.Parser),Zo("process",this.compiler||this.Compiler),r?s(void 0,r):new Promise(s);function s(c,d){const h=da(a),v=l.parse(h);l.run(v,h,function(_,w,k){if(_||!w||!k)return p(_);const S=w,B=l.stringify(S,k);m_(B)?k.value=B:k.result=B,p(_,k)});function p(_,w){_||!w?d(_):c?c(w):r(void 0,w)}}}processSync(a){let r=!1,l;return this.freeze(),Go("processSync",this.parser||this.Parser),Zo("processSync",this.compiler||this.Compiler),this.process(a,s),rc("processSync","process",r),l;function s(c,d){r=!0,tc(c),l=d}}run(a,r,l){ac(a),this.freeze();const s=this.transformers;return!l&&typeof r=="function"&&(l=r,r=void 0),l?c(void 0,l):new Promise(c);function c(d,h){const v=da(r);s.run(a,v,p);function p(_,w,k){const S=w||a;_?h(_):d?d(S):l(void 0,S,k)}}}runSync(a,r){let l=!1,s;return this.run(a,r,c),rc("runSync","run",l),s;function c(d,h){tc(d),s=h,l=!0}}stringify(a,r){this.freeze();const l=da(r),s=this.compiler||this.Compiler;return Zo("stringify",s),ac(a),s(a,l)}use(a,...r){const l=this.attachers,s=this.namespace;if(Ko("use",this.frozen),a!=null)if(typeof a=="function")v(a,r);else if(typeof a=="object")Array.isArray(a)?h(a):d(a);else throw new TypeError("Expected usable value, not `"+a+"`");return this;function c(p){if(typeof p=="function")v(p,[]);else if(typeof p=="object")if(Array.isArray(p)){const[_,...w]=p;v(_,w)}else d(p);else throw new TypeError("Expected usable value, not `"+p+"`")}function d(p){if(!("plugins"in p)&&!("settings"in p))throw new Error("Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither");h(p.plugins),p.settings&&(s.settings=Po(!0,s.settings,p.settings))}function h(p){let _=-1;if(p!=null)if(Array.isArray(p))for(;++_<p.length;){const w=p[_];c(w)}else throw new TypeError("Expected a list of plugins, not `"+p+"`")}function v(p,_){let w=-1,k=-1;for(;++w<l.length;)if(l[w][0]===p){k=w;break}if(k===-1)l.push([p,..._]);else if(_.length>0){let[S,...B]=_;const V=l[k][1];sl(V)&&sl(S)&&(S=Po(!0,V,S)),l[k]=[p,S,...B]}}}}const p_=new Ol().freeze();function Go(n,a){if(typeof a!="function")throw new TypeError("Cannot `"+n+"` without `parser`")}function Zo(n,a){if(typeof a!="function")throw new TypeError("Cannot `"+n+"` without `compiler`")}function Ko(n,a){if(a)throw new Error("Cannot call `"+n+"` on a frozen processor.\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.")}function ac(n){if(!sl(n)||typeof n.type!="string")throw new TypeError("Expected node, got `"+n+"`")}function rc(n,a,r){if(!r)throw new Error("`"+n+"` finished async. Use `"+a+"` instead")}function da(n){return h_(n)?n:new u6(n)}function h_(n){return!!(n&&typeof n=="object"&&"message"in n&&"messages"in n)}function m_(n){return typeof n=="string"||g_(n)}function g_(n){return!!(n&&typeof n=="object"&&"byteLength"in n&&"byteOffset"in n)}const y_="https://github.com/remarkjs/react-markdown/blob/main/changelog.md",oc=[],lc={allowDangerousHtml:!0},v_=/^(https?|ircs?|mailto|xmpp)$/i,b_=[{from:"astPlugins",id:"remove-buggy-html-in-markdown-parser"},{from:"allowDangerousHtml",id:"remove-buggy-html-in-markdown-parser"},{from:"allowNode",id:"replace-allownode-allowedtypes-and-disallowedtypes",to:"allowElement"},{from:"allowedTypes",id:"replace-allownode-allowedtypes-and-disallowedtypes",to:"allowedElements"},{from:"className",id:"remove-classname"},{from:"disallowedTypes",id:"replace-allownode-allowedtypes-and-disallowedtypes",to:"disallowedElements"},{from:"escapeHtml",id:"remove-buggy-html-in-markdown-parser"},{from:"includeElementIndex",id:"#remove-includeelementindex"},{from:"includeNodeIndex",id:"change-includenodeindex-to-includeelementindex"},{from:"linkTarget",id:"remove-linktarget"},{from:"plugins",id:"change-plugins-to-remarkplugins",to:"remarkPlugins"},{from:"rawSourcePos",id:"#remove-rawsourcepos"},{from:"renderers",id:"change-renderers-to-components",to:"components"},{from:"source",id:"change-source-to-children",to:"children"},{from:"sourcePos",id:"#remove-sourcepos"},{from:"transformImageUri",id:"#add-urltransform",to:"urlTransform"},{from:"transformLinkUri",id:"#add-urltransform",to:"urlTransform"}];function __(n){const a=w_(n),r=x_(n);return S_(a.runSync(a.parse(r),r),n)}function w_(n){const a=n.rehypePlugins||oc,r=n.remarkPlugins||oc,l=n.remarkRehypeOptions?{...n.remarkRehypeOptions,...lc}:lc;return p_().use(eb).use(r).use(Gb,l).use(a)}function x_(n){const a=n.children||"",r=new u6;return typeof a=="string"&&(r.value=a),r}function S_(n,a){const r=a.allowedElements,l=a.allowElement,s=a.components,c=a.disallowedElements,d=a.skipHtml,h=a.unwrapDisallowed,v=a.urlTransform||A_;for(const _ of b_)Object.hasOwn(a,_.from)&&(""+_.from+(_.to?"use `"+_.to+"` instead":"remove it")+y_+_.id,void 0);return s6(n,p),Rg(n,{Fragment:T1.Fragment,components:s,ignoreInvalidStyle:!0,jsx:T1.jsx,jsxs:T1.jsxs,passKeys:!0,passNode:!0});function p(_,w,k){if(_.type==="raw"&&k&&typeof w=="number")return d?k.children.splice(w,1):k.children[w]={type:"text",value:_.value},w;if(_.type==="element"){let S;for(S in Ho)if(Object.hasOwn(Ho,S)&&Object.hasOwn(_.properties,S)){const B=_.properties[S],V=Ho[S];(V===null||V.includes(_.tagName))&&(_.properties[S]=v(String(B||""),S,_))}}if(_.type==="element"){let S=r?!r.includes(_.tagName):c?c.includes(_.tagName):!1;if(!S&&l&&typeof w=="number"&&(S=!l(_,w,k)),S&&k&&typeof w=="number")return h&&_.children?k.children.splice(w,1,..._.children):k.children.splice(w,1),w}}}function A_(n){const a=n.indexOf(":"),r=n.indexOf("?"),l=n.indexOf("#"),s=n.indexOf("/");return a===-1||s!==-1&&a>s||r!==-1&&a>r||l!==-1&&a>l||v_.test(n.slice(0,a))?n:""}function k_({recipe:n}){return T1.jsxs("section",{className:"recipe",children:[T1.jsx("h3",{children:"Your personal chef recommends:"}),T1.jsx("div",{className:"generated-recipe",children:T1.jsx(__,{children:n})})]})}function E_({resetAll:n}){return T1.jsxs("div",{className:"flex get-recipe-prompt",children:[T1.jsxs("div",{children:[T1.jsx("h3",{children:"Start again?"}),T1.jsx("p",{children:"Generate a recipe from your list of ingredients."})]}),T1.jsx("button",{onClick:n,className:"orange-btn",children:"Redo"})]})}function T_(){const[n,a]=d2.useState([]),[r,l]=d2.useState(""),[s,c]=d2.useState(!1);function d(){console.log("resetAll button is clicked"),a([]),l("")}function h(p){console.log("form is submitted");const _=p.get("ingredient-field");_&&a(w=>[...w,_])}async function v(){console.log("get recipe is clicked!"),c(!0);const p=await U8(n);c(!1),l(p)}return T1.jsxs("main",{children:[T1.jsxs("form",{action:h,children:[T1.jsx("input",{type:"text",name:"ingredient-field",id:"ingredient-field",placeholder:"e.g. cheese"}),T1.jsx("button",{children:"Add ingredient"})]}),T1.jsx(z8,{ingredients:n}),r?T1.jsx(E_,{resetAll:d}):T1.jsx(ag,{ingredients:n,getRecipe:v}),s?T1.jsx(ig,{}):void 0,r&&!s?T1.jsx(k_,{recipe:r}):void 0]})}function C_(){return T1.jsxs(T1.Fragment,{children:[T1.jsx(Af,{}),T1.jsx(T_,{})]})}xf.createRoot(document.querySelector("#root")).render(T1.jsx(C_,{}));
